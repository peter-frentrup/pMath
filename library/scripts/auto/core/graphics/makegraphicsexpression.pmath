
BeginPackage("System`Graphics`")

MakeGraphicsExpression
MakeGraphicsExpressionOptions

Begin("System`Graphics`Private`")


MakeGraphicsExpression(~x)               ::= HoldComplete(x);

MakeGraphicsExpression(~multi: List)     ::= HoldComplete @@ List @ HoldComplete(multi).Map(MakeGraphicsExpression, 2).ReleaseHold.Replace(HoldComplete(~~~x) :> x, 1)
MakeGraphicsExpression(LineBox(~~~args)) ::= HoldComplete(Line(args))
MakeGraphicsExpression(~c: RGBColor)     ::= HoldComplete(c);
MakeGraphicsExpression(~c: Hue)          ::= HoldComplete(c);
MakeGraphicsExpression(~c: GrayLevel)    ::= HoldComplete(c);


Attributes(makeHeldGraphicsOption):= {HoldAllComplete}
makeHeldGraphicsOption(~r)::= HoldComplete(r)
makeHeldGraphicsOption((h: Rule|RuleDelayed)(~lhs, NCache(~v,~)))::=
	HoldComplete(h(lhs, v))


MakeGraphicsExpressionOptions({~~~opts})::= ComposeHeldExpr(List, MakeGraphicsExpressionOptions(opts))
MakeGraphicsExpressionOptions(~~~opts)::= Join @@ HoldComplete(opts).Map(makeHeldGraphicsOption)
MakeGraphicsExpressionOptions({})::= HoldComplete({})
MakeGraphicsExpressionOptions()::= HoldComplete()


End()

EndPackage()



BeginPackage("System`Graphics`")

System`Graphics`ComposeHeldExpr
System`Graphics`MakeGraphicsBoxes
System`Graphics`MakeGraphicsBoxesOptions
System`Graphics`MakeGraphicsExpression
System`Graphics`MakeGraphicsExpressionOptions

System`ListLinePlot
System`PlotStyle

Begin("System`Graphics`Private`")


ComposeHeldExpr(~sym, HoldComplete(~~~a))::= 
	HoldComplete(sym(a))

ComposeHeldExpr(~sym, HoldComplete(~~~a), HoldComplete(~~~b), ~~~c:HoldComplete)::=
	ComposeHeldExpr(sym, HoldComplete(a,b), c)

ComposeHeldExpr(~~~):= $Failed


Unprotect(Graphics)
Attributes(Graphics):= {ReadProtected}
MakeBoxes(Graphics(~elements, ~~~options))::= 
	ReleaseHold @ ComposeHeldExpr(GraphicsBox, MakeGraphicsBoxes(elements), MakeGraphicsBoxesOptions(options))
Protect(Graphics)


Unprotect(GraphicsBox)
Attributes(GraphicsBox):= {ReadProtected, HoldAll}
GraphicsBox/: MakeExpression(GraphicsBox(~elements, ~~~options))::=
	ComposeHeldExpr(Graphics, MakeGraphicsExpression(elements), MakeGraphicsExpressionOptions(options))
Protect(GraphicsBox)


Attributes(MakeGraphicsBoxes):=             {HoldAllComplete, Protected}
Attributes(MakeGraphicsBoxesOptions):=      {HoldAllComplete, Protected}
Attributes(MakeGraphicsExpression):=        {HoldAllComplete, Protected}
Attributes(MakeGraphicsExpressionOptions):= {HoldAllComplete, Protected}

AutoLoad(Hold(MakeGraphicsBoxes, MakeGraphicsBoxesOptions), 
	ToFileName(DirectoryName($Input), "makegraphicsboxes.pmath"))

AutoLoad(Hold(MakeGraphicsExpression, MakeGraphicsExpressionOptions),
	ToFileName(DirectoryName($Input), "makegraphicsexpression.pmath"))

AutoLoad(Hold(ListLinePlot),
	ToFileName(DirectoryName($Input), "ListLinePlot.pmath"))


End()

EndPackage()

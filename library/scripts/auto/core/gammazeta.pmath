/* Gamma and related functions.
   
   Peter Frentrup
   last change: 2010-03-12
 */

Begin("System`BernoulliB`")

System`BernoulliB`cache;

/* Ramanujan's congruences:
   if n != 0 even:
   BernoulliB(2n) = a(n) - Sum(Binomial(n+3, n-6j) * BernoulliB(n-6j) , j->1..Floor(n/6))
   
   a(n) = -(n+3)/6 iff n = 4 (mod 6)
   a(n) = (n+3)/3  otherwise
 */
BernoulliB(0):= 1;
BernoulliB(1):= -1/2;
BernoulliB(~ ? IsOdd ? IsPositive):= 0;
BernoulliB(~n ? IsEven ? IsPositive)::= Local({sum, j},
	If(IsNumber(cache(n)), Return(cache(n)));
	
	sum:= If(Mod(n, 6) === 4, -(n+3)/6, (n+3)/3);
	Do(
		sum-= Binomial(n+3, n-6j) * BernoulliB(n-6j), 
		j -> Quotient(n,6)..1..-1);
	
	sum / Binomial(n+3, n)
	)
b:BernoulliB(~?IsNegative) /? (Message(BernoulliB::intnm, 1, HoldForm(b));False):= $Failed;

End()


Begin("System`Gamma`")
/* Based on 
   http://en.literateprograms.org/Gamma_function_with_Spouge%27s_formula_%28Mathematica%29

   TODO: increase working precision, calculate final precision in advance
*/
gammapos(~zz)::= Local({a,sum,k,z},
	z:= zz;
	a:= Ceiling(Accuracy(zz) * Log(10)/Log(2 Pi));
	/* If(!IsMachineNumber(zz), z:= SetAccuracy(zz,Accuracy(zz)+20)); */
	z-= 1;
	sum:= 1;
	Do(
		sum+= (2 Pi)^(-1/2) * (-1)^(k-1)/(k-1)! * (a-k)^(k-1/2) * Exp(a-k) / (z+k),
		k->1..a-1);
	
	(z+a)^(z+1/2) * Exp(-z-a) * Sqrt(2Pi) * sum
	)

Gamma(~z ? IsInexactNumber)::= 
	If(Re(z) > 0, 
		gammapos(z)
	, 
		With({y:= Sin(Pi z)}, 
			If((y = 0) === True, 
				ComplexInfinity
			, 
				Pi/(y Gamma(1-z)))))

LogGamma(~z)::= With({y:= Log(Gamma(z))}, y /? HoldComplete(y) =!= HoldComplete(Log(Gamma(z))))

End()


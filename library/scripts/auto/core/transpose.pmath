Begin("System`Private`")

Transpose(~tensor, ?perm:{2,1})::= With({result:= Catch(transposeHelper(tensor, perm), $Failed)}, result /? result =!= $Failed)

transposeHelper(~tensor, ~perm:List)::= Local({tdim, rdim, invperm, indices, result, is, tis, i},
	invperm:=Table(
		Select(Array(Length(perm)), perm[#] = ri &),
		ri -> 1..Max(perm));
	tdim:= Dimensions(tensor);
	rdim:= Table(
		If(Length(is) < 1, Throw($Failed));
		If(First(is) > Length(tdim), Throw($Failed));
		If(Length(Union(tdim[is])) != 1, Throw($Failed));
		tdim[First(is)],
		is -> invperm);
	result:= Array(List, rdim);
	indices:= Flatten(result, Length(rdim)-1);
	tis:= ConstantArray(0, Length(tdim));
	Do(
		Do(
			tis[invperm[i]]:= is[i],
			i -> 1..Length(is));
		result[Sequence @@ is]:= tensor[Sequence @@ tis],
		is -> indices);
	Return(result)
)

End()

BeginPackage("System`QuantityUnits`")

QuantityTimes
QuantityTimesMagnitude

Begin("System`QuantityUnits`Private`")


Quantity/: Power(~q:Quantity ? IsValidQuantity, ~y) ::= With({res:= QuantityPower(q, y)}, res /? res =!= $Failed)

Quantity/: (~q1:Quantity ? IsValidQuantity) * (~q2:Quantity ? IsValidQuantity)::= With({res:= QuantityTimes(q1, q2)}, res /? res =!= $Failed)
Quantity/: ~x?IsNumeric * (~q:Quantity ? IsValidQuantity)::= With({res:= QuantityTimesMagnitude(x, q)}, res /? res =!= $Failed)

QuantityPower(HoldPattern(Quantity(~mag, ~unit)), y: (~:Integer | ~:Rational | ~:Real))::= newValidQuanitity(mag^y, unit^y)
%QuantityPower(HoldPattern(Quantity(~mag, ~unit)), ~y)::= Quantity(mag^y, unit^y)
QuantityPower(~~~):= $Failed


AutoLoad(Hold(QuantityTimes, QuantityTimesMagnitude),
    ToFileName({DirectoryName($Input)}, "products.pmath"))


End()

EndPackage()

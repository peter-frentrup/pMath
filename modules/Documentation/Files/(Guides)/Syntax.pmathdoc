/* pMath Document */

Document({
  SectionGroup({Section("Syntax", "Title"), 
    Section(TextData({"The ", StyleBox("pMath", FontSlant -> Italic), 
       " syntax is based on two dimensional mathematical notation, similar to \
       ", StyleBox("Mathematica", FontSlant -> Italic), " or ", 
       StyleBox("Maple", FontSlant -> Italic), "."}), "Text"), 
    SectionGroup({Section("Character strings", "Section"), 
      Section(
       TextData({
         "Character strings are delimited by double quote characters ", 
         BoxData(StringBox("\"like this\"")), 
         ". Inside text strings, special characters are prefixed with a \
         backslash."}), "Text"), 
      Section(
       TextData({
         GridBox({{{"\"", StyleBox("text", FontSlant -> Italic), "\""}, 
            "a character string"}, {"\\\"", "a literal \" in a text string"}, {
            "\\\\", "a literal \\ in a text string"}, {
            "\\  (at end of line)", 
            "ignore the following line-break and spaces"}, {
            {"\\[U+", StyleBox("nnnn", FontSlant -> Italic), "]"}, 
            "a character by its Unicode codepoint"}, {
            {"\\[", StyleBox("Name", FontSlant -> Italic), "]"}, 
            "a character by its long name"}, {"\\n", "a line break"}, {
            "\\t", "a tabulation character"}, {
            "\\r", "a carriage return character"}, {
            "\\(...\\)", 
            "a substring representing two-dimensional boxes"}})}), 
       "DefinitionBox"), Section("Entering character strings.", "Caption")}, 
     All), SectionGroup({Section("Symbols", "Section"), 
      Section(
       TextData({
         GridBox({{{StyleBox("name", FontSlant -> Italic)}, "symbol name"}, {
            {StyleBox("namespace", FontSlant -> Italic), "`", 
             StyleBox("name", FontSlant -> Italic)}, 
            "symbol name in a specified namespace"}, {
            {StyleBox("namespace", FontSlant -> Italic), "`"}, 
            "namespace name"}, {
            {StyleBox("namespace", FontSlant -> Italic), SubscriptBox("1"), 
             "`", StyleBox("namespace", FontSlant -> Italic), 
             SubscriptBox("2"), "`"}, "nested namespaces"}, {
            {BoxData("\[ExponentialE]")}, {
             TemplateBox({"ExponentialE"}, "ReferenceHyperlink")}}, {
            {BoxData("\[Pi]")}, {TemplateBox({"Pi"}, "ReferenceHyperlink")}}, {
            {BoxData("\[ImaginaryI]"), ", ", BoxData("\[ImaginaryJ]")}, {
             TemplateBox({"ImaginaryI"}, "ReferenceHyperlink")}}, {
            "\[Degree]", {TemplateBox({"Degree"}, "ReferenceHyperlink")}}})}), 
       "DefinitionBox"), Section("Forming symbol names.", "Caption")}, All), 
    SectionGroup({Section("Numbers", "Section"), 
      Section(
       TextData({
         GridBox({{{StyleBox("nnnn", FontSlant -> Italic)}, 
            "an integer given by a string of decimal digits"}, {
            {StyleBox("base", FontSlant -> Italic), "^^", 
             StyleBox("nnnn", FontSlant -> Italic)}, 
            "an integer in a given base"}})}), "DefinitionBox"), 
      Section("Entering integer numbers.", "Caption"), 
      Section(
       TextData({
         GridBox({
           {{StyleBox("nn", FontSlant -> Italic), ".", 
             StyleBox("nnn", FontSlant -> Italic)}, 
            "a machine precision floating point number"}, {
            {StyleBox("nn", FontSlant -> Italic), ".", 
             StyleBox("nn\[Ellipsis]nnn", FontSlant -> Italic), "`"}, 
            "explicitly request machine precision"}, {
            {StyleBox("base", FontSlant -> Italic), "^^", 
             StyleBox({StyleBox("nnn", FontSlant -> Italic), ".", 
               StyleBox("nn", FontSlant -> Italic)}, FontSlant -> Italic), 
             "`"}, "specify digits in a given base"}})}), "DefinitionBox"), 
      Section(
       "Simple floating point numbers for fast but possibly inaccurate \
       calculations.", "Caption"), 
      Section(
       TextData({
         GridBox({
           {{StyleBox("mmm", FontSlant -> Italic), ".", 
             StyleBox("mmmmm", FontSlant -> Italic), "[", 
             StyleBox("", FontSlant -> Italic), "+/-", 
             StyleBox("RRR", FontSlant -> Italic), "*^", 
             StyleBox("radexp", FontSlant -> Italic), "]`", 
             StyleBox("prec", FontSlant -> Italic), "*^", 
             StyleBox("exp", FontSlant -> Italic)}}, {
            {StyleBox("mmm", FontSlant -> Italic), ".", 
             StyleBox("mm", FontSlant -> Italic), "[", 
             StyleBox("mmm", FontSlant -> Italic), "+/-", 
             StyleBox("rrr", FontSlant -> Italic), "]`", 
             StyleBox("prec", FontSlant -> Italic), "*^", 
             StyleBox("exp", FontSlant -> Italic)}}, {
            {StyleBox({StyleBox("base", FontSlant -> Italic)}, "Arg"), "^^", 
             StyleBox("mmm", FontSlant -> Italic), ".", 
             StyleBox("mm", FontSlant -> Italic), "[", 
             StyleBox("mmm", FontSlant -> Italic), "+/-", 
             StyleBox("rrr", FontSlant -> Italic), "]`", 
             StyleBox("prec", FontSlant -> Italic), "*^", 
             StyleBox("exp", FontSlant -> Italic)}}})}), "DefinitionBox"), 
      Section("Arbitrary precision floating point numbers.", "Caption"), 
      Section(
       TextData({
         GridBox({
           {{StyleBox("nn", FontSlant -> Italic), ".", 
             StyleBox("nn\[Ellipsis]nnn", FontSlant -> Italic), "``"}, 
            "infinite precision floating point number"}, {
            {StyleBox("nn", FontSlant -> Italic), ".", 
             StyleBox("nn\[Ellipsis]nnn", FontSlant -> Italic), "``*^", 
             StyleBox("exp", FontSlant -> Italic)}, "exponent in base 10"}, {
            {StyleBox("base", FontSlant -> Italic), "^^", 
             StyleBox({StyleBox("nnn", FontSlant -> Italic), ".", 
               StyleBox("nn", FontSlant -> Italic)}, FontSlant -> Italic), 
             "``"}, "specify digits in a given base"}, {
            {StyleBox("base", FontSlant -> Italic), "^^", 
             StyleBox({StyleBox("nnn", FontSlant -> Italic), ".", 
               StyleBox("nn", FontSlant -> Italic)}, FontSlant -> Italic), 
             "``*^", StyleBox("exp", FontSlant -> Italic)}, 
            "exponent in given base"}})}), "DefinitionBox"), 
      Section(
       "Rational numbers in floating point form with infinite precision.", 
       "Caption")}, All), Section("Operators", "Section"), 
    SectionGroup({Section("Two-dimensional input forms", "Section"), 
      Section(TextData({GridBox({{"", ""}}), 
         GridBox({{{FractionBox("x", "y")}, {
             "division: ", BoxData({"x", "/", "y"})}}, {
            {BoxData({"x", SuperscriptBox("y")})}, {
             TemplateBox({"Power"}, "ReferenceHyperlink"), "(", BoxData("x"), 
             ", ", BoxData("y"), ")"}}, {{BoxData(SqrtBox("x"))}, {
             "complex square root ", TemplateBox({"Sqrt"}, 
              "ReferenceHyperlink"), "(", BoxData("x"), ")"}}, {
            {BoxData(RadicalBox("x", "n"))}, {
             "complex root ", TemplateBox({"Power"}, "ReferenceHyperlink"), 
             "(", BoxData("x"), ", ", BoxData({"1", "/", "n"}), ")"}}, {
            {BoxData(RadicalBox("x", "n", SurdForm -> True))}, {
             "real root ", TemplateBox({"Surd"}, "ReferenceHyperlink"), "(", 
             BoxData("x"), ", ", BoxData("n"), ")"}}, {
            {BoxData(
              GridBox({{{"a", SubscriptBox({"1", "\[InvisibleComma]", "1"})}, {
                  "a", SubscriptBox({"1", "\[InvisibleComma]", "2"})}, 
                 "\[Ellipsis]"}, {
                 {"a", SubscriptBox({"2", "\[InvisibleComma]", "1"})}, {
                  "a", SubscriptBox({"2", "\[InvisibleComma]", "2"})}, 
                 "\[Ellipsis]"}}))}, {
             "matrix ", 
             BoxData({
               "{", {
                {"{", {{"a", SubscriptBox({"1", "\[InvisibleComma]", "1"})}, 
                  ",", {"a", SubscriptBox({"1", "\[InvisibleComma]", "2"})}, 
                  ",", "\[Ellipsis]"}, "}"}, ",", {
                 "{", {{"a", SubscriptBox({"2", "\[InvisibleComma]", "1"})}, 
                  ",", {"a", SubscriptBox({"2", "\[InvisibleComma]", "2"})}, 
                  ",", "\[Ellipsis]"}, "}"}}, "}"})}}, {
            {BoxData({"\[Piecewise]", 
               GridBox({
                 {{StyleBox("val", FontSlant -> Italic), SubscriptBox("1")}, {
                   StyleBox("cond", FontSlant -> Italic), SubscriptBox("1")}}, 
                 {{StyleBox("val", FontSlant -> Italic), SubscriptBox("2")}, {
                   StyleBox("cond", FontSlant -> Italic), SubscriptBox("2")}}, 
                 {/\/(" ", " ", "\[VerticalEllipsis]"), 
                  /\/(" ", " ", " ", "\[VerticalEllipsis]")}})})}, {
             TemplateBox({"Piecewise"}, "ReferenceHyperlink"), "(", 
             BoxData({
               "{", {
                {"{", {{StyleBox("val", FontSlant -> Italic), 
                   SubscriptBox("1")}, ",", {
                   StyleBox("cond", FontSlant -> Italic), SubscriptBox("1")}}, 
                 "}"}, ",", {
                 "{", {{StyleBox("val", FontSlant -> Italic), 
                   SubscriptBox("2")}, ",", {
                   StyleBox("cond", FontSlant -> Italic), SubscriptBox("2")}}, 
                 "}"}, ",", "\[Ellipsis]"}, "}"}), ")"}}})}), 
       "DefinitionBox"), 
      Section("Two-dimensional input forms with built-in evaluation rules.", 
       "Caption")}, All), SectionGroup({Section("Function call", "Section"), 
      Section(TextData({GridBox({{"", ""}}), 
         GridBox({
           {{BoxData({"f", "(", {"x", ",", "y", ",", "\[Ellipsis]"}, ")"})}, {
             "function ", BoxData("f"), " applied to arguments ", 
             BoxData({"x", ",", "y", ",", "\[Ellipsis]"})}}, {
            {BoxData({"f", "@", "x"})}, {
             "prefix form for ", BoxData({"f", "(", "x", ")"})}}, {
            {BoxData({"x", ".", "f"})}, {"property form for ", 
             BoxData({"f", "(", "x", ")"})}}, {
            {BoxData({"x", ".", "f", "(", ")"})}, {
             "property form for ", BoxData({"f", "(", "x", ")"})}}, {
            {BoxData({"x", ".", "f", "(", {"y", ",", "\[Ellipsis]"}, ")"})}, {
             "property form for ", 
             BoxData({"f", "(", {"x", ",", "y", ",", "\[Ellipsis]"}, ")"})}}, {
            {BoxData({"x", "//", "f"})}, {
             "suffix form for ", BoxData({"f", "(", "x", ")"})}}, {
            {BoxData({"x", "|>", "f"})}, {"streaming form for ", 
             BoxData({"f", "(", "x", ")"})}}, {
            {BoxData({"x", "|>", {"f", "(", ")"}})}, {
             "streaming form for ", BoxData({"f", "(", "x", ")"})}}, {
            {BoxData({"x", "|>", {"f", "(", {"y", ",", "\[Ellipsis]"}, 
                ")"}})}, {"streaming form for ", 
             BoxData({"f", "(", {"x", ",", "y", ",", "\[Ellipsis]"}, 
               ")"})}}})}), "DefinitionBox"), 
      Section("Two-dimensional input forms with built-in evaluation rules.", 
       "Caption")}, All), 
    SectionGroup({Section("Statement blocks", "Section"), 
      Section(
       TextData({
         GridBox({
           {{BoxData({
               "Block", {
                "{", {
                 "\n", {{{StyleBox("statement", FontSlant -> Italic), 
                    SubscriptBox("1")}, "\n", {
                    StyleBox("statement", FontSlant -> Italic), 
                    SubscriptBox("2")}, "\n", "\[Ellipsis]", "\n", {
                    StyleBox("statement", FontSlant -> Italic), 
                    SubscriptBox("n")}}, "\n"}}, "}"}})}, 
            "a block of multiple statements"}})}), "DefinitionBox"), 
      Section("Basic block syntax.", "Caption"), 
      Section(
       TextData({
         GridBox({
           {{BoxData({
               {"Do", "(", {StyleBox("i", FontSlant -> Italic), " ", 
                 "\[Rule]", " ", StyleBox("range", FontSlant -> Italic)}, 
                ")"}, {"{", " ", " ", " ", " ", {
                 "\n", {StyleBox("block", FontSlant -> Italic), "\n"}}, 
                "}"}})}, "loops over a fixed range"}, {
            {BoxData({
               {"While", "(", {StyleBox("", FontSlant -> Italic), 
                 StyleBox("condition", FontSlant -> Italic)}, ")"}, {
                "{", " ", " ", " ", " ", {
                 "\n", {StyleBox("block", FontSlant -> Italic), "\n"}}, 
                "}"}})}, "loops as long as a condition is True"}})}), 
       "DefinitionBox"), Section("Looping blocks.", "Caption"), 
      Section(
       TextData({
         GridBox({
           {{BoxData({{"If", "(", StyleBox("condition", FontSlant -> Italic), 
                ")"}, " ", {
                "{", {"\n", {StyleBox("block", FontSlant -> Italic), "\n"}}, 
                "}"}}), "\n"}, "conditionally execute a block of statements"}, 
           {{BoxData({{"If", "(", StyleBox("condition", FontSlant -> Italic), 
                ")"}, " ", {
                "{", {"\n", {{StyleBox("block", FontSlant -> Italic), 
                   SubscriptBox("1")}, "\n"}}, "}"}, "Else", {
                "{", {"\n", {{StyleBox("block", FontSlant -> Italic), 
                   SubscriptBox("2")}, "\n"}}, "}"}}), "\n"}, 
            "conditionally run one or another block"}, {
            {BoxData({
               {"If", "(", {StyleBox("condition", FontSlant -> Italic), 
                 SubscriptBox("1")}, ")"}, {
                "{", {"\n", {{StyleBox("block", FontSlant -> Italic), 
                   SubscriptBox("1")}, "\n"}}, "}"}, "Else", " ", {
                "If", "(", {StyleBox("condition", FontSlant -> Italic), 
                 SubscriptBox("2")}, ")"}, {
                "{", {"\n", {{StyleBox("block", FontSlant -> Italic), 
                   SubscriptBox("2")}, "\n"}}, "}"}, "Else", {
                "{", {"\n", {{StyleBox("block", FontSlant -> Italic), 
                   SubscriptBox("n")}, "\n"}}, "}"}})}, 
            "chain multiple conditionals"}})}), "DefinitionBox"), 
      Section("Conditional blocks.", "Caption"), 
      Section(
       TextData({
         GridBox({
           {{BoxData({{"Switch", "(", StyleBox("expr", FontSlant -> Italic), 
                ")"}, {
                "{", {
                 "\n", {
                  {{{"Case", "(", {StyleBox("pattern", FontSlant -> Italic), 
                      SubscriptBox("1")}, ")"}, {
                     "{", {"\n", {{StyleBox("block", FontSlant -> Italic), 
                        SubscriptBox("1")}, "\n"}}, "}"}}, "\n", {
                    {"Case", "(", {StyleBox("pattern", FontSlant -> Italic), 
                      SubscriptBox("2")}, ")"}, {
                     "{", {"\n", {{StyleBox("block", FontSlant -> Italic), 
                        SubscriptBox("2")}, "\n"}}, "}"}}, "\n", 
                   "\[Ellipsis]"}, "\n"}}, "}"}}), "    "}, 
            "pattern matching"}})}), "DefinitionBox"), 
      Section("Use pattern matching to decide which block to execute.", 
       "Caption"), 
      Section(
       TextData({
         GridBox({
           {{BoxData({"Function", " ", {
                "name", "(", {{"~", "a"}, ",", {"~", "b"}}, ")"}, {
                "{", {"\n", {StyleBox("body", FontSlant -> Italic), "\n"}}, 
                "}"}}), "    \n"}, "a function definition"}, {
            {BoxData({"Function", " ", {
                "name", "(", StyleBox("args", FontSlant -> Italic), ")"}, {
                "Where", "(", StyleBox("cond", FontSlant -> Italic), ")"}, {
                "{", {"\n", {StyleBox("body", FontSlant -> Italic), "\n"}}, 
                "}"}})}, "a conditional function definition"}})}), 
       "DefinitionBox"), Section("Define named functions.", "Caption"), 
      Section(
       TextData({
         GridBox({
           {{BoxData({"Function", {
                "{", {"\n", {StyleBox("body", FontSlant -> Italic), "\n"}}, 
                "}"}}), "\n"}, 
            "an anonymous function with arguments #1, #2, etc."}, {
            {BoxData({{"Function", "(", {"a", ",", "b", ",", "\[Ellipsis]"}, 
                ")"}, {"{", {"\n", {StyleBox("body", FontSlant -> Italic), 
                  "\n"}}, "}"}}), "\n"}, 
            "an anonymous function with named arguments"}, {
            {BoxData({"Function", {
                "{", {
                 "\n", {
                  {{{"Case", "(", {StyleBox("pattern", FontSlant -> Italic), 
                      SubscriptBox("1")}, ")"}, {
                     "{", {"\n", {{StyleBox("body", FontSlant -> Italic), 
                        SubscriptBox("1")}, "\n"}}, "}"}}, "\n", {
                    {"Case", "(", {StyleBox("pattern", FontSlant -> Italic), 
                      SubscriptBox("2")}, ")"}, {
                     "{", {"\n", {{StyleBox("body", FontSlant -> Italic), 
                        SubscriptBox("2")}, "\n"}}, "}"}}, "\n", 
                   "\[Ellipsis]"}, "\n"}}, "}"}})}, 
            "an anonymous function with pattern matching"}})}), 
       "DefinitionBox"), Section("Unnamed function constructs.", "Caption"), 
      Section(
       TextData({
         GridBox({
           {{BoxData({
               {"Local", "(", StyleBox("variables", FontSlant -> Italic), 
                ")"}, {"{", {"\n", {StyleBox("block", FontSlant -> Italic), 
                  "\n"}}, "}"}}), "    \n"}, "a block with local variables"}, {
            {BoxData({
               "Block", {
                "{", {
                 "\n", {{{StyleBox("statements", FontSlant -> Italic), 
                    SubscriptBox("1")}, "\n", {
                    "Local", "(", {StyleBox("variable", FontSlant -> Italic), 
                     "\[Assign]", StyleBox("expr", FontSlant -> Italic)}, 
                    ")"}, "\n", {StyleBox("statements", FontSlant -> Italic), 
                    SubscriptBox("2")}, "\n", "\[Ellipsis]"}, "\n"}}, "}"}})}, 
            "introduce a variable in the middle of a block"}})}), 
       "DefinitionBox"), Section("Introduce local variables.", "Caption"), 
      Section(
       TextData({
         GridBox({
           {{BoxData({
               {"With", "(", {StyleBox("symbol", FontSlant -> Italic), 
                 "\[Assign]", StyleBox("value", FontSlant -> Italic)}, ")"}, {
                "{", {"\n", {StyleBox("block", FontSlant -> Italic), "\n"}}, 
                "}"}}), "    \n"}, "a block with emplace constant symbol"}, {
            {BoxData({
               "Block", {
                "{", {
                 "\n", {{{StyleBox("statements", FontSlant -> Italic), 
                    SubscriptBox("1")}, "\n", {
                    "With", "(", {StyleBox("symbol", FontSlant -> Italic), 
                     "\[Assign]", StyleBox("expr", FontSlant -> Italic)}, 
                    ")"}, "\n", {StyleBox("statements", FontSlant -> Italic), 
                    SubscriptBox("2")}, "\n", "\[Ellipsis]"}, "\n"}}, "}"}})}, 
            "introduce a constant in the middle of a block"}})}), 
       "DefinitionBox"), Section("Introduce local constants.", "Caption")}, 
     All)}, All)}, StyleDefinitions -> "Reference.pmathdoc", Visible -> True)
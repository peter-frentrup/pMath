/* pMath Document */

Document({
  SectionGroup({
    SectionGroup({
      Section(TextData({"List (", BoxData({"{", "\[Ellipsis]", "}"}), ")"}), 
       "ObjectName"), 
      Section(BoxData(TemplateBox({"List"}, "UsageReference")), "Usage")}, 
     All), SectionGroup({Section("Details", "NotesSection"), 
      SectionGroup({Section("", "NotesSectionHeaderSpacer"), 
        Section(
         "Depending on context, lists represent mathematical vectors, matrices \
         (as lists of lists), or sets.", "Notes"), 
        Section(TextData({"Lists of rules are optimized for ", 
           TemplateBox({"Lookup"}, "ReferenceHyperlink"), 
           " and related functions."}), "Notes")}, All), 
      Section("", "SectionFooterSpacer")}, 1), 
    SectionGroup({Section("Examples", "PrimaryExamplesSection"), 
      SectionGroup({Section("Basic Examples", "ExampleSection"), 
        SectionGroup({
          Section(BoxData({"List", "(", {"1", ",", "2", ",", "3"}, ")"}), 
           "Input", SectionLabel -> "in [1]:"), 
          Section(BoxData({"{", {"1", ",", "2", ",", "3"}, "}"}), "Output", 
           SectionGenerated -> True, SectionLabel -> "out [1]:")}, All), 
        SectionGroup({
          Section(BoxData({"FullForm", "(", {
              "{", {"1", ",", "2", ",", "3"}, "}"}, ")"}), "Input", 
           SectionLabel -> "in [2]:"), 
          Section(BoxData(StyleBox({"List", "(", {"1", ",", "2", ",", "3"}, 
              ")"}, AutoDelete -> True, ShowStringCharacters -> True)), 
           "Output", SectionGenerated -> True, SectionLabel -> "out [2]:")}, 
         All), SectionGroup({
          Section(BoxData(InterpretationBox("", $Line:= 0;, 
             Editable -> False)), "ExampleDelimiter"), 
          Section("Lists may contain elements of different type:", 
           "ExampleText"), SectionGroup({
            Section(BoxData({"{", {"1", ",", "2", ",", "a", ",", {"{", "}"}, 
                ",", StringBox("\"text\"")}, "}"}), "Input", 
             SectionLabel -> "in [1]:"), 
            Section(BoxData({"{", {"1", ",", "2", ",", "a", ",", {"{", "}"}, 
                ",", StringBox("\"text\"")}, "}"}), "Output", 
             SectionGenerated -> True, SectionLabel -> "out [1]:")}, All)}, 
         All)}, All), SectionGroup({Section("Scope", "ExampleSection"), 
        SectionGroup({
          Section("Representation of Vectors, Matrices, Finite Sets", 
           "ExampleSubsection"), 
          Section(
           "A list of symbolic or numeric scalars is treated as a vector:", 
           "ExampleText"), SectionGroup({
            Section(BoxData({"IsVector", "(", {
                "{", {"1", ",", "2.3", ",", {"x", "+", "4"}}, "}"}, ")"}), 
             "Input", SectionLabel -> "in [1]:"), 
            Section(BoxData("True"), "Output", SectionGenerated -> True, 
             SectionLabel -> "out [1]:")}, All), 
          Section(TextData({"Functions such as ", 
             TemplateBox({"Norm"}, "ReferenceHyperlink"), ", ", 
             TemplateBox({"Cross"}, "ReferenceHyperlink"), " and ", 
             TemplateBox({"Dot"}, "ReferenceHyperlink"), 
             " take vectors as input:"}), "ExampleText"), 
          SectionGroup({
            Section(BoxData({"Norm", "(", {"{", {"a", ",", "b", ",", "c"}, 
                "}"}, ")"}), "Input", SectionLabel -> "in [2]:"), 
            Section(
             BoxData(SqrtBox({{{"Abs", "(", "a", ")"}, SuperscriptBox("2")}, 
                "+", {{"Abs", "(", "b", ")"}, SuperscriptBox("2")}, "+", {
                 {"Abs", "(", "c", ")"}, SuperscriptBox("2")}})), "Output", 
             SectionGenerated -> True, SectionLabel -> "out [2]:")}, All), 
          SectionGroup({
            Section(BoxData(InterpretationBox("", $Line:= 0;, 
               Editable -> False)), "ExampleDelimiter"), 
            Section("A list of lists of equal length represents a matrix:", 
             "ExampleText"), SectionGroup({
              Section(BoxData({"IsMatrix", "(", {
                  "{", {{"{", {"1", ",", "2", ",", "3"}, "}"}, ",", {
                    "{", {"4", ",", "5", ",", "6"}, "}"}}, "}"}, ")"}), 
               "Input", SectionLabel -> "in [1]:"), 
              Section(BoxData("True"), "Output", SectionGenerated -> True, 
               SectionLabel -> "out [1]:")}, All), 
            Section(TextData({"Operations acting on matrices include ", 
               TemplateBox({"Dot"}, "ReferenceHyperlink"), " and ", 
               TemplateBox({"Transpose"}, "ReferenceHyperlink"), ":"}), 
             "ExampleText"), SectionGroup({
              Section(
               BoxData({"Dot", "(", {
                  {"{", {{"{", {"1", ",", "2", ",", "3"}, "}"}, ",", {
                     "{", {"4", ",", "5", ",", "6"}, "}"}}, "}"}, ",", {
                   "Transpose", "(", {
                    "{", {{"{", {"1", ",", "2", ",", "3"}, "}"}, ",", {
                      "{", {"4", ",", "5", ",", "6"}, "}"}}, "}"}, ")"}}, 
                 ")"}), "Input", SectionLabel -> "in [2]:"), 
              Section(BoxData({"{", {{"{", {"14", ",", "32"}, "}"}, ",", {
                   "{", {"32", ",", "77"}, "}"}}, "}"}), "Output", 
               SectionGenerated -> True, SectionLabel -> "out [2]:")}, All), 
            Section(
             TextData({"Matrices may be input in two-dimensional form using ", 
               TemplateBox({","}, "ControlKeyEvent"), " and ", 
               TemplateBox({"Enter"}, "ControlKeyEvent"), ":"}), 
             "ExampleText"), SectionGroup({
              Section(BoxData(GridBox({{"1", "2", "3"}, {"4", "5", "6"}})), 
               "Input", SectionLabel -> "in [3]:"), 
              Section(BoxData({"{", {{"{", {"1", ",", "2", ",", "3"}, "}"}, 
                  ",", {"{", {"4", ",", "5", ",", "6"}, "}"}}, "}"}), 
               "Output", SectionGenerated -> True, 
               SectionLabel -> "out [3]:")}, All), 
            Section(
             TextData({"Display a matrix in two-dimensional form with ", 
               TemplateBox({"MatrixForm"}, "ReferenceHyperlink"), ":"}), 
             "ExampleText"), SectionGroup({
              Section(BoxData({"MatrixForm", "(", {
                  "{", {{"{", {"1", ",", "2", ",", "3"}, "}"}, ",", {
                    "{", {"4", ",", "5", ",", "6"}, "}"}}, "}"}, ")"}), 
               "Input", SectionLabel -> "in [4]:"), 
              Section(
               BoxData({"(", GridBox({{"1", "2", "3"}, {"4", "5", "6"}}), 
                 ")"}), "Output", SectionGenerated -> True, 
               SectionLabel -> "out [4]:")}, All)}, All), 
          SectionGroup({
            Section(BoxData(InterpretationBox("", $Line:= 0;, 
               Editable -> False)), "ExampleDelimiter"), 
            Section(TextData({"Some functions such as ", 
               TemplateBox({"Union"}, "ReferenceHyperlink"), ", ", 
               TemplateBox({"Complement"}, "ReferenceHyperlink"), ", and ", 
               TemplateBox({"Intersection"}, "ReferenceHyperlink"), 
               " treat lists as orderless sets of elements:"}), 
             "ExampleText"), SectionGroup({
              Section(BoxData({"Union", "(", {
                  {"{", {"1", ",", "2", ",", "3", ",", "2", ",", "4"}, "}"}, 
                  ",", {"{", {"3", ",", "5"}, "}"}}, ")"}), "Input", 
               SectionLabel -> "in [1]:"), 
              Section(BoxData({"{", {"1", ",", "2", ",", "3", ",", "4", ",", 
                  "5"}, "}"}), "Output", SectionGenerated -> True, 
               SectionLabel -> "out [1]:")}, All)}, All)}, 1), 
        SectionGroup({Section("Lists of Rules", "ExampleSubsection"), 
          Section(
           TextData({"Lists of ", TemplateBox({"Rule"}, "ReferenceHyperlink"), 
             " or ", TemplateBox({"RuleDelayed"}, "ReferenceHyperlink"), 
             " are optimized for ", TemplateBox({"Lookup"}, 
              "ReferenceHyperlink"), ", ", TemplateBox({"Replace"}, 
              "ReferenceHyperlink"), " and related functions:"}), 
           "ExampleText"), SectionGroup({
            Section(BoxData({"Lookup", "(", {
                {"{", {{"1", "\[Rule]", "11"}, ",", {"2", "\[Rule]", "22"}}, 
                 "}"}, ",", "2"}, ")"}), "Input", SectionLabel -> "in [1]:"), 
            Section(BoxData("22"), "Output", SectionGenerated -> True, 
             SectionLabel -> "out [1]:")}, All), 
          SectionGroup({
            Section(BoxData(InterpretationBox("", $Line:= 0;, 
               Editable -> False)), "ExampleDelimiter"), 
            Section(TextData({"Lists of rules can be used as a ", 
               TemplateBox({"Function"}, "ReferenceHyperlink"), 
               " with multiple cases:"}), "ExampleText"), 
            SectionGroup({
              Section(
               BoxData({
                 {"{", {{{"(", {"0", ",", "0"}, ")"}, "\[Rule]", 
                    StringBox("\"well...\"")}, ",", {
                    {"(", {{"~", "x"}, ",", {"~", "y"}}, ")"}, 
                    "\[RuleDelayed]", {"x", SuperscriptBox("y")}}}, "}"}, "(", 
                 {"2", ",", "3"}, ")"}), "Input", SectionLabel -> "in [1]:"), 
              Section(BoxData("8"), "Output", SectionGenerated -> True, 
               SectionLabel -> "out [1]:")}, All), 
            Section(TextData({TemplateBox({"Switch"}, "ReferenceHyperlink"), 
               " provides an alternative syntax:"}), "ExampleText"), 
            SectionGroup({
              Section(
               BoxData({"Hold", "(", {{"Switch", "(", {"2", ",", "3"}, ")"}, {
                   "{", {
                    "\n", {
                     {{{"Case", "(", {"0", ",", "0"}, ")"}, {
                        "{", StringBox("\"well...\""), "}"}}, "\n", {
                       {"Case", "(", {{"~", "x"}, ",", {"~", "y"}}, ")"}, {
                        "{", {"x", SuperscriptBox("y")}, "}"}}}, "\n"}}, 
                   "}"}}, ")"}), "Input", SectionLabel -> "in [2]:"), 
              Section(
               BoxData({"Hold", "(", {
                  {"{", {{{"PatternSequence", "(", {"0", ",", "0"}, ")"}, 
                     "\[RuleDelayed]", StringBox("\"well...\"")}, ",", {
                     {"PatternSequence", "(", {{"~", "x"}, ",", {"~", "y"}}, 
                      ")"}, "\[RuleDelayed]", {"x", SuperscriptBox("y")}}}, 
                   "}"}, "(", {"2", ",", "3"}, ")"}, ")"}), "Output", 
               SectionGenerated -> True, SectionLabel -> "out [2]:")}, All)}, 
           All)}, 1), SectionGroup({
          Section("Constructing Lists", "ExampleSubsection"), 
          Section(
           TextData({"Construct a list consisting of a range of values with ", 
             TemplateBox({"Range"}, "ReferenceHyperlink"), " and ", 
             TemplateBox({"Array"}, "ReferenceHyperlink"), ":"}), 
           "ExampleText"), SectionGroup({
            Section(BoxData({"Array", "(", {"1", "..", "4"}, ")"}), "Input", 
             SectionLabel -> "in [1]:"), 
            Section(BoxData({"{", {"1", ",", "2", ",", "3", ",", "4"}, "}"}), 
             "Output", SectionGenerated -> True, SectionLabel -> "out [1]:")}, 
           All), SectionGroup({
            Section(BoxData({"Array", "(", {"1", "..", "7", "..", "2"}, ")"}), 
             "Input", SectionLabel -> "in [2]:"), 
            Section(BoxData({"{", {"1", ",", "3", ",", "5", ",", "7"}, "}"}), 
             "Output", SectionGenerated -> True, SectionLabel -> "out [2]:")}, 
           All), SectionGroup({
            Section(BoxData(InterpretationBox("", $Line:= 0;, 
               Editable -> False)), "ExampleDelimiter"), 
            Section(TextData({"Construct a list using a function with ", 
               TemplateBox({"Array"}, "ReferenceHyperlink"), ":"}), 
             "ExampleText"), SectionGroup({
              Section(BoxData({"Array", "(", {"f", ",", "4"}, ")"}), "Input", 
               SectionLabel -> "in [1]:"), 
              Section(
               BoxData({"{", {{"f", "(", "1", ")"}, ",", {"f", "(", "2", ")"}, 
                  ",", {"f", "(", "3", ")"}, ",", {"f", "(", "4", ")"}}, 
                 "}"}), "Output", SectionGenerated -> True, 
               SectionLabel -> "out [1]:")}, All), 
            SectionGroup({
              Section(BoxData({"Array", "(", {
                  "f", ",", {"{", {"4", ",", "3"}, "}"}}, ")"}), "Input", 
               SectionLabel -> "in [2]:"), 
              Section(
               BoxData({
                 "{", {{"{", {{"f", "(", {"1", ",", "1"}, ")"}, ",", {
                     "f", "(", {"1", ",", "2"}, ")"}, ",", {
                     "f", "(", {"1", ",", "3"}, ")"}}, "}"}, ",", {
                   "{", {{"f", "(", {"2", ",", "1"}, ")"}, ",", {
                     "f", "(", {"2", ",", "2"}, ")"}, ",", {
                     "f", "(", {"2", ",", "3"}, ")"}}, "}"}, ",", {
                   "{", {{"f", "(", {"3", ",", "1"}, ")"}, ",", {
                     "f", "(", {"3", ",", "2"}, ")"}, ",", {
                     "f", "(", {"3", ",", "3"}, ")"}}, "}"}, ",", {
                   "{", {{"f", "(", {"4", ",", "1"}, ")"}, ",", {
                     "f", "(", {"4", ",", "2"}, ")"}, ",", {
                     "f", "(", {"4", ",", "3"}, ")"}}, "}"}}, "}"}), "Output", 
               SectionGenerated -> True, SectionLabel -> "out [2]:")}, All)}, 
           All), SectionGroup({
            Section(BoxData(InterpretationBox("", $Line:= 0;, 
               Editable -> False)), "ExampleDelimiter"), 
            Section(TextData({TemplateBox({"Table"}, "ReferenceHyperlink"), 
               " constructs lists using an expression and itorator:"}), 
             "ExampleText"), SectionGroup({
              Section(BoxData({"Table", "(", {
                  {"2", "^", "n"}, ",", {"n", "\[Rule]", {
                    {"-", "4"}, "..", "4"}}}, ")"}), "Input", 
               SectionLabel -> "in [1]:"), 
              Section(
               BoxData({"{", {FractionBox("1", "16"), ",", 
                  FractionBox("1", "8"), ",", FractionBox("1", "4"), ",", 
                  FractionBox("1", "2"), ",", "1", ",", "2", ",", "4", ",", 
                  "8", ",", "16"}, "}"}), "Output", SectionGenerated -> True, 
               SectionLabel -> "out [1]:")}, All), 
            Section(
             "Use multiple iterators to construct matrices and arrays:", 
             "ExampleText"), SectionGroup({
              Section(BoxData({"Table", "(", {
                  {"1", "/", {"(", {"i", "+", "j", "-", "1"}, ")"}}, ",", {
                   "i", "\[Rule]", "4"}, ",", {"j", "\[Rule]", "3"}}, ")"}), 
               "Input", SectionLabel -> "in [2]:"), 
              Section(
               BoxData({
                 "{", {{"{", {"1", ",", FractionBox("1", "2"), ",", 
                    FractionBox("1", "3")}, "}"}, ",", {
                   "{", {FractionBox("1", "2"), ",", FractionBox("1", "3"), 
                    ",", FractionBox("1", "4")}, "}"}, ",", {
                   "{", {FractionBox("1", "3"), ",", FractionBox("1", "4"), 
                    ",", FractionBox("1", "5")}, "}"}, ",", {
                   "{", {FractionBox("1", "4"), ",", FractionBox("1", "5"), 
                    ",", FractionBox("1", "6")}, "}"}}, "}"}), "Output", 
               SectionGenerated -> True, SectionLabel -> "out [2]:")}, All)}, 
           All)}, 1), SectionGroup({
          Section("Listable Functions", "ExampleSubsection"), 
          Section(TextData({"Functions with attribute ", 
             TemplateBox({"Listable"}, "ReferenceHyperlink"), 
             " thread over lists:"}), "ExampleText"), 
          SectionGroup({
            Section(
             BoxData({"Exp", "(", {
                "{", {{"{", {"1", ",", "2", ",", "3"}, "}"}, ",", {
                  "{", {"4", ",", "5", ",", "6"}, "}"}}, "}"}, ")"}), "Input", 
             SectionLabel -> "in [1]:"), 
            Section(
             BoxData({
               "{", {
                {"{", {"\[ExponentialE]", ",", {
                   "\[ExponentialE]", SuperscriptBox("2")}, ",", {
                   "\[ExponentialE]", SuperscriptBox("3")}}, "}"}, ",", {
                 "{", {{"\[ExponentialE]", SuperscriptBox("4")}, ",", {
                   "\[ExponentialE]", SuperscriptBox("5")}, ",", {
                   "\[ExponentialE]", SuperscriptBox("6")}}, "}"}}, "}"}), 
             "Output", SectionGenerated -> True, SectionLabel -> "out [1]:")}, 
           All), 
          Section(
           "Machine precision may be insufficient to give a correct answer:", 
           "ExampleText"), SectionGroup({
            Section(BoxData({"Sin", "(", {"10.0", "^", "40"}, ")"}), "Input", 
             SectionLabel -> "in [1]:"), 
            Section(BoxData("0.64678458842683428`"), "Output", 
             SectionGenerated -> True, SectionLabel -> "out [1]:")}, All), 
          Section("With exact input, the answer is correct:", "ExampleText"), 
          SectionGroup({
            Section(BoxData({"N", "(", {{"Sin", "(", {"10", "^", "40"}, ")"}, 
                ",", "20"}, ")"}), "Input", SectionLabel -> "in [2]:"), 
            Section(
             BoxData({
               "-", 
               "5.69633400953636327308034181573568723133[+/-2.00*^-39]`40*^-1"\
               }), "Output", SectionGenerated -> True, 
             SectionLabel -> "out [2]:")}, All)}, 1)}, All), 
      Section("", "SectionFooterSpacer")}, All), 
    SectionGroup({Section("See Also", "SeeAlsoSection"), 
      Section(TextData({TemplateBox({"Array"}, "ReferenceHyperlink"), 
         "\[NonBreakingSpace]\[Dot] ", TemplateBox({"Table"}, 
          "ReferenceHyperlink"), "\[NonBreakingSpace]\[Dot] ", 
         TemplateBox({"Range"}, "ReferenceHyperlink"), 
         "\[NonBreakingSpace]\[Dot] ", TemplateBox({"ListLinePlot"}, 
          "ReferenceHyperlink"), "\[NonBreakingSpace]\[Dot] ", 
         TemplateBox({"Listable"}, "ReferenceHyperlink"), 
         "\[NonBreakingSpace]\[Dot] ", TemplateBox({"Function"}, 
          "ReferenceHyperlink"), "\[NonBreakingSpace]\[Dot] ", 
         TemplateBox({"Part"}, "ReferenceHyperlink"), 
         "\[NonBreakingSpace]\[Dot] ", TemplateBox({"Lookup"}, 
          "ReferenceHyperlink")}), "SeeAlso")}, All)}, All)}, 
 StyleDefinitions -> "Reference.pmathdoc", Visible -> True)
/* pMath Document */

Document({
  SectionGroup({
    SectionGroup({Section("Panel", "ObjectName"), 
      Section(BoxData(TemplateBox({"Panel"}, "UsageReference")), "Usage")}, 
     All), SectionGroup({Section("Details", "NotesSection"), 
      SectionGroup({Section("", "NotesSectionHeaderSpacer"), 
        Section(TextData({TemplateBox({"Panel"}, "ReferenceHyperlink"), 
           " by default displays ", StyleBox("expr", "Arg"), 
           " in \"Panel\" style which uses the system panel font."}), 
         "Notes"), 
        Section(TextData({TemplateBox({"Panel"}, "ReferenceHyperlink"), 
           " has options ", TemplateBox({"Alignment"}, "ReferenceHyperlink"), 
           ", ", TemplateBox({"Appearance"}, "ReferenceHyperlink"), ", ", 
           TemplateBox({"BaselinePosition"}, "ReferenceHyperlink"), ", ", 
           TemplateBox({"BaseStyle"}, "ReferenceHyperlink"), ", ", 
           TemplateBox({"ContentPadding"}, "ReferenceHyperlink"), ", ", 
           TemplateBox({"Enabled"}, "ReferenceHyperlink"), ", ", 
           TemplateBox({"FrameMargins"}, "ReferenceHyperlink"), ", and ", 
           TemplateBox({"ImageSize"}, "ReferenceHyperlink"), "."}), "Notes")}, 
       All), Section("", "SectionFooterSpacer")}, 1), 
    SectionGroup({Section("Examples", "PrimaryExamplesSection"), 
      SectionGroup({Section("Basic Examples", "ExampleSection"), 
        Section("A simple panel:", "ExampleText"), 
        SectionGroup({
          Section(BoxData({"Panel", "(", StringBox("\"Content\""), ")"}), 
           "Input", SectionLabel -> "in [1]:"), 
          Section(BoxData(PanelBox(StringBox("\"Content\""))), "Output", 
           SectionGenerated -> True, SectionLabel -> "out [1]:")}, All), 
        SectionGroup({
          Section(BoxData(InterpretationBox("", $Line:= 0;, 
             Editable -> False)), "ExampleDelimiter"), 
          Section("Nested panels:", "ExampleText"), 
          SectionGroup({
            Section(
             BoxData({"Nest", "(", {"Panel", ",", StringBox("\"Inside\""), 
                ",", "5"}, ")"}), "Input", SectionLabel -> "in [1]:"), 
            Section(
             BoxData(
              PanelBox(
               PanelBox(
                PanelBox(PanelBox(PanelBox(StringBox("\"Inside\""))))))), 
             "Output", SectionGenerated -> True, SectionLabel -> "out [1]:")}, 
           All)}, All)}, All), 
      SectionGroup({Section("Options", "ExampleSection"), 
        SectionGroup({Section("Alignment", "ExampleSubsection"), 
          Section(TextData({"The default setting is ", 
             TemplateBox({"Alignment"}, "ReferenceHyperlink"), " \[Rule] {", 
             TemplateBox({"Left"}, "ReferenceHyperlink"), ", ", 
             TemplateBox({"Top"}, "ReferenceHyperlink"), "}:"}), 
           "ExampleText"), SectionGroup({
            Section(BoxData({"Panel", "(", {StringBox("\"Content\""), ",", {
                 "ImageSize", "\[Rule]", {"{", {"100", ",", "75"}, "}"}}}, 
               ")"}), "Input", SectionLabel -> "in [1]:"), 
            Section(BoxData(PanelBox(StringBox("\"Content\""), 
               ImageSize -> {100, 75})), "Output", SectionGenerated -> True, 
             SectionLabel -> "out [1]:")}, All), 
          SectionGroup({
            Section(BoxData(InterpretationBox("", $Line:= 0;, 
               Editable -> False)), "ExampleDelimiter"), 
            Section("Center-align the contents:", "ExampleText"), 
            SectionGroup({
              Section(BoxData({"Panel", "(", {StringBox("\"Content\""), ",", {
                   "ImageSize", "\[Rule]", {"{", {"100", ",", "75"}, "}"}}, 
                  ",", {"Alignment", "\[Rule]", "Center"}}, ")"}), "Input", 
               SectionLabel -> "in [1]:"), 
              Section(BoxData(PanelBox(StringBox("\"Content\""), 
                 Alignment -> Center, ImageSize -> {100, 75})), "Output", 
               SectionGenerated -> True, SectionLabel -> "out [1]:")}, All)}, 
           All)}, 1), SectionGroup({
          Section("Appearance", "ExampleSubsection"), 
          Section(TextData({"The default setting is ", 
             TemplateBox({"Appearance"}, "ReferenceHyperlink"), 
             " \[Rule] \"Framed\":"}), "ExampleText"), 
          SectionGroup({
            Section(BoxData({"Panel", "(", {StringBox("\"Content\""), ",", {
                 "Appearance", "\[Rule]", StringBox("\"Framed\"")}}, ")"}), 
             "Input", SectionLabel -> "in [1]:"), 
            Section(BoxData(PanelBox(StringBox("\"Content\""), 
               Appearance -> "Framed")), "Output", SectionGenerated -> True, 
             SectionLabel -> "out [1]:")}, All), 
          SectionGroup({
            Section(BoxData(InterpretationBox("", $Line:= 0;, 
               Editable -> False)), "ExampleDelimiter"), 
            Section(
             TextData({"Use ", TemplateBox({"Appearance"}, 
                "ReferenceHyperlink"), 
               " \[Rule] \"Frameless\" to use no background image:"}), 
             "ExampleText"), SectionGroup({
              Section(BoxData({"Panel", "(", {StringBox("\"Content\""), ",", {
                   "Appearance", "\[Rule]", StringBox("\"Frameless\"")}}, 
                 ")"}), "Input", SectionLabel -> "in [1]:"), 
              Section(BoxData(PanelBox(StringBox("\"Content\""), 
                 Appearance -> "Frameless")), "Output", 
               SectionGenerated -> True, SectionLabel -> "out [1]:")}, All)}, 
           All), SectionGroup({
            Section(BoxData(InterpretationBox("", $Line:= 0;, 
               Editable -> False)), "ExampleDelimiter"), 
            Section(TextData({"A popup window is a floating ", 
               TemplateBox({"Panel"}, "ReferenceHyperlink"), ":"}), 
             "ExampleText"), SectionGroup({
              Section(BoxData({"Panel", "(", {StringBox("\"Popup\""), ",", {
                   "Appearance", "\[Rule]", StringBox("\"Popup\"")}}, ")"}), 
               "Input", SectionLabel -> "in [1]:"), 
              Section(BoxData(PanelBox(StringBox("\"Popup\""), 
                 Appearance -> "Popup")), "Output", SectionGenerated -> True, 
               SectionLabel -> "out [1]:")}, All)}, All), 
          SectionGroup({
            Section(BoxData(InterpretationBox("", $Line:= 0;, 
               Editable -> False)), "ExampleDelimiter"), 
            Section(TextData({"A tooltips is a floating ", 
               TemplateBox({"Panel"}, "ReferenceHyperlink"), ":"}), 
             "ExampleText"), SectionGroup({
              Section(BoxData({"Tooltip", "(", {
                  {"Panel", "(", {StringBox("\"Tip\""), ",", {
                     "Appearance", "\[Rule]", StringBox("\"Tooltip\"")}}, 
                   ")"}, ",", StringBox("\"Tip\"")}, ")"}), "Input", 
               SectionLabel -> "in [1]:"), 
              Section(BoxData(TooltipBox(PanelBox(StringBox("\"Tip\""), 
                  Appearance -> "Tooltip"), StringBox("\"Tip\""))), "Output", 
               SectionGenerated -> True, SectionLabel -> "out [1]:")}, All)}, 
           All), SectionGroup({
            Section(BoxData(InterpretationBox("", $Line:= 0;, 
               Editable -> False)), "ExampleDelimiter"), 
            Section(
             TextData({"An ", TemplateBox({"InputField"}, 
                "ReferenceHyperlink"), " with an included ", 
               TemplateBox({"Panel"}, "ReferenceHyperlink"), ":"}), 
             "ExampleText"), SectionGroup({
              Section(BoxData({"Panel", "(", {
                  {"Grid", "(", {
                    {"{", {
                      "{", {{"InputField", "(", {StringBox("\"abc\""), ",", 
                         "String", ",", {"Appearance", "\[Rule]", 
                          StringBox("\"AddressBand\"")}}, ")"}, ",", {
                        "Button", "(", {StringBox("\"Go\""), ",", "None", ",", 
                         {"ButtonFrame", "\[Rule]", 
                          StringBox("\"AddressBandGo\"")}}, ")"}}, "}"}, "}"}, 
                    ",", {"ColumnSpacing", "\[Rule]", "0"}}, ")"}, ",", {
                   "Appearance", "\[Rule]", StringBox("\"AddressBand\"")}}, 
                 ")"}), "Input", SectionLabel -> "in [1]:"), 
              Section(
               BoxData(
                PanelBox(
                 TagBox(
                  GridBox({
                    {InputFieldBox("abc", String, 
                      Appearance -> "AddressBand"), 
                     ButtonBox(StringBox("\"Go\""), 
                      ButtonFrame -> "AddressBandGo")}}, 
                   GridBoxColumnSpacing -> 0), "Grid"), 
                 Appearance -> "AddressBand")), "Output", 
               SectionGenerated -> True, SectionLabel -> "out [1]:")}, All)}, 
           All), SectionGroup({
            Section(BoxData(InterpretationBox("", $Line:= 0;, 
               Editable -> False)), "ExampleDelimiter"), 
            Section(TextData({"Tab views are built using panels with ", 
               TemplateBox({"Appearance"}, "ReferenceHyperlink"), 
               " \[Rule] \"TabBody\" and ", TemplateBox({"Appearance"}, 
                "ReferenceHyperlink"), " \[Rule] \"TabHead\":"}), 
             "ExampleText"), SectionGroup({
              Section(
               BoxData({"Grid", "(", {
                  {"{", {
                    {"{", {"Panel", "(", {
                       {"Grid", "(", {
                         {"{", {"{", {StringBox("\"Left \""), ",", {
                             "Setter", "(", {"1", ",", "1", ",", 
                              StringBox("\"Center\""), ",", {
                               "ButtonFrame", "\[Rule]", 
                               StringBox("\"TabHead\"")}}, ")"}, ",", 
                            StringBox("\"Right\"")}, "}"}, "}"}, ",", {
                          "ColumnSpacing", "\[Rule]", "0"}}, ")"}, ",", {
                        "Appearance", "\[Rule]", StringBox("\"TabHead\"")}}, 
                      ")"}, "}"}, ",", {
                     "{", {"Panel", "(", {StringBox("\"Content\""), ",", {
                        "Appearance", "\[Rule]", StringBox("\"TabBody\"")}}, 
                      ")"}, "}"}}, "}"}, ",", {"RowSpacing", "\[Rule]", "0"}}, 
                 ")"}), "Input", SectionLabel -> "in [1]:"), 
              Section(
               BoxData(
                TagBox(
                 GridBox({
                   {PanelBox(
                     TagBox(
                      GridBox({{StringBox("\"Left \""), 
                         SetterBox(1, 1, StringBox("\"Center\""), 
                          ButtonFrame -> "TabHead"), StringBox("\"Right\"")}}, 
                       GridBoxColumnSpacing -> 0), "Grid"), 
                     Appearance -> "TabHead")}, {
                    PanelBox(StringBox("\"Content\""), 
                     Appearance -> "TabBody")}}, GridBoxRowSpacing -> 0), 
                 "Grid")), "Output", SectionGenerated -> True, 
               SectionLabel -> "out [1]:")}, All)}, All)}, 1), 
        SectionGroup({Section("BaselinePosition", "ExampleSubsection"), 
          Section("Vertically align panels:", "ExampleText"), 
          SectionGroup({
            Section(
             BoxData({"Row", "(", {
                {"Table", "(", {
                  {"Panel", "(", {"p", ",", {"BaselinePosition", "\[Rule]", 
                     "p"}}, ")"}, ",", {"p", "\[Rule]", {
                    "{", {"Automatic", ",", "Top", ",", "Center", ",", 
                     "Baseline", ",", "Bottom"}, "}"}}}, ")"}, ",", 
                StringBox("\"x\"")}, ")"}), "Input", 
             SectionLabel -> "in [1]:"), 
            Section(
             BoxData(TemplateBox({
                "x", "x", PanelBox("Automatic", 
                 BaselinePosition -> Automatic), 
                PanelBox("Top", BaselinePosition -> Top), 
                PanelBox("Center", BaselinePosition -> Center), 
                PanelBox("Baseline", BaselinePosition -> Baseline), 
                PanelBox("Bottom", BaselinePosition -> Bottom)}, 
               "RowWithSeparators")), "Output", SectionGenerated -> True, 
             SectionLabel -> "out [1]:")}, All)}, 1), 
        SectionGroup({Section("ContentPadding", "ExampleSubsection"), 
          Section(TextData({"The default setting ", 
             TemplateBox({"ContentPadding"}, "ReferenceHyperlink"), 
             " \[Rule] ", TemplateBox({"True"}, "ReferenceHyperlink"), 
             " ensures that the content's vertical size is at least one \
             line-height:"}), "ExampleText"), 
          SectionGroup({
            Section(
             BoxData({"{", {{"Panel", "(", "g", ")"}, ",", {
                 "Panel", "(", "b", ")"}}, "}"}), "Input", 
             SectionLabel -> "in [1]:"), 
            Section(BoxData({"{", {PanelBox("g"), ",", PanelBox("b")}, "}"}), 
             "Output", SectionGenerated -> True, SectionLabel -> "out [1]:")}, 
           All), SectionGroup({
            Section(BoxData(InterpretationBox("", $Line:= 0;, 
               Editable -> False)), "ExampleDelimiter"), 
            Section("Shrink wrap the panel frame tightly around the content:", 
             "ExampleText"), SectionGroup({
              Section(BoxData({"Table", "(", {
                  {"Panel", "(", {"s", ",", {"ContentPadding", "\[Rule]", 
                     "False"}, ",", {"BaselinePosition", "\[Rule]", {
                      "(", {"Baseline", "\[Rule]", "Baseline"}, ")"}}}, ")"}, 
                  ",", {"s", "\[Rule]", {"{", {"g", ",", "b"}, "}"}}}, ")"}), 
               "Input", SectionLabel -> "in [1]:"), 
              Section(
               BoxData({
                 "{", {PanelBox("g", BaselinePosition -> Baseline -> Baseline, 
                   ContentPadding -> False), ",", 
                  PanelBox("b", BaselinePosition -> Baseline -> Baseline, 
                   ContentPadding -> False)}, "}"}), "Output", 
               SectionGenerated -> True, SectionLabel -> "out [1]:")}, All)}, 
           All)}, 1), SectionGroup({Section("Enabled", "ExampleSubsection"), 
          Section(
           TextData({"Use the ", TemplateBox({"Enabled"}, 
              "ReferenceHyperlink"), 
             " option to affect contained controls:"}), "ExampleText"), 
          SectionGroup({
            Section(BoxData({"Panel", "(", {
                {"Grid", "(", {
                  "{", {
                   {"{", {StringBox("\"Button:\""), ",", {
                      "Button", "(", {StringBox("\"Ok\""), ",", "None"}, 
                      ")"}}, "}"}, ",", {
                    "{", {StringBox("\"Slider:\""), ",", {
                      "Slider", "(", ")"}}, "}"}, ",", {
                    "{", {StringBox("\"InputField:\""), ",", {
                      "InputField", "(", {StringBox("\"\""), ",", "String"}, 
                      ")"}}, "}"}}, "}"}, ")"}, ",", {
                 "Enabled", "\[Rule]", "False"}}, ")"}), "Input", 
             SectionLabel -> "in [1]:"), 
            Section(
             BoxData(
              PanelBox(
               TagBox(
                GridBox({{StringBox("\"Button:\""), 
                   ButtonBox(StringBox("\"Ok\""))}, {
                   StringBox("\"Slider:\""), SliderBox(0.5, 0 .. 1)}, {
                   StringBox("\"InputField:\""), InputFieldBox("", String)}}), 
                "Grid"), Enabled -> False)), "Output", 
             SectionGenerated -> True, SectionLabel -> "out [1]:")}, All)}, 
         1), SectionGroup({Section("FrameMargins", "ExampleSubsection"), 
          Section(TextData({"Make the content area larger by setting ", 
             TemplateBox({"FrameMargins"}, "ReferenceHyperlink"), ":"}), 
           "ExampleText"), SectionGroup({
            Section(BoxData({"Table", "(", {
                {"Panel", "(", {"123", ",", {"FrameMargins", "\[Rule]", "m"}}, 
                 ")"}, ",", {"m", "\[Rule]", {
                  "{", {"0", ",", "10", ",", "20", ",", "40"}, "}"}}}, ")"}), 
             "Input", SectionLabel -> "in [1]:"), 
            Section(BoxData({"{", {PanelBox("123", FrameMargins -> 0), ",", 
                PanelBox("123", FrameMargins -> 10), ",", 
                PanelBox("123", FrameMargins -> 20), ",", 
                PanelBox("123", FrameMargins -> 40)}, "}"}), "Output", 
             SectionGenerated -> True, SectionLabel -> "out [1]:")}, All)}, 
         1), SectionGroup({Section("ImageSize", "ExampleSubsection"), 
          Section(
           "Specify the panel\[HighNineQuote]s size regardless of its \
           contents:", "ExampleText"), 
          SectionGroup({
            Section(
             BoxData({"Grid", "(", {
                "Table", "(", {
                 {"Panel", "(", {{"a", "+", "b", "+", "c"}, ",", {
                    "ImageSize", "\[Rule]", {"{", {"w", ",", "h"}, "}"}}}, 
                  ")"}, ",", {"h", "\[Rule]", {
                   "{", {"30", ",", "40", ",", "50"}, "}"}}, ",", {
                  "w", "\[Rule]", {"{", {"40", ",", "50", ",", "80"}, "}"}}}, 
                ")"}, ")"}), "Input", SectionLabel -> "in [1]:"), 
            Section(
             BoxData(
              TagBox(
               GridBox({
                 {PanelBox({"a", "+", "b", "+", "c"}, ImageSize -> {40, 30}), 
                  PanelBox({"a", "+", "b", "+", "c"}, ImageSize -> {50, 30}), 
                  PanelBox({"a", "+", "b", "+", "c"}, ImageSize -> {80, 30})}, 
                 {PanelBox({"a", "+", "b", "+", "c"}, ImageSize -> {40, 40}), 
                  PanelBox({"a", "+", "b", "+", "c"}, ImageSize -> {50, 40}), 
                  PanelBox({"a", "+", "b", "+", "c"}, ImageSize -> {80, 40})}, 
                 {PanelBox({"a", "+", "b", "+", "c"}, ImageSize -> {40, 50}), 
                  PanelBox({"a", "+", "b", "+", "c"}, ImageSize -> {50, 50}), 
                  PanelBox({"a", "+", "b", "+", "c"}, 
                   ImageSize -> {80, 50})}}), "Grid")), "Output", 
             SectionGenerated -> True, SectionLabel -> "out [1]:")}, All), 
          SectionGroup({
            Section(BoxData(InterpretationBox("", $Line:= 0;, 
               Editable -> False)), "ExampleDelimiter"), 
            Section(
             TextData({"Use ", TemplateBox({"ImageSize"}, 
                "ReferenceHyperlink"), 
               " to force line breaking at a defined width:"}), 
             "ExampleText"), SectionGroup({
              Section(BoxData({"Panel", "(", {
                  {"Expand", "(", {{"(", {"a", "+", "b"}, ")"}, 
                    SuperscriptBox("10")}, ")"}, ",", {
                   "ImageSize", "\[Rule]", {"{", {"150", ",", "Automatic"}, 
                    "}"}}}, ")"}), "Input", SectionLabel -> "in [1]:"), 
              Section(BoxData(PanelBox({{"a", SuperscriptBox("10")}, "+", {
                   "b", SuperscriptBox("10")}, "+", {
                   "10", "a", " ", {"b", SuperscriptBox("9")}}, "+", {
                   "10", "b", " ", {"a", SuperscriptBox("9")}}, "+", {
                   "45", {"a", SuperscriptBox("2")}, " ", {
                    "b", SuperscriptBox("8")}}, "+", {
                   "45", {"a", SuperscriptBox("8")}, " ", {
                    "b", SuperscriptBox("2")}}, "+", {
                   "120", {"a", SuperscriptBox("3")}, " ", {
                    "b", SuperscriptBox("7")}}, "+", {
                   "120", {"a", SuperscriptBox("7")}, " ", {
                    "b", SuperscriptBox("3")}}, "+", {
                   "210", {"a", SuperscriptBox("4")}, " ", {
                    "b", SuperscriptBox("6")}}, "+", {
                   "210", {"a", SuperscriptBox("6")}, " ", {
                    "b", SuperscriptBox("4")}}, "+", {
                   "252", {"a", SuperscriptBox("5")}, " ", {
                    "b", SuperscriptBox("5")}}}, 
                 ImageSize -> {150, Automatic})), "Output", 
               SectionGenerated -> True, SectionLabel -> "out [1]:")}, All)}, 
           All)}, 1)}, 1), Section("", "SectionFooterSpacer")}, All), 
    SectionGroup({Section("See Also", "SeeAlsoSection"), 
      Section(TextData({TemplateBox({"Pane"}, "ReferenceHyperlink"), 
         "\[NonBreakingSpace]\[Dot] ", TemplateBox({"Framed"}, 
          "ReferenceHyperlink")}), "SeeAlso")}, All)}, All)}, 
 StyleDefinitions -> "Reference.pmathdoc", Visible -> True)
/* pMath Document */

Document({
  SectionGroup({
    SectionGroup({
      Section(
       TextData({
         "Surd (", BoxData(RadicalBox("\[Ellipsis]", "\[Ellipsis]", 
           SurdForm -> True)), ")"}), "ObjectName"), 
      Section(BoxData(TemplateBox({"Surd"}, "UsageReference")), "Usage")}, 
     All), SectionGroup({Section("Details", "NotesSection"), 
      SectionGroup({Section("", "NotesSectionHeaderSpacer"), 
        Section(
         "Mathematical function suitable for numeric and symbolic \
         computations.", "Notes"), 
        Section(TextData({BoxData(RadicalBox("x", "n", SurdForm -> True)), 
           " can be entered using \[AliasIndicator]surd\[AliasIndicator], ", 
           TemplateBox({"x"}, "KeyEvent"), " ", 
           TemplateBox({"\[Rule]"}, "KeyEvent"), " ", 
           TemplateBox({"n"}, "KeyEvent"), "."}), "Notes"), 
        Section(TextData({BoxData(SqrtBox("x", SurdForm -> True)), 
           " can be entered using ", TemplateBox({"2"}, 
            "ControlShiftKeyEvent"), " ", TemplateBox({"x"}, "KeyEvent"), 
           "."}), "Notes"), 
        Section(TextData({"For certain special arguments, ", 
           TemplateBox({"Surd"}, "ReferenceHyperlink"), 
           " automatically evaluates to exact values."}), "Notes"), 
        Section(TextData({TemplateBox({"Surd"}, "ReferenceHyperlink"), 
           " can be evaluated to arbitrary numerical precision."}), "Notes"), 
        Section(TextData({TemplateBox({"Surd"}, "ReferenceHyperlink"), 
           " automatically threads over lists."}), "Notes")}, All), 
      Section("", "SectionFooterSpacer")}, 1), 
    SectionGroup({Section("Examples", "PrimaryExamplesSection"), 
      SectionGroup({Section("Basic Examples", "ExampleSection"), 
        SectionGroup({
          Section(BoxData({"Surd", "(", {{"-", "8"}, ",", "3"}, ")"}), 
           "Input", SectionLabel -> "in [1]:"), 
          Section(BoxData({"-", "2"}), "Output", SectionGenerated -> True, 
           SectionLabel -> "out [1]:")}, All), 
        SectionGroup({
          Section(BoxData(InterpretationBox("", $Line:= 0;, 
             Editable -> False)), "ExampleDelimiter"), 
          Section(TextData({"In contrast, ", 
             TemplateBox({"Sqrt"}, "ReferenceHyperlink"), 
             " gives the first complex root:"}), "ExampleText"), 
          SectionGroup({
            Section(
             BoxData({"{", {RadicalBox({"-", "8"}, "3", SurdForm -> True), 
                ",", RadicalBox({"-", "8"}, "3")}, "}"}), "Input", 
             SectionLabel -> "in [1]:"), 
            Section(
             BoxData({
               "{", {{"-", "2"}, ",", {
                 "2", " ", {{"(", {"-", "1"}, ")"}, 
                  SuperscriptBox({"1", "/", "3"})}}}, "}"}), "Output", 
             SectionGenerated -> True, SectionLabel -> "out [1]:")}, All)}, 
         All), SectionGroup({
          Section(BoxData(InterpretationBox("", $Line:= 0;, 
             Editable -> False)), "ExampleDelimiter"), 
          Section("Evaluate to arbitrary precision:", "ExampleText"), 
          SectionGroup({
            Section(BoxData({"Numericalize", "(", {
                {"Surd", "(", {"2", ",", "5"}, ")"}, ",", "30"}, ")"}), 
             "Input", SectionLabel -> "in [1]:"), 
            Section(
             BoxData(
              "1.14869835499703500679862694677792758944385088909779750551371[0\
              51+/-159]`60"), "Output", SectionGenerated -> True, 
             SectionLabel -> "out [1]:")}, All)}, All), 
        SectionGroup({
          Section(BoxData(InterpretationBox("", $Line:= 0;, 
             Editable -> False)), "ExampleDelimiter"), 
          Section(TextData({"Make a plot of the ", StyleBox("n", "Arg"), 
             "-th real root function on an interval:"}), "ExampleText"), 
          SectionGroup({
            Section(
             BoxData({"Plot", "(", {
                {"{", {{"Surd", "(", {"x", ",", "3"}, ")"}, ",", {
                   "Surd", "(", {"x", ",", "5"}, ")"}}, "}"}, ",", {
                 "x", "\[Rule]", {{"-", "4"}, "..", "4"}}}, ")"}), "Input", 
             SectionLabel -> "in [1]:"), 
            Section(
             BoxData(GraphicsBox({
                {RGBColor(0.75, 0, 0), 
                 LineBox(
                  CompressedData(
                    "1:c$_U#K[eKg5VaqRGNN3&lv_xe=EW,@f{OP;bnsY*p!QG*9,zt]3xW;>\
                    8;bnJ3U*tlg9{3an7HBlTSy,=%Z9eJnc[9IN^P!*i<a@v+wbx*%)FU5Z=O\
                    >XcB(t7tLz=]FLz&g,LDCgFJoQ#v981Z%JB7$n+@9>55oKb}9k?ameDOfZ\
                    )*3N+8sZA,s#@%b${rnf&a9pw;VsW$$7)?ux4&N+S**=gyFXsJ{5Tw-oL?\
                    ^;Ws!lR9@<yC{hH9+*kPvhF{]}<IlWg=TA-=ewn,q8e;jubq*SSkq=tl-6\
                    {62@[S,s=o<eYTr+&0>&AbDQx?whg7IHw-0)exH]vf9vHEG&8s7qEt$vD)\
                    #&?lPt50*z_%5*ibx@GvedG6)S<5FmV0=C^V)+D*j0E#@44n<]ah7b[3_X\
                    iIo=F7#GL(FoH&N5?+oacMc}5jx8HB8V9R0#0Vtf-w+kQFR(0ts}e7vxH3\
                    fIIBJ>riK;*Xg2LrD7[rTyV(e>{>tNJ$^Ol748FewdcNC,exv_kuT%i_#x\
                    a-3Rw{9[Me$Sk?XTQTN4d-51-2}AoJmzfb-^R{lUz{=rH42cP6G9Fo7VYq\
                    &i]zfJVZpYB,v6QlC4+a],aCx5%&<?jmqsC!BN$A31XojL~~"))}, {
                 RGBColor(0, 0, 0.75), 
                 LineBox(
                  CompressedData(
                    "1:c$_VhPe{{Y7{}w4Rt(BUc4=MGf*}Tz5,A]^Fr>ex9lW$txtfp^bqEg@\
                    9U?4#n30yqq%O7vL#&+i9T5_FP!,yqt=!bs*xDawrm$?W=h=ICd3oN?^FG\
                    h_,Mze8-E47NOtNZ1mzrNUkJ?ul9rHxSJl4=]>fN=$>%aM,e2i3wT1(!8s\
                    [sxYt#=yrPID+*>$]TU6=>E3p{t4U+uK}P&Iw=Si!SG[!{H^43;&1i+(Td\
                    Vz!Lj[FYu_X<4d$7Pc0x%Q)OQeKF#cnwGB-hb9^Iwg58#$9p6$J?l0rUBA\
                    ;GHW?xf={gQ8<Lk}Yu8;^f+ljMnUcRcd-ZY0gL<crWV{OH5xsx&9%ILiyw\
                    ==E4r^a>y5_J&)n?a3r-grA}yAE-L#NU}vW6dO;iFE8Bu$ywni*}<,7qUC\
                    vl0pZ{B,}6h3b^j0Ud}AE_q)+r)WLV+>7Dcalwn==16n)]f?J38-JR^F<X\
                    vo=MR{DunbeWmZ{UnV#iQ]A&VUzq,>{T9ZQtt?!Xnvg5_Yv3kF(C0E,n5i\
                    EYW<kj,q8KT;gI%+p!Saj?H{pHc[?T2>Vt084_4I=&s1NyR9{S]{y4AtBQ\
                    N}McIkX@N9TtDogeHvUkvGd;n(@2OXrV}>JOyVA6S!oIsB{aJ?bwUQGX$z\
                    {zJR^51-VZ@T))ZSGW?csDE)^{q3mu8>8xfM]nI&pY?w@D*vOxZ*^SM}AY\
                    T6FUyJ~"))}}, AspectRatio -> 
                NCache(1/GoldenRatio, 0.6180339887498948`), Axes -> True, 
               PlotRange -> 
                NCache({-4 .. 4, -1.5874010519681994` .. 1.5874010519681991`}, 
                 {-4.0 .. 4.0, -1.5874010519681994` .. 1.5874010519681991`}), 
               PlotRangePadding :> {None, Scaled(0.04)})), "Output", 
             SectionGenerated -> True, SectionLabel -> "out [1]:")}, All)}, 
         All)}, All), SectionGroup({Section("Scope", "ExampleSection"), 
        Section("Evaluate numerically:", "ExampleText"), 
        SectionGroup({Section(BoxData({"Surd", "(", {"2.5", ",", "5"}, ")"}), 
           "Input", SectionLabel -> "in [1]:"), 
          Section(BoxData("1.201124433981431`"), "Output", 
           SectionGenerated -> True, SectionLabel -> "out [1]:")}, All), 
        SectionGroup({
          Section(BoxData(InterpretationBox("", $Line:= 0;, 
             Editable -> False)), "ExampleDelimiter"), 
          Section(TextData({TemplateBox({"Surd"}, "ReferenceHyperlink"), 
             " threads over lists and matrices:"}), "ExampleText"), 
          SectionGroup({
            Section(
             BoxData({"Surd", "(", {
                {"{", {{"-", "1"}, ",", "2", ",", {"-", "3"}, ",", {"-", "4"}, 
                  ",", "5", ",", "6", ",", "7", ",", "8", ",", "Pi", ",", {
                   "ExponentialE", SuperscriptBox("5")}}, "}"}, ",", "5"}, 
               ")"}), "Input", SectionLabel -> "in [1]:"), 
            Section(
             BoxData({
               "{", {{"-", "1"}, ",", {"2", SuperscriptBox({"1", "/", "5"})}, 
                ",", {"-", {"3", SuperscriptBox({"1", "/", "5"})}}, ",", {
                 "-", {"2", SuperscriptBox({"2", "/", "5"})}}, ",", {
                 "5", SuperscriptBox({"1", "/", "5"})}, ",", {
                 "6", SuperscriptBox({"1", "/", "5"})}, ",", {
                 "7", SuperscriptBox({"1", "/", "5"})}, ",", {
                 "2", SuperscriptBox({"3", "/", "5"})}, ",", {
                 "\[Pi]", SuperscriptBox({"1", "/", "5"})}, ",", 
                "\[ExponentialE]"}, "}"}), "Output", SectionGenerated -> True, 
             SectionLabel -> "out [1]:")}, All), 
          SectionGroup({
            Section(
             BoxData({"Surd", "(", {
                {"(", GridBox({{"4", "x"}, {"y", "8"}}), ")"}, ",", "3"}, 
               ")"}), "Input", SectionLabel -> "in [2]:"), 
            Section(
             BoxData({
               "{", {{"{", {{"4", SuperscriptBox({"1", "/", "3"})}, ",", 
                  RadicalBox("x", "3", SurdForm -> True)}, "}"}, ",", {
                 "{", {RadicalBox("y", "3", SurdForm -> True), ",", "2"}, 
                 "}"}}, "}"}), "Output", SectionGenerated -> True, 
             SectionLabel -> "out [2]:")}, All)}, All)}, 1), 
      SectionGroup({Section("Properties & Relations", "ExampleSection"), 
        Section("Basic transforms are automatically applied:", "ExampleText"), 
        SectionGroup({
          Section(BoxData({"Surd", "(", {{"Pi", "^", "10"}, ",", "5"}, ")"}), 
           "Input", SectionLabel -> "in [1]:"), 
          Section(BoxData({"\[Pi]", SuperscriptBox("2")}), "Output", 
           SectionGenerated -> True, SectionLabel -> "out [1]:")}, All)}, 1), 
      SectionGroup({Section("Possible Issues", "ExampleSection"), 
        Section(TextData({TemplateBox({"Surd"}, "ReferenceHyperlink"), 
           " is only defined for real arguments:"}), "ExampleText"), 
        SectionGroup({
          Section(BoxData({"Surd", "(", {{"2.5", "+", "ImaginaryI"}, ",", 
              "5"}, ")"}), "Input", SectionLabel -> "in [1]:"), 
          Section(
           BoxData({
             TemplateBox({
               TemplateBox({MessageName -> HoldForm(Surd::"preal"), 
                 Message -> StringForm(
                   "The parameter `1` should be real-valued.", 
                   2.5 + Section$$2763`I), 
                 Stack -> {
                   {"Head" -> Surd, "Location" -> 
                     Language`SourceLocation(
                      FrontEndObject(11441088334005088292, 985), 0 .. 22)}, {
                    "Head" -> System`Private`AutoSimplifySurd}, {
                    "Head" -> EvaluationSequence, 
                    "Location" -> Language`SourceLocation(
                      "C:\\Users\\Peter\\Documents\\Programmieren\\pmath\\modu\
                      les\\System\\Numerics\\simplify-surd.pmath", {
                        30, 56} .. {66, 0})}, {"Head" -> EvaluationSequence, 
                    "Location" -> Language`SourceLocation(
                      "C:\\Users\\Peter\\Documents\\Programmieren\\pmath\\modu\
                      les\\System\\Numerics\\simplify-surd.pmath", {
                        45, 28} .. {48, 0})}, {"Head" -> Message, 
                    "Location" -> Language`SourceLocation(
                      "C:\\Users\\Peter\\Documents\\Programmieren\\pmath\\modu\
                      les\\System\\Numerics\\simplify-surd.pmath", {
                        46, 16} .. {46, 39})}, {"Head" -> SectionPrint}}}, 
                "MessageMenuButton"), {"Surd", "::", StringBox("\"preal\"")}}, 
              "RowDefault"), ":", " ", InterpretationBox(
              StringBox("\"The parameter ", {"2.5", "+", "\[ImaginaryI]"}, 
               " should be real-valued.\""), 
              StringForm("The parameter `1` should be real-valued.", 
               2.5 + Section$$2763`I), Editable -> False)}), "Message", 
           SectionGenerated -> True), 
          Section(BoxData(RadicalBox({"2.5", "+", "\[ImaginaryI]"}, "5", 
             SurdForm -> True)), "Output", SectionGenerated -> True, 
           SectionLabel -> "out [1]:")}, All), 
        SectionGroup({
          Section(BoxData(InterpretationBox("", $Line:= 0;, 
             Editable -> False)), "ExampleDelimiter"), 
          Section(TextData({"For even ", StyleBox("n", "Arg"), ", ", 
             TemplateBox({"Surd"}, "ReferenceHyperlink"), "(", 
             StyleBox("x", "Arg"), ", ", StyleBox("n", "Arg"), 
             ") is only defined for non-negative real ", StyleBox("x", "Arg"), 
             ":"}), "ExampleText"), 
          SectionGroup({
            Section(BoxData({"Surd", "(", {{"-", "1"}, ",", "2"}, ")"}), 
             "Input", SectionLabel -> "in [1]:"), 
            Section(
             BoxData({
               TemplateBox({
                 TemplateBox({MessageName -> HoldForm(Surd::"noneg"), 
                   Message -> StringForm(
                     "Surd is undefined for even roots of negative values.", 
                     Button(HoldForm(Surd(-1, 2)), 
                      Developer`OpenTextFile(
                       "C:\\Users\\Peter\\Documents\\Programmieren\\pmath\\mod\
                       ules\\System\\Numerics\\simplify-surd.pmath", 
                       Line -> 52, Column -> 41), BaseStyle -> "Hyperlink")), 
                   Stack -> {
                     {"Head" -> Surd, "Location" -> 
                       Language`SourceLocation(
                        FrontEndObject(11441088334005088292, 1030), 0 .. 10)}, 
                     {"Head" -> System`Private`AutoSimplifySurd}, {
                      "Head" -> EvaluationSequence, 
                      "Location" -> Language`SourceLocation(
                        "C:\\Users\\Peter\\Documents\\Programmieren\\pmath\\mo\
                        dules\\System\\Numerics\\simplify-surd.pmath", {
                          30, 56} .. {66, 0})}, {"Head" -> EvaluationSequence, 
                      "Location" -> Language`SourceLocation(
                        "C:\\Users\\Peter\\Documents\\Programmieren\\pmath\\mo\
                        dules\\System\\Numerics\\simplify-surd.pmath", {
                          51, 31} .. {54, 0})}, {"Head" -> Message, 
                      "Location" -> Language`SourceLocation(
                        "C:\\Users\\Peter\\Documents\\Programmieren\\pmath\\mo\
                        dules\\System\\Numerics\\simplify-surd.pmath", {
                          52, 20} .. {52, 62})}, {"Head" -> SectionPrint}}}, 
                  "MessageMenuButton"), {
                  "Surd", "::", StringBox("\"noneg\"")}}, "RowDefault"), ":", 
               " ", InterpretationBox(
                StringBox(
                 "\"Surd is undefined for even roots of negative values.\""), 
                StringForm(
                 "Surd is undefined for even roots of negative values.", 
                 Button(HoldForm(Surd(-1, 2)), 
                  Developer`OpenTextFile(
                   "C:\\Users\\Peter\\Documents\\Programmieren\\pmath\\modules\
                   \\System\\Numerics\\simplify-surd.pmath", Line -> 52, 
                   Column -> 41), BaseStyle -> "Hyperlink")), 
                Editable -> False)}), "Message", SectionGenerated -> True), 
            Section(BoxData("Undefined"), "Output", SectionGenerated -> True, 
             SectionLabel -> "out [1]:")}, All)}, All)}, 1), 
      Section("", "SectionFooterSpacer")}, All), 
    SectionGroup({Section("See Also", "SeeAlsoSection"), 
      Section(TextData({TemplateBox({"CubeRoot"}, "ReferenceHyperlink"), 
         "\[NonBreakingSpace]\[Dot] ", TemplateBox({"Power"}, 
          "ReferenceHyperlink"), "\[NonBreakingSpace]\[Dot] ", 
         TemplateBox({"Sqrt"}, "ReferenceHyperlink")}), "SeeAlso")}, All)}, 
   All)}, StyleDefinitions -> "Reference.pmathdoc", Visible -> True)
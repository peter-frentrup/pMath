/* pMath Document */

Document({
  SectionGroup({
    SectionGroup({Section("OpenerView", "ObjectName"), 
      Section(BoxData(TemplateBox({"OpenerView"}, "UsageReference")), 
       "Usage")}, All), SectionGroup({
      Section("Details and Options", "NotesSection"), 
      SectionGroup({Section("", "NotesSectionHeaderSpacer"), 
        Section(TextData({TemplateBox({"OpenerView"}, "ReferenceHyperlink"), 
           "(", StyleBox("list", "Arg"), ", ", 
           TemplateBox({"Dynamic"}, "ReferenceHyperlink"), "(", 
           StyleBox("s", "Arg"), 
           ")) takes the opener state to be specified by the dynamically \
           updated current value of ", StyleBox("s", "Arg"), "."}), "Notes")}, 
       All), Section("", "SectionFooterSpacer")}, 1), 
    SectionGroup({Section("Examples", "PrimaryExamplesSection"), 
      SectionGroup({Section("Basic Examples", "ExampleSection"), 
        SectionGroup({
          Section(BoxData({"OpenerView", "(", {"{", {"a", ",", "b"}, "}"}, 
             ")"}), "Input", SectionLabel -> "in [1]:"), 
          Section(BoxData(TemplateBox({"a", "b", False}, "OpenerView")), 
           "Output", SectionGenerated -> True, SectionLabel -> "out [1]:")}, 
         All), SectionGroup({
          Section(BoxData(InterpretationBox("", $Line:= 0;, 
             Editable -> False)), "ExampleDelimiter"), 
          Section("Start with all contents revealed: ", "ExampleText"), 
          SectionGroup({
            Section(BoxData({"OpenerView", "(", {
                {"{", {"a", ",", "b"}, "}"}, ",", "True"}, ")"}), "Input", 
             SectionLabel -> "in [1]:"), 
            Section(BoxData(TemplateBox({"a", "b", True}, "OpenerView")), 
             "Output", SectionGenerated -> True, SectionLabel -> "out [1]:")}, 
           All)}, All)}, All), 
      SectionGroup({Section("Scope", "ExampleSection"), 
        SectionGroup({Section("OpenerView content", "ExampleSubsection"), 
          Section(TextData({TemplateBox({"OpenerView"}, "ReferenceHyperlink"), 
             " can contain any expression:"}), "ExampleText"), 
          SectionGroup({
            Section(BoxData({"OpenerView", "(", {
                "{", {{"Sin", "(", "x", ")"}, ",", {
                  "Plot", "(", {{"Sin", "(", "x", ")"}, ",", {
                    "x", "\[Rule]", {"0", "..", "10"}}}, ")"}}, "}"}, ")"}), 
             "Input", SectionLabel -> "in [1]:"), 
            Section(
             BoxData(TemplateBox({{"Sin", "(", {"x"}, ")"}, 
                GraphicsBox({
                  {RGBColor(0.75, 0, 0), 
                   LineBox(
                    CompressedData(
                      "1:c${5UX;c&E8b(&F3S<(&3S<HT6>e!OZUt+;x20BDwAE7)j}hm0Py]\
                      cj6g^dFMMXssZY}2iQbc;JQW0-au{y35;(}pMg^PfKY)M9egd{Avka_1\
                      %=j6}vZ@%}g=F9VpsfnYhd8Mhj$v>{kaZTlMP4z?)+Eem0yq<9PuSr3p\
                      onn)wow)jEkNp&+@y%wxor*3pzFHo]5-a#@i+6qxF)q8lCG#patU7J4z\
                      ][qOiSj}Ost_eHF8lYB!x0@vtzRh#hdMwGe<]Oig{erqao_+MT9j3uU!\
                      @{$<BwBnQoc#HGfk%=}1;vL$tN<}i$ph;<c!a&Qj;ZqZA)U7u_V9<pdl\
                      {uJNc1,EH^(@LrD5=}24;0)T1H(L7Nx&m#,e({6Uf(AK380J(lCYaqRx\
                      +(3AgEv&estv,=n#w0e&7ZVnQ}9FO?8HkQ+,93-tLd{V2sSYo8-pe0rC\
                      #LkOlQLmQxW@tvz2M{k=OI)8@ywj*fydo,;nw+)w7)HDrElCV%o-7+hJ\
                      QE#RS=j&dvVrCFd+A77e%7Wz1L}3;BTiu@H)b0UFGEKX*8bEHHG+8MIu\
                      a&*({)^r{<Q0eRZL0CEe(tQ>dC={_T8Ot5fAj_w5am^NeaY^)00^1bB%\
                      5th?l1)?%VaA(q_b](v!uO(y*1ah^Nt$Gmn;DkCdZ6*CArvIsZfg!@rL\
                      qa<Km3ywqa!t7(WVSRb{1e+Em8xATXIOX0o82cmiZhsn#6LuCj2c)y2<\
                      ([P)m9h$-WJ3,#w{pGWtlq&RVlw}jpb-viopQlk0ozs?{L#gn*8c0CG)\
                      xI]GN^U-70@j]9HTdckxNZU$LvJ7cbF]8bPXH<ShgNj<Am0g)Ubn3G8F\
                      V8*Q@AfKJf9rZiTLJFDzBb;!TlAUH%pLiTV__L{+shVdkUN)-v%5z*T,\
                      _sTZ6OZHjQt<ONR5?24r_1$?l$gjrX=N{g11G@]?Ur&Tm_&d=m5N(Yju\
                      S<0pVeX[&#2ot2D{&q@L0xVeSKUsQ7QQw5OpP]-WYw]8_9D-l4fWzG2=\
                      r&SE6M*vgjZWel2u-yJW0em3]([_M[IlM^[Sj8u1SgvNdc@he=-BTWFQ\
                      &@(3Ulf>uOHgMn%QTJ;Tt>m;jw}+$FR{#0<Nt{QQ<8A=tej;G<5vO&$4\
                      8c@WY@AB{w@l7&h)I^-i-71QDBk#D;?5-e6lH+mp^]+Tm{SV&!<43{&B\
                      ^WKIC_nf?veKkQNQg,SD*0?yL*iTB1k3Hz_C>p1mu1gk_BH;{gRyf2&A\
                      e1IrlCM?D2IzT9A^Ga%ke3LXT_&Mq?,o}1xJJ4zd(MiEa(!A6_px6_7E\
                      pScijUyJTzw5ZQU2y>-()f)#;pMwyN$Jx;qEb4O?f+9_NvY-p,yoIpj_\
                      t?AzZHTu>2)B}Q!sX8p&tC}C+_v{zQ;m8egivd7gxYcy,6mlu>h5b2+0\
                      QI@UNVJXnt84$F%A7F62k6#4oR,$$mg06eAJ^Y8+{PJW^6r)y&q}Vc-=\
                      x^n5^_]+EjQxMKI??t2*t1ikt5xf*SV9Sc<4PKi7)Dq&z;w?3R+-pCN)\
                      (_2L]Z-b#*Nxd;]7nr*26QNeI}GY#[+f]L@qdhvWu1L>(}HX)]*;qu!K\
                      $]N?MJigh%&2O>;K}x9jwWtmKm=2o*?f1;+l;iw&VWFrjfE>Dw,R@Qt(\
                      =I)fK7B#1823AXZ2i7[iQL=q}K}urK415JC+*_$P3Z_D3m323Z,y--;s\
                      k}TZFPH(^<q9df%l5,$^Ko]XEjcsv@!dp{5!tC#PH$o!]3S2V?TL,LG)\
                      f>o#!qU=Cc@@?1OVlU#htMNn*$gjUC9e<?]t$6<rfew)tW{7Kq_;^k,&\
                      61fSnx*yG[{B=CF8<40ontyQpQb^)K]Vwf>!XQg!o%jq2wgH,{trLEPt\
                      -;#!,pxkqQ&-uKk;RpRa!Ra=f=S0KFiIWzLb}D,R8Xino)$%oq,8[70Z\
                      yS5-iwF3Apn*9a-q)}iJ_w[2y(Gu_lVQXQroqnbhV7nF#EYaMH!=G4pL\
                      ]DC(O@%iYr5Ki{hdO?n=(tqECcG<OT(UmGRf+({+ck3mqo)7ujSsUdeo\
                      OkgLI44$3<iPl,xK1Ov7JM;VbTp^_TlNUKtIG#U91Yy@+?6hLXhxqWat\
                      U?*$s[Ut#6u&4^b^L(BzQMAf3cRvJ3a&phNH=lhI?QVaOX^%C!=1R{!O\
                      PISrT{glAnGZ$T_r}^DCz]yN]-aEm(pAzUvs%RhifcH[Z}MsgK(wOmnO\
                      5jLy;<[+)?5ki2=w(Y&q_O<>js$jI&YLyzR*C*dV3oJ,7u#Z#*vAqmZ7\
                      A8U_*;Q[ECI(ulw7pE7x_z}bxPlEpZ0F-GiS&QIq03,*oA%U4ELKK+Fc\
                      )ch5hCXb-^DuEZ^[0,^^Px?,#S6ym5;d^UW}5KL4^,eJZ+*,9Gbc?b!~\
                      ~"))}}, {
                  AspectRatio -> NCache(1/GoldenRatio, 0.6180339887498948`), 
                  Axes -> True, PlotRange -> 
                   NCache({0 .. 10, -0.9999967038406539` .. 
                      0.9999958976449561`}, {
                     0.0 .. 10.0, -0.9999967038406539` .. 
                      0.9999958976449561`}), PlotRangePadding -> {
                    None, Scaled(0.04)}}), False}, "OpenerView")), "Output", 
             SectionGenerated -> True, SectionLabel -> "out [1]:")}, All), 
          SectionGroup({
            Section(BoxData(InterpretationBox("", $Line:= 0;, 
               Editable -> False)), "ExampleDelimiter"), 
            Section(
             TextData({TemplateBox({"OpenerView"}, "ReferenceHyperlink"), 
               " can be nested:"}), "ExampleText"), 
            SectionGroup({
              Section(BoxData({"OpenerView", "(", {
                  "{", {{"OpenerView", "(", {"{", {"a", ",", "b"}, "}"}, ")"}, 
                   ",", {"OpenerView", "(", {"{", {"x", ",", "y"}, "}"}, 
                    ")"}}, "}"}, ")"}), "Input", SectionLabel -> "in [1]:"), 
              Section(
               BoxData(TemplateBox({
                  TemplateBox({"a", "b", False}, "OpenerView"), 
                  TemplateBox({"x", "y", False}, "OpenerView"), False}, 
                 "OpenerView")), "Output", SectionGenerated -> True, 
               SectionLabel -> "out [1]:")}, All)}, All)}, 1), 
        SectionGroup({Section("OpenerView control", "ExampleSubsection"), 
          Section(TextData({"Connect an ", TemplateBox({"OpenerView"}, 
              "ReferenceHyperlink"), " to a ", 
             TemplateBox({"Checkbox"}, "ReferenceHyperlink"), ":"}), 
           "ExampleText"), SectionGroup({
            Section(
             BoxData({
               "{", {
                {"OpenerView", "(", {
                  {"{", {{{"(", {"a", "+", "b"}, ")"}, SuperscriptBox("3")}, 
                    ",", {"Expand", "(", {{"(", {"a", "+", "b"}, ")"}, 
                      SuperscriptBox("3")}, ")"}}, "}"}, ",", {
                   "Dynamic", "(", "s", ")"}}, ")"}, ",", {
                 "Checkbox", "(", {"Dynamic", "(", "s", ")"}, ")"}}, "}"}), 
             "Input", SectionLabel -> "in [1]:"), 
            Section(
             BoxData({
               "{", {
                TemplateBox({{{"(", {"a", "+", "b"}, ")"}, 
                   SuperscriptBox("3")}, {{"a", SuperscriptBox("3")}, "+", {
                    "b", SuperscriptBox("3")}, "+", {
                    "3", "a", " ", {"b", SuperscriptBox("2")}}, "+", {
                    "3", "b", " ", {"a", SuperscriptBox("2")}}}, 
                  Dynamic($Context`s)}, "OpenerView"), ",", 
                CheckboxBox(Dynamic($Context`s))}, "}"}), "Output", 
             SectionGenerated -> True, SectionLabel -> "out [1]:")}, All)}, 
         1)}, 1), SectionGroup({Section("Neat examples", "ExampleSection"), 
        Section("An interactive directory tree view:", "ExampleText"), 
        Section(BoxData({"Function", " ", {"fileTreeItem", "(", {"~", "path"}, 
            ")"}, {
            "{", {
             "\n", {
              {{"With", "(", {
                 {"info", "\[Assign]", {"FileInformation", "(", "path", ")"}}, 
                 ",", {"label", "\[Assign]", {
                   "Last", "(", {"FileNameSplit", "(", "path", ")"}, ")"}}}, 
                ")"}, "\n", {
                {"If", "(", {{"info", "[", {"Key", "(", "FileType", ")"}, 
                   "]"}, "===", "Directory"}, ")"}, {
                 "{", {
                  "\n", {
                   {"OpenerView", "(", {
                     "{", {"label", ",", {"Dynamic", "(", {
                        {"With", "(", {"entries", ":=", {
                           "FileNames", "(", {"path", ",", 
                            StringBox("\"*\"")}, ")"}}, ")"}, {
                         "{", {
                          "\n", {{{"If", "(", {"entries", "===", {"{", "}"}}, 
                             ")"}, {
                             "{", {
                              "\n", {{"Skeleton", "(", StringBox("\"empty\""), 
                                ")"}, "\n"}}, "}"}, "Else", {
                             "{", {
                              "\n", {
                               {"Column", "(", {"entries", ".", "Map", "(", 
                                 "fileTreeItem", ")"}, ")"}, "\n"}}, "}"}}, 
                           "\n"}}, "}"}}, ")"}}, "}"}, ")"}, "\n"}}, "}"}, 
                "Else", {
                 "{", {
                  "\n", {
                   {"Style", "(", {
                     {"Row", "(", {"{", {StringBox("\"   \""), ",", "label"}, 
                       "}"}, ")"}, ",", StringBox("\"ControlStyle\"")}, ")"}, 
                   "\n"}}, "}"}}}, "\n"}}, "}"}}), "Input", 
         SectionLabel -> "in [1]:"), 
        SectionGroup({
          Section(BoxData({"fileTreeItem", "(", "$BaseDirectory", ")"}), 
           "Input", SectionLabel -> "in [2]:"), 
          Section(
           BoxData(TemplateBox({StringBox("\"scripts\""), 
              DynamicBox(
               ToBoxes(
                With({
                  $Context`entries$:= 
                   FileNames(
                    "C:\\Users\\Peter\\Documents\\Programmieren\\pmath\\librar\
                    y\\scripts\\", "*")}, If($Context`entries$ === {}, 
                  Skeleton("empty"), 
                  Column(Map($Context`entries$, $Context`fileTreeItem)))))), 
              False}, "OpenerView")), "Output", SectionGenerated -> True, 
           SectionLabel -> "out [2]:")}, All)}, 1), 
      Section("", "SectionFooterSpacer")}, All), 
    SectionGroup({Section("See Also", "SeeAlsoSection"), 
      Section(TextData({TemplateBox({"Opener"}, "ReferenceHyperlink"), 
         "\[NonBreakingSpace]\[Dot] ", TemplateBox({"TabView"}, 
          "ReferenceHyperlink")}), "SeeAlso")}, All)}, All)}, 
 StyleDefinitions -> "Reference.pmathdoc", Visible -> True)
/* pMath Document */

Document({
  SectionGroup({
    SectionGroup({Section("OpenerView", "ObjectName"), 
      Section(BoxData(TemplateBox({"OpenerView"}, "UsageReference")), 
       "Usage")}, All), SectionGroup({
      Section("Details and Options", "NotesSection"), 
      SectionGroup({Section("", "NotesSectionHeaderSpacer"), 
        Section(TextData({TemplateBox({"OpenerView"}, "ReferenceHyperlink"), 
           "(", StyleBox("list", "Arg"), ", ", 
           TemplateBox({"Dynamic"}, "ReferenceHyperlink"), "(", 
           StyleBox("s", "Arg"), 
           ")) takes the opener state to be specified by the dynamically \
           updated current value of ", StyleBox("s", "Arg"), "."}), "Notes")}, 
       All), Section("", "SectionFooterSpacer")}, 1), 
    SectionGroup({Section("Examples", "PrimaryExamplesSection"), 
      SectionGroup({Section("Basic Examples", "ExampleSection"), 
        SectionGroup({
          Section(BoxData({"OpenerView", "(", {"{", {"a", ",", "b"}, "}"}, 
             ")"}), "Input", SectionLabel -> "in [1]:"), 
          Section(BoxData(TemplateBox({"a", "b", False}, "OpenerView")), 
           "Output", SectionGenerated -> True, SectionLabel -> "out [1]:")}, 
         All), SectionGroup({
          Section(BoxData(InterpretationBox("", $Line:= 0;, 
             Editable -> False)), "ExampleDelimiter"), 
          Section("Start with all contents revealed: ", "ExampleText"), 
          SectionGroup({
            Section(BoxData({"OpenerView", "(", {
                {"{", {"a", ",", "b"}, "}"}, ",", "True"}, ")"}), "Input", 
             SectionLabel -> "in [1]:"), 
            Section(BoxData(TemplateBox({"a", "b", True}, "OpenerView")), 
             "Output", SectionGenerated -> True, SectionLabel -> "out [1]:")}, 
           All)}, All)}, All), 
      SectionGroup({Section("Scope", "ExampleSection"), 
        SectionGroup({Section("OpenerView content", "ExampleSubsection"), 
          Section(TextData({TemplateBox({"OpenerView"}, "ReferenceHyperlink"), 
             " can contain any expression:"}), "ExampleText"), 
          SectionGroup({
            Section(BoxData({"OpenerView", "(", {
                "{", {{"Sin", "(", "x", ")"}, ",", {
                  "Plot", "(", {{"Sin", "(", "x", ")"}, ",", {
                    "x", "\[Rule]", {"0", "..", "10"}}}, ")"}}, "}"}, ")"}), 
             "Input", SectionLabel -> "in [1]:"), 
            Section(
             BoxData(TemplateBox({{"Sin", "(", {"x"}, ")"}, 
                GraphicsBox({
                  {RGBColor(0.75`, 0, 0), {
                    LineBox({{0.0`, 0.0`}, {0.35714285714285715`, 
                       0.34959880813534205`}, {0.7142857142857143`, 
                       0.6550778971785185`}, {0.89285714285714279`, 
                       0.77886689343679483`}, {0.9821428571428571`, 
                       0.83168908256811924`}, {1.0714285714285714`, 
                       0.87788550069473692`}, {1.1607142857142856`, 
                       0.91708811739018181`}, {1.2053571428571428`, 
                       0.9339669046849095`}, {1.25`, 0.9489846193555862`}, {
                       1.2946428571428572`, 0.96211133629725454`}, {
                       1.3169642857142858`, 0.96795724788824233`}, {
                       1.3392857142857144`, 0.97332089850861037`}, {
                       1.361607142857143`, 0.97819961585091952`}, {
                       1.3839285714285716`, 0.98259096921384903`}, {
                       1.40625`, 0.98649277071323371`}, {
                       1.4285714285714286`, 0.98990307637212382`}, {
                       1.4508928571428572`, 0.99282018708932385`}, {
                       1.4620535714285714`, 0.9940933305447166`}, {
                       1.4732142857142856`, 0.99524264948592789`}, {
                       1.484375`, 0.99626800075350264`}, {
                       1.4955357142857142`, 0.99716925662943012`}, {
                       1.5066964285714284`, 0.99794630485305291`}, {
                       1.5178571428571428`, 0.99859904863504956`}, {
                       1.5290178571428572`, 0.99912740666949107`}, {
                       1.5401785714285714`, 0.99953131314396848`}, {
                       1.5513392857142856`, 0.99981071774779029`}, {
                       1.5625`, 0.99996558567824878`}, {
                       1.5736607142857144`, 0.99999589764495611`}, {
                       1.5848214285714286`, 0.99990164987224583`}, {
                       1.5959821428571428`, 0.99968285409964419`}, {
                       1.6071428571428572`, 0.9993395375804075`}, {
                       1.6183035714285716`, 0.99887174307812721`}, {
                       1.6294642857142858`, 0.99827952886140392`}, {
                       1.640625`, 0.99756296869658845`}, {
                       1.6517857142857144`, 0.99672215183859458`}, {
                       1.6629464285714286`, 0.99575718301978067`}, {
                       1.6741071428571428`, 0.99466818243690425`}, {
                       1.6852678571428572`, 0.99345528573615083`}, {
                       1.6964285714285714`, 0.99211864399623706`}, {
                       1.71875`, 0.98907480676162263`}, {
                       1.7410714285714284`, 0.98553818725034759`}, {
                       1.763392857142857`, 0.98151054749638811`}, {
                       1.7857142857142856`, 0.97699389417251958`}, {
                       1.8080357142857142`, 0.97199047759054091`}, {
                       1.8303571428571428`, 0.96650279058011246`}, {
                       1.875`, 0.95408578160969371`}, {
                       1.9196428571428572`, 0.93976761006034071`}, {
                       1.9642857142857142`, 0.92357680708981005`}, {
                       2.0089285714285712`, 0.90554563536181987`}, {
                       2.0535714285714284`, 0.88571002475773331`}, {
                       2.1428571428571428`, 0.84078710579525029`}, {
                       2.2321428571428568`, 0.78916593511409927`}, {
                       2.3214285714285712`, 0.73125776021421351`}, {
                       2.5`, 0.59847214410395644`}, {
                       2.8571428571428572`, 0.28062939951435684`}, {
                       3.5714285714285716`, -0.41672165175349984`}, {
                       3.75`, -0.57156131874234373`}, {
                       3.9285714285714288`, -0.70822355859685471`}, {
                       4.1071428571428577`, -0.82236208715554238`}, {
                       4.1964285714285712`, -0.86981928611796722`}, {
                       4.2857142857142856`, -0.91034694431078267`}, {
                       4.3303571428571423`, -0.92790906903353443`}, {
                       4.375`, -0.94362219230096245`}, {
                       4.4196428571428568`, -0.95745500329958355`}, {
                       4.4642857142857135`, -0.96937993802714717`}, {
                       4.4866071428571423`, -0.9746193762290225`}, {
                       4.5089285714285712`, -0.97937323421814504`}, {
                       4.53125`, -0.9836391435013061`}, {
                       4.5535714285714279`, -0.98741497869377814`}, {
                       4.5758928571428559`, -0.99069885857823592`}, {
                       4.5982142857142847`, -0.99348914704202707`}, {
                       4.6093749999999991`, -0.99469875042989275`}, {
                       4.6205357142857135`, -0.99578445389232439`}, {
                       4.6316964285714279`, -0.99674612219382708`}, {
                       4.6428571428571423`, -0.99758363554875606`}, {
                       4.6540178571428568`, -0.99829688963623842`}, {
                       4.6651785714285712`, -0.99888579561316615`}, {
                       4.6763392857142856`, -0.9993502801252635`}, {
                       4.6875`, -0.99969028531622328`}, {
                       4.6986607142857144`, -0.99990576883491378`}, {
                       4.7098214285714288`, -0.99999670384065387`}, {
                       4.7209821428571423`, -0.99996307900655645`}, {
                       4.7321428571428568`, -0.99980489852093946`}, {
                       4.7433035714285712`, -0.99952218208680366`}, {
                       4.7544642857142847`, -0.9991149649193789`}, {
                       4.7656249999999991`, -0.99858329774173749`}, {
                       4.7767857142857135`, -0.99792724677847633`}, {
                       4.7879464285714279`, -0.99714689374746746`}, {
                       4.7991071428571423`, -0.99624233584968003`}, {
                       4.8102678571428568`, -0.99521368575707225`}, {
                       4.8214285714285712`, -0.99406107159855728`}, {
                       4.84375`, -0.99138454078655025`}, {
                       4.8660714285714288`, -0.98821407692952479`}, {
                       4.8883928571428577`, -0.98455125963337786`}, {
                       4.9107142857142856`, -0.98039791380703867`}, {
                       4.9330357142857135`, -0.97575610875325147`}, {
                       4.9553571428571423`, -0.97062815713759654`}, {
                       4.9776785714285712`, -0.96501661383626203`}, {
                       5.0`, -0.95892427466313845`}, {
                       5.0446428571428577`, -0.94530958816857891`}, {
                       5.0892857142857144`, -0.92981122700956575`}, {
                       5.1339285714285712`, -0.91246007405306762`}, {
                       5.1785714285714288`, -0.89329070413851464`}, {
                       5.2678571428571432`, -0.84965365206164667`}, {
                       5.3571428571428577`, -0.79924771164673536`}, {
                       5.5357142857142865`, -0.67978615676394427`}, {
                       5.7142857142857144`, -0.53870528838615617`}, {
                       6.0714285714285712`, -0.21017771916975933`}, {
                       6.4285714285714288`, 0.14487448832747582`}, {
                       6.7857142857142865`, 0.48164339056196831`}, {
                       6.9642857142857153`, 0.62964828968965347`}, {
                       7.1428571428571432`, 0.75762841539272019`}, {
                       7.2321428571428577`, 0.81280868737110235`}, {
                       7.3214285714285712`, 0.86151360173564151`}, {
                       7.4107142857142856`, 0.90335514376287152`}, {
                       7.4553571428571423`, 0.9215957708879593`}, {
                       7.5`, 0.93799997677473879`}, {
                       7.5446428571428577`, 0.95253507352137712`}, {
                       7.5892857142857144`, 0.9651720977133168`}, {
                       7.6116071428571423`, 0.97077081430588252`}, {
                       7.6339285714285712`, 0.97588586813733191`}, {
                       7.65625`, 0.98051471075748153`}, {
                       7.6785714285714288`, 0.98465503595896553`}, {
                       7.7008928571428577`, 0.98830478092624685`}, {
                       7.7232142857142856`, 0.9914621272633638`}, {
                       7.7455357142857135`, 0.99412550189990212`}, {
                       7.7566964285714279`, 0.99527152552254161`}, {
                       7.7678571428571423`, 0.99629357787473816`}, {
                       7.7790178571428568`, 0.99719153164939489`}, {
                       7.7901785714285712`, 0.9979652749971647`}, {
                       7.8013392857142856`, 0.9986147115403825`}, {
                       7.8125`, 0.99913976038506991`}, {
                       7.8236607142857144`, 0.99954035613101122`}, {
                       7.8348214285714288`, 0.99981644887990018`}, {
                       7.8459821428571423`, 0.99996800424155463`}, {
                       7.8571428571428568`, 0.99999500333820091`}, {
                       7.8683035714285712`, 0.9998974428068248`}, {
                       7.8794642857142847`, 0.99967533479959048`}, {
                       7.8906249999999991`, 0.9993287069823269`}, {
                       7.9017857142857135`, 0.99885760253108191`}, {
                       7.9129464285714279`, 0.99826208012674378`}, {
                       7.9241071428571423`, 0.99754221394773235`}, {
                       7.9352678571428568`, 0.99669809366075912`}, {
                       7.9464285714285712`, 0.99572982440965851`}, {
                       7.9575892857142856`, 0.99463752680229089`}, {
                       7.96875`, 0.9934213368955197`}, {
                       7.9910714285714279`, 0.9906179015526303`}, {
                       8.0133928571428559`, 0.98732091512392761`}, {
                       8.0357142857142847`, 0.98353202025207842`}, {
                       8.0580357142857135`, 0.97925310466107329`}, {
                       8.0803571428571423`, 0.97448630021571359`}, {
                       8.1026785714285712`, 0.96923398185946263`}, {
                       8.125`, 0.96349876643118804`}, {
                       8.1696428571428577`, 0.95059131324853685`}, {
                       8.2142857142857135`, 0.93578966075232017`}, {
                       8.2589285714285694`, 0.91912330351040006`}, {
                       8.303571428571427`, 0.90062545180148035`}, {
                       8.3928571428571423`, 0.85828628031990517`}, {
                       8.4821428571428577`, 0.80910944742245405`}, {
                       8.5714285714285712`, 0.75348672743963763`}, {
                       8.75`, 0.62472395375419232`}, {
                       8.9285714285714288`, 0.47609301583848262`}, {
                       9.2857142857142865`, 0.13861588967258465`}, {
                       10.0`, -0.54402111088936977`}})}}}, {
                  AspectRatio -> NCache(1/GoldenRatio, 0.61803398874989479`), 
                  Axes -> True, PlotRange -> 
                   NCache({0 .. 10, -0.99999670384065387` .. 
                      0.99999589764495611`}, {
                     0.0` .. 10.0`, -0.99999670384065387` .. 
                      0.99999589764495611`})}), False}, "OpenerView")), 
             "Output", SectionGenerated -> True, SectionLabel -> "out [1]:")}, 
           All), SectionGroup({
            Section(BoxData(InterpretationBox("", $Line:= 0;, 
               Editable -> False)), "ExampleDelimiter"), 
            Section(
             TextData({TemplateBox({"OpenerView"}, "ReferenceHyperlink"), 
               " can be nested:"}), "ExampleText"), 
            SectionGroup({
              Section(BoxData({"OpenerView", "(", {
                  "{", {{"OpenerView", "(", {"{", {"a", ",", "b"}, "}"}, ")"}, 
                   ",", {"OpenerView", "(", {"{", {"x", ",", "y"}, "}"}, 
                    ")"}}, "}"}, ")"}), "Input", SectionLabel -> "in [1]:"), 
              Section(
               BoxData(TemplateBox({
                  TemplateBox({"a", "b", False}, "OpenerView"), 
                  TemplateBox({"x", "y", False}, "OpenerView"), False}, 
                 "OpenerView")), "Output", SectionGenerated -> True, 
               SectionLabel -> "out [1]:")}, All)}, All)}, 1), 
        SectionGroup({Section("OpenerView control", "ExampleSubsection"), 
          Section(TextData({"Connect an ", TemplateBox({"OpenerView"}, 
              "ReferenceHyperlink"), " to a ", 
             TemplateBox({"Checkbox"}, "ReferenceHyperlink"), ":"}), 
           "ExampleText"), SectionGroup({
            Section(
             BoxData({
               "{", {
                {"OpenerView", "(", {
                  {"{", {{{"(", {"a", "+", "b"}, ")"}, SuperscriptBox("3")}, 
                    ",", {"Expand", "(", {{"(", {"a", "+", "b"}, ")"}, 
                      SuperscriptBox("3")}, ")"}}, "}"}, ",", {
                   "Dynamic", "(", "s", ")"}}, ")"}, ",", {
                 "Checkbox", "(", {"Dynamic", "(", "s", ")"}, ")"}}, "}"}), 
             "Input", SectionLabel -> "in [1]:"), 
            Section(
             BoxData({
               "{", {
                TemplateBox({{{"(", {"a", "+", "b"}, ")"}, 
                   SuperscriptBox("3")}, {{"a", SuperscriptBox("3")}, "+", {
                    "b", SuperscriptBox("3")}, "+", {
                    "3", "a", " ", {"b", SuperscriptBox("2")}}, "+", {
                    "3", "b", " ", {"a", SuperscriptBox("2")}}}, 
                  Dynamic($Context`s)}, "OpenerView"), ",", 
                CheckboxBox(Dynamic($Context`s))}, "}"}), "Output", 
             SectionGenerated -> True, SectionLabel -> "out [1]:")}, All)}, 
         1)}, 1), SectionGroup({Section("Neat examples", "ExampleSection"), 
        Section("An interactive directory tree view:", "ExampleText"), 
        Section(BoxData({"Function", " ", {"fileTreeItem", "(", {"~", "path"}, 
            ")"}, {
            "{", {
             "\n", {
              {{"With", "(", {
                 {"info", "\[Assign]", {"FileInformation", "(", "path", ")"}}, 
                 ",", {"label", "\[Assign]", {
                   "Last", "(", {"FileNameSplit", "(", "path", ")"}, ")"}}}, 
                ")"}, "\n", {
                {"If", "(", {{"info", "[", {"Key", "(", "FileType", ")"}, 
                   "]"}, "===", "Directory"}, ")"}, {
                 "{", {
                  "\n", {
                   {"OpenerView", "(", {
                     "{", {"label", ",", {"Dynamic", "(", {
                        {"With", "(", {"entries", ":=", {
                           "FileNames", "(", {"path", ",", 
                            StringBox("\"*\"")}, ")"}}, ")"}, {
                         "{", {
                          "\n", {{{"If", "(", {"entries", "===", {"{", "}"}}, 
                             ")"}, {
                             "{", {
                              "\n", {{"Skeleton", "(", StringBox("\"empty\""), 
                                ")"}, "\n"}}, "}"}, "Else", {
                             "{", {
                              "\n", {
                               {"Column", "(", {"entries", ".", "Map", "(", 
                                 "fileTreeItem", ")"}, ")"}, "\n"}}, "}"}}, 
                           "\n"}}, "}"}}, ")"}}, "}"}, ")"}, "\n"}}, "}"}, 
                "Else", {
                 "{", {
                  "\n", {
                   {"Style", "(", {
                     {"Row", "(", {"{", {StringBox("\"   \""), ",", "label"}, 
                       "}"}, ")"}, ",", StringBox("\"ControlStyle\"")}, ")"}, 
                   "\n"}}, "}"}}}, "\n"}}, "}"}}), "Input", 
         SectionLabel -> "in [1]:"), 
        SectionGroup({
          Section(BoxData({"fileTreeItem", "(", "$BaseDirectory", ")"}), 
           "Input", SectionLabel -> "in [2]:"), 
          Section(
           BoxData(TemplateBox({StringBox("\"scripts\""), 
              DynamicBox(
               ToBoxes(
                With({
                  $Context`entries$:= 
                   FileNames(
                    "C:\\Users\\Peter\\Documents\\Programmieren\\pmath\\librar\
                    y\\scripts\\", "*")}, If($Context`entries$ === {}, 
                  Skeleton("empty"), 
                  Column(Map($Context`entries$, $Context`fileTreeItem)))))), 
              False}, "OpenerView")), "Output", SectionGenerated -> True, 
           SectionLabel -> "out [2]:")}, All)}, 1), 
      Section("", "SectionFooterSpacer")}, All), 
    SectionGroup({Section("See Also", "SeeAlsoSection"), 
      Section(TextData({TemplateBox({"Opener"}, "ReferenceHyperlink"), 
         "\[NonBreakingSpace]\[Dot] ", TemplateBox({"TabView"}, 
          "ReferenceHyperlink")}), "SeeAlso")}, All)}, All)}, 
 StyleDefinitions -> "Reference.pmathdoc", Visible -> True)
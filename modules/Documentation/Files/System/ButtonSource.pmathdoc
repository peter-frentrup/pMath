/* pMath Document */

Document({
  SectionGroup({
    SectionGroup({Section("ButtonSource", "ObjectName"), 
      Section(BoxData(TemplateBox({"ButtonSource"}, "UsageReference")), 
       "Usage")}, All), SectionGroup({Section("Details", "NotesSection"), 
      SectionGroup({Section("", "NotesSectionHeaderSpacer"), 
        Section(TextData({"The default setting is ", 
           TemplateBox({"ButtonSource"}, "ReferenceHyperlink"), " \[Rule] ", 
           TemplateBox({"Automatic"}, "ReferenceHyperlink"), "."}), "Notes"), 
        Section("Possible settings are:", "Notes"), 
        Section(
         TextData({
           StringBox("\"", 
            GridBox({{TemplateBox({"Automatic"}, "ReferenceHyperlink"), 
               /\/({{TemplateBox({"ButtonData"}, "ReferenceHyperlink"), 
                  "\[NonBreakingSpace]", "if", " ", "set"}, ",", " ", {
                  "otherwise", " ", TemplateBox({"ButtonContents"}, 
                   "ReferenceHyperlink")}}, " ")}, {
               TemplateBox({"ButtonData"}, "ReferenceHyperlink"), {
                "the", " ", "setting", " ", "for", " ", "the", " ", 
                TemplateBox({"ButtonData"}, "ReferenceHyperlink"), 
                "\[NonBreakingSpace]", "option"}}, {
               TemplateBox({"ButtonContents"}, "ReferenceHyperlink"), {
                {"the", " ", "first", " ", "argument", " ", "of", " ", 
                 TemplateBox({"ButtonBox"}, "ReferenceHyperlink")}, ",", " ", {
                 "wrapped", " ", "in", " ", TemplateBox({"BoxData"}, 
                  "ReferenceHyperlink")}}}, {
               TemplateBox({"ButtonBox"}, "ReferenceHyperlink"), {
                "the", " ", "whole", " ", TemplateBox({"ButtonBox"}, 
                 "ReferenceHyperlink")}}, {
               TemplateBox({"FrontEndObject"}, "ReferenceHyperlink"), {
                {"the", " ", "front"}, "-", {"end", " ", "object", " ", 
                 "reference", " ", "of", " ", "the", " ", 
                 TemplateBox({"ButtonBox"}, "ReferenceHyperlink")}}}}))}), 
         "2ColumnTableNotes")}, All), Section("", "SectionFooterSpacer")}, 1), 
    SectionGroup({Section("Examples", "PrimaryExamplesSection"), 
      SectionGroup({Section("Basic Examples", "ExampleSection"), 
        Section(TextData({"Create a button that displays its ", 
           TemplateBox({"ButtonData"}, "ReferenceHyperlink"), ":"}), 
         "ExampleText"), SectionGroup({
          Section(BoxData({"RawBoxes", "(", {
              "ButtonBox", "(", {
               StringBox("\"\\\"Click for button data\\\"\""), ",", {
                "ButtonFunction", "\[Rule]", " ", {
                 "Function", "(", {"Print", "(", "#", ")"}, ")"}}, ",", {
                "ButtonSource", "\[Rule]", "ButtonData"}, ",", {
                "ButtonData", "\[Rule]", StringBox("\"data\"")}}, ")"}, ")"}), 
           "Input", SectionLabel -> "in [1]:"), 
          Section(BoxData(ButtonBox(StringBox("\"Click for button data\""), 
             ButtonData -> "data", ButtonFunction -> Function(Print(#1)), 
             ButtonSource -> ButtonData)), "Output", SectionGenerated -> True, 
           SectionLabel -> "out [1]:")}, All), 
        SectionGroup({
          Section(BoxData(InterpretationBox("", $Line:= 0;, 
             Editable -> False)), "ExampleDelimiter"), 
          Section("Create a button that displays its button contents:", 
           "ExampleText"), SectionGroup({
            Section(BoxData({"RawBoxes", "(", {
                "ButtonBox", "(", {
                 StringBox("\"\\\"Click for button data\\\"\""), ",", {
                  "ButtonFunction", "\[Rule]", " ", {
                   "Function", "(", {"Print", "(", {"RawBoxes", "@@", "#"}, 
                    ")"}, ")"}}, ",", {"ButtonSource", "\[Rule]", 
                  "ButtonContents"}, ",", {"ButtonData", "\[Rule]", 
                  StringBox("\"data\"")}}, ")"}, ")"}), "Input", 
             SectionLabel -> "in [1]:"), 
            Section(BoxData(ButtonBox(StringBox("\"Click for button data\""), 
               ButtonData -> "data", ButtonFunction -> 
                Function(Print(Apply(#1, RawBoxes))), 
               ButtonSource -> ButtonContents)), "Output", 
             SectionGenerated -> True, SectionLabel -> "out [1]:")}, All)}, 
         All)}, All), SectionGroup({
        Section("Properties & Relations", "ExampleSection"), 
        Section(TextData({"Relation to ", TemplateBox({"ButtonData"}, 
            "ReferenceHyperlink"), ":"}), "ExampleText"), 
        SectionGroup({
          Section(
           BoxData({"Grid", "@", {
              "Table", "(", {
               {"With", "(", {
                 {"{", {{"source", "\[Assign]", "source"}, ",", {
                    "data", "\[Assign]", "data"}}, "}"}, ",", {
                  "RawBoxes", "@", {"ButtonBox", "(", {
                    {"ToBoxes", "@", {"{", {"source", ",", "data"}, "}"}}, 
                    ",", {"ButtonFunction", "\[Rule]", {
                      "Function", "(", {"Print", "(", {
                        {"{", {"source", ",", "data"}, "}"}, "\[Rule]", {
                         "{", "##", "}"}}, ")"}, ")"}}, ",", {
                     "ButtonSource", "\[Rule]", "source"}, ",", {
                     "ButtonData", "\[Rule]", "data"}}, ")"}}}, ")"}, ",", {
                "source", "\[Rule]", {
                 "{", {"Automatic", ",", "ButtonData", ",", "ButtonContents", 
                  ",", "ButtonBox", ",", "FrontEndObject"}, "}"}}, ",", {
                "data", "\[Rule]", {
                 "{", {"Inherited", ",", "Automatic", ",", "123"}, "}"}}}, 
              ")"}}), "Input", SectionLabel -> "in [1]:"), 
          Section(
           BoxData(
            TagBox(
             GridBox({
               {ButtonBox({"{", {"Automatic", ",", "Inherited"}, "}"}, 
                 ButtonFunction -> 
                  Function(Print({Automatic, Inherited} -> {##1})), 
                 ButtonSource -> Automatic), 
                ButtonBox({"{", {"Automatic", ",", "Automatic"}, "}"}, 
                 ButtonData -> Automatic, ButtonFunction -> 
                  Function(Print({Automatic, Automatic} -> {##1})), 
                 ButtonSource -> Automatic), 
                ButtonBox({"{", {"Automatic", ",", "123"}, "}"}, 
                 ButtonData -> 123, ButtonFunction -> 
                  Function(Print({Automatic, 123} -> {##1})), 
                 ButtonSource -> Automatic)}, {
                ButtonBox({"{", {"ButtonData", ",", "Inherited"}, "}"}, 
                 ButtonFunction -> 
                  Function(Print({ButtonData, Inherited} -> {##1})), 
                 ButtonSource -> ButtonData), 
                ButtonBox({"{", {"ButtonData", ",", "Automatic"}, "}"}, 
                 ButtonData -> Automatic, ButtonFunction -> 
                  Function(Print({ButtonData, Automatic} -> {##1})), 
                 ButtonSource -> ButtonData), 
                ButtonBox({"{", {"ButtonData", ",", "123"}, "}"}, 
                 ButtonData -> 123, ButtonFunction -> 
                  Function(Print({ButtonData, 123} -> {##1})), 
                 ButtonSource -> ButtonData)}, {
                ButtonBox({"{", {"ButtonContents", ",", "Inherited"}, "}"}, 
                 ButtonFunction -> 
                  Function(Print({ButtonContents, Inherited} -> {##1})), 
                 ButtonSource -> ButtonContents), 
                ButtonBox({"{", {"ButtonContents", ",", "Automatic"}, "}"}, 
                 ButtonData -> Automatic, ButtonFunction -> 
                  Function(Print({ButtonContents, Automatic} -> {##1})), 
                 ButtonSource -> ButtonContents), 
                ButtonBox({"{", {"ButtonContents", ",", "123"}, "}"}, 
                 ButtonData -> 123, ButtonFunction -> 
                  Function(Print({ButtonContents, 123} -> {##1})), 
                 ButtonSource -> ButtonContents)}, {
                ButtonBox({"{", {"ButtonBox", ",", "Inherited"}, "}"}, 
                 ButtonFunction -> 
                  Function(Print({ButtonBox, Inherited} -> {##1})), 
                 ButtonSource -> ButtonBox), 
                ButtonBox({"{", {"ButtonBox", ",", "Automatic"}, "}"}, 
                 ButtonData -> Automatic, ButtonFunction -> 
                  Function(Print({ButtonBox, Automatic} -> {##1})), 
                 ButtonSource -> ButtonBox), 
                ButtonBox({"{", {"ButtonBox", ",", "123"}, "}"}, 
                 ButtonData -> 123, ButtonFunction -> 
                  Function(Print({ButtonBox, 123} -> {##1})), 
                 ButtonSource -> ButtonBox)}, {
                ButtonBox({"{", {"FrontEndObject", ",", "Inherited"}, "}"}, 
                 ButtonFunction -> 
                  Function(Print({FrontEndObject, Inherited} -> {##1})), 
                 ButtonSource -> FrontEndObject), 
                ButtonBox({"{", {"FrontEndObject", ",", "Automatic"}, "}"}, 
                 ButtonData -> Automatic, ButtonFunction -> 
                  Function(Print({FrontEndObject, Automatic} -> {##1})), 
                 ButtonSource -> FrontEndObject), 
                ButtonBox({"{", {"FrontEndObject", ",", "123"}, "}"}, 
                 ButtonData -> 123, ButtonFunction -> 
                  Function(Print({FrontEndObject, 123} -> {##1})), 
                 ButtonSource -> FrontEndObject)}}), "Grid")), "Output", 
           SectionGenerated -> True, SectionLabel -> "out [1]:")}, All)}, 1), 
      Section("", "SectionFooterSpacer")}, All), 
    SectionGroup({Section("See Also", "SeeAlsoSection"), 
      Section(TextData({TemplateBox({"ButtonBox"}, "ReferenceHyperlink"), 
         "\[NonBreakingSpace]\[Dot] ", TemplateBox({"ButtonFunction"}, 
          "ReferenceHyperlink"), "\[NonBreakingSpace]\[Dot] ", 
         TemplateBox({"ButtonData"}, "ReferenceHyperlink")}), "SeeAlso")}, 
     All)}, All)}, StyleDefinitions -> "Reference.pmathdoc", Visible -> True)
/* pMath Document */

Document({
  SectionGroup({
    SectionGroup({Section("Filler", "ObjectName"), 
      Section(BoxData(TemplateBox({"Filler"}, "UsageReference")), "Usage")}, 
     All), SectionGroup({Section("Details", "NotesSection"), 
      SectionGroup({Section("", "NotesSectionHeaderSpacer"), 
        Section(TextData({TemplateBox({"Filler"}, "ReferenceHyperlink"), 
           "() is essentially equivalent to ", {
            TemplateBox({"Filler"}, "ReferenceHyperlink"), "(", "/\\/", ")"}, 
           "."}), "Notes"), 
        Section(TextData({"To fill the available space, ", 
           TemplateBox({"Filler"}, "ReferenceHyperlink"), 
           " first tries to stretch its contents and then repeats it if \
           necessary."}), "Notes"), 
        Section(TextData({TemplateBox({"Filler"}, "ReferenceHyperlink"), 
           " can stretch ", StyleBox("expr", "Arg"), " if it is e.g. a ", 
           TemplateBox({"Button"}, "ReferenceHyperlink"), ", ", 
           TemplateBox({"InputField"}, "ReferenceHyperlink"), ", ", 
           TemplateBox({"Slider"}, "ReferenceHyperlink"), ", or ", 
           TemplateBox({"Graphics"}, "ReferenceHyperlink"), "."}), "Notes"), 
        Section(
         TextData({"Only ", TemplateBox({"Graphics"}, "ReferenceHyperlink"), 
           " with ", TemplateBox({"ImageSize"}, "ReferenceHyperlink"), 
           " \[Rule] ", TemplateBox({"Automatic"}, "ReferenceHyperlink"), 
           " will be stretched, expanding height and width such as to keep \
           their ", TemplateBox({"AspectRatio"}, "ReferenceHyperlink"), 
           " constant."}), "Notes"), 
        Section(TextData({"If ", StyleBox("expr", "Arg"), " is a ", 
           TemplateBox({"Row"}, "ReferenceHyperlink"), ", ", 
           TemplateBox({"Style"}, "ReferenceHyperlink"), ", or ", 
           TemplateBox({"Interpretation"}, "ReferenceHyperlink"), 
           " that itself contains ", TemplateBox({"Filler"}, 
            "ReferenceHyperlink"), " objects, ", StyleBox("expr", "Arg"), 
           " may also be stretched."}), "Notes")}, All), 
      Section("", "SectionFooterSpacer")}, 1), 
    SectionGroup({Section("Examples", "PrimaryExamplesSection"), 
      SectionGroup({Section("Basic Examples", "ExampleSection"), 
        Section(TextData({"Make an ", TemplateBox({"InputField"}, 
            "ReferenceHyperlink"), " that stretches the whole line:"}), 
         "ExampleText"), SectionGroup({
          Section(BoxData({"Filler", "(", {
              "InputField", "(", {StringBox("\"Text\""), ",", "String"}, ")"}, 
             ")"}), "Input", SectionLabel -> "in [1]:"), 
          Section(BoxData(FillBox(InputFieldBox("Text", String), 
             StripOnInput -> False)), "Output", SectionGenerated -> True, 
           SectionLabel -> "out [1]:")}, All), 
        SectionGroup({
          Section(BoxData(InterpretationBox("", $Line:= 0;, 
             Editable -> False)), "ExampleDelimiter"), 
          Section("Fill a line with dots:", "ExampleText"), 
          SectionGroup({
            Section(
             BoxData({"Row", "(", {
                "{", {StringBox("\"Introduction\""), ",", {
                  "Filler", "(", StringBox("\" . \""), ")"}, ",", 
                 StringBox("\"1\"")}, "}"}, ")"}), "Input", 
             SectionLabel -> "in [1]:"), 
            Section(BoxData(TemplateBox({StringBox("\"Introduction\""), 
                FillBox(StringBox("\" . \""), StripOnInput -> False), 
                StringBox("\"1\"")}, "RowDefault")), "Output", 
             SectionGenerated -> True, SectionLabel -> "out [1]:")}, All)}, 
         All), SectionGroup({
          Section(BoxData(InterpretationBox("", $Line:= 0;, 
             Editable -> False)), "ExampleDelimiter"), 
          Section("Stretch a line between words:", "ExampleText"), 
          SectionGroup({
            Section(
             BoxData({"Row", "(", {
                {"{", {StringBox("\"A\""), ",", StringBox("\"few\""), ",", 
                  StringBox("\"more\""), ",", StringBox("\"words.\"")}, "}"}, 
                ",", {"Filler", "(", ")"}}, ")"}), "Input", 
             SectionLabel -> "in [1]:"), 
            Section(
             BoxData(TemplateBox({FillBox(""), Filler(), StringBox("\"A\""), 
                StringBox("\"few\""), StringBox("\"more\""), 
                StringBox("\"words.\"")}, "RowWithSeparators")), "Output", 
             SectionGenerated -> True, SectionLabel -> "out [1]:")}, All)}, 
         All), SectionGroup({
          Section(BoxData(InterpretationBox("", $Line:= 0;, 
             Editable -> False)), "ExampleDelimiter"), 
          Section("Use expandable characters like arrows:", "ExampleText"), 
          SectionGroup({
            Section(
             BoxData({"Row", "(", {
                {"{", {StringBox("\"Some\""), ",", StringBox("\"long\""), ",", 
                  StringBox("\"arrows.\"")}, "}"}, ",", {
                 "Filler", "(", StringBox("\"\[DoubleRightArrow]\""), ")"}}, 
               ")"}), "Input", SectionLabel -> "in [1]:"), 
            Section(
             BoxData(TemplateBox({
                FillBox(StringBox("\"\[DoubleRightArrow]\""), 
                 StripOnInput -> False), Filler("\[DoubleRightArrow]"), 
                StringBox("\"Some\""), StringBox("\"long\""), 
                StringBox("\"arrows.\"")}, "RowWithSeparators")), "Output", 
             SectionGenerated -> True, SectionLabel -> "out [1]:")}, All)}, 
         All), SectionGroup({
          Section(BoxData(InterpretationBox("", $Line:= 0;, 
             Editable -> False)), "ExampleDelimiter"), 
          Section("Multiple, differently stretched buttons:", "ExampleText"), 
          SectionGroup({
            Section(
             BoxData({"Row", "(", {
                "{", {
                 {"Filler", "(", {
                   {"Button", "(", {StringBox("\"shorter\""), ",", "None"}, 
                    ")"}, ",", "1"}, ")"}, ",", {
                  "Filler", "(", {
                   {"Button", "(", {StringBox("\"long\""), ",", "None"}, ")"}, 
                   ",", "2"}, ")"}}, "}"}, ")"}), "Input", 
             SectionLabel -> "in [1]:"), 
            Section(
             BoxData(TemplateBox({
                FillBox(ButtonBox(StringBox("\"shorter\"")), 
                 FillBoxWeight -> 1, StripOnInput -> False), 
                FillBox(ButtonBox(StringBox("\"long\"")), FillBoxWeight -> 2, 
                 StripOnInput -> False)}, "RowDefault")), "Output", 
             SectionGenerated -> True, SectionLabel -> "out [1]:")}, All)}, 
         All)}, All), SectionGroup({
        Section("Properties & Relations", "ExampleSection"), 
        Section(TextData({TemplateBox({"Grid"}, "ReferenceHyperlink"), 
           " also stretches certain items if possible:"}), "ExampleText"), 
        SectionGroup({
          Section(
           BoxData({"Grid", "(", {
              "{", {
               {"{", {{"Button", "(", {StringBox("\"a\""), ",", "None"}, ")"}, 
                 ",", {"Button", "(", {StringBox("\"c\""), ",", "None"}, 
                  ")"}}, "}"}, ",", {
                "{", {StringBox("\"A rather long item\""), ",", 
                 "SpanFromAbove"}, "}"}, ",", {
                "{", {{"Filler", "(", StringBox("\"\[LeftArrow]\""), ")"}, 
                 ",", "SpanFromAbove"}, "}"}}, "}"}, ")"}), "Input", 
           SectionLabel -> "in [1]:"), 
          Section(
           BoxData(
            TagBox(
             GridBox({{ButtonBox(StringBox("\"a\"")), 
                ButtonBox(StringBox("\"c\""))}, {
                StringBox("\"A rather long item\""), "\[SpanFromAbove]"}, {
                FillBox(StringBox("\"\[LeftArrow]\""), StripOnInput -> False), 
                "\[SpanFromAbove]"}}), "Grid")), "Output", 
           SectionGenerated -> True, SectionLabel -> "out [1]:")}, All), 
        SectionGroup({Section(BoxData(""), "ExampleDelimiter"), 
          Section(TextData({TemplateBox({"Filler"}, "ReferenceHyperlink"), 
             " is recognlized inside in-line boxes like ", 
             TemplateBox({"Style"}, "ReferenceHyperlink"), 
             " or related low-level constructs (", 
             TemplateBox({"StyleBox"}, "ReferenceHyperlink"), ", ", 
             TemplateBox({"TagBox"}, "ReferenceHyperlink"), ", etc.):"}), 
           "ExampleText"), SectionGroup({
            Section(
             BoxData({
               {"Row", "(", {"{", {StringBox("\"Introduction\""), ",", {
                   "Filler", "(", StringBox("\" . \""), ")"}, ",", 
                  StringBox("\"1\"")}, "}"}, ")"}, ".", "Style", "(", "Red", 
               ")"}), "Input", SectionLabel -> "in [1]:"), 
            Section(
             BoxData(StyleBox(TemplateBox({StringBox("\"Introduction\""), 
                 FillBox(StringBox("\" . \""), StripOnInput -> False), 
                 StringBox("\"1\"")}, "RowDefault"), 
               FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
             "Output", SectionGenerated -> True, SectionLabel -> "out [1]:")}, 
           All)}, All)}, 1), SectionGroup({
        Section("Possible Issues", "ExampleSection"), 
        Section(TextData({TemplateBox({"Filler"}, "ReferenceHyperlink"), 
           " and its low-level companion ", 
           TemplateBox({"FillBox"}, "ReferenceHyperlink"), 
           " are not recognized in text sections:"}), "ExampleText"), 
        Section(BoxData({"SectionPrint", "(", {
            "Section", "(", {
             {"{", {StringBox("\"a\""), ",", {
                "FillBox", "(", StringBox("\".\""), ")"}, ",", 
               StringBox("\"b\"")}, "}"}, ",", StringBox("\"Text\"")}, ")"}, 
           ")"}), "Input", SectionLabel -> "in [1]:"), 
        Section(TextData({"a", FillBox("."), "b"}), "Text", 
         SectionGenerated -> True), 
        Section(TextData({"Only the math layout algorithm handles ", 
           TemplateBox({"Filler"}, "ReferenceHyperlink"), " resp. ", 
           TemplateBox({"FillBox"}, "ReferenceHyperlink"), ":"}), 
         "ExampleText"), 
        Section(BoxData({"SectionPrint", "(", {
            "Section", "(", {
             {"BoxData", "(", {
               "{", {StringBox("\"a\""), ",", {
                 "FillBox", "(", StringBox("\".\""), ")"}, ",", 
                StringBox("\"b\"")}, "}"}, ")"}, ",", StringBox("\"Text\"")}, 
            ")"}, ")"}), "Input", SectionLabel -> "in [2]:"), 
        Section(BoxData({"a", FillBox("."), "b"}), "Text", 
         SectionGenerated -> True), 
        SectionGroup({Section(BoxData(""), "ExampleDelimiter"), 
          Section(TextData({TemplateBox({"Filler"}, "ReferenceHyperlink"), 
             " may not expand to the whole line when it is wrapped in a ", 
             TemplateBox({"Button"}, "ReferenceHyperlink"), 
             " or related low-level constructs like ", 
             TemplateBox({"ButtonBox"}, "ReferenceHyperlink"), ":"}), 
           "ExampleText"), SectionGroup({
            Section(BoxData({"Button", "(", {
                {"Row", "(", {"{", {StringBox("\"Introduction\""), ",", {
                    "Filler", "(", StringBox("\" . \""), ")"}, ",", 
                   StringBox("\"1\"")}, "}"}, ")"}, ",", {
                 "BaseStyle", "\[Rule]", StringBox("\"Hyperlink\"")}}, ")"}), 
             "Input", SectionLabel -> "in [2]:"), 
            Section(
             BoxData(ButtonBox(TemplateBox({StringBox("\"Introduction\""), 
                 FillBox(StringBox("\" . \""), StripOnInput -> False), 
                 StringBox("\"1\"")}, "RowDefault"), 
               BaseStyle -> "Hyperlink")), "Output", SectionGenerated -> True, 
             SectionLabel -> "out [2]:")}, All), 
          Section(TextData({"Wrap the outer box in ", 
             TemplateBox({"Filler"}, "ReferenceHyperlink"), " too:"}), 
           "ExampleText"), SectionGroup({
            Section(BoxData({"Filler", "(", {
                "Button", "(", {
                 {"Row", "(", {"{", {StringBox("\"Introduction\""), ",", {
                     "Filler", "(", StringBox("\" . \""), ")"}, ",", 
                    StringBox("\"1\"")}, "}"}, ")"}, ",", {
                  "BaseStyle", "\[Rule]", StringBox("\"Hyperlink\"")}}, ")"}, 
               ")"}), "Input", SectionLabel -> "in [3]:"), 
            Section(
             BoxData(
              FillBox(ButtonBox(TemplateBox({StringBox("\"Introduction\""), 
                  FillBox(StringBox("\" . \""), StripOnInput -> False), 
                  StringBox("\"1\"")}, "RowDefault"), 
                BaseStyle -> "Hyperlink"), StripOnInput -> False)), "Output", 
             SectionGenerated -> True, SectionLabel -> "out [3]:")}, All)}, 
         All), SectionGroup({Section(BoxData(""), "ExampleDelimiter"), 
          Section(TextData({"Certain constructs are not prepared to handle ", 
             TemplateBox({"Filler"}, "ReferenceHyperlink"), " at all:"}), 
           "ExampleText"), SectionGroup({
            Section(BoxData({"Highlighted", "(", {
                "Row", "(", {"{", {StringBox("\"Introduction\""), ",", {
                   "Filler", "(", StringBox("\" . \""), ")"}, ",", 
                  StringBox("\"1\"")}, "}"}, ")"}, ")"}), "Input", 
             SectionLabel -> "in [1]:"), 
            Section(
             BoxData(TemplateBox({
                TemplateBox({StringBox("\"Introduction\""), 
                  FillBox(StringBox("\" . \""), StripOnInput -> False), 
                  StringBox("\"1\"")}, "RowDefault")}, "Highlighted")), 
             "Output", SectionGenerated -> True, SectionLabel -> "out [1]:")}, 
           All), SectionGroup({
            Section(BoxData({"Filler", "(", {
                "Highlighted", "(", {
                 "Row", "(", {"{", {StringBox("\"Introduction\""), ",", {
                    "Filler", "(", StringBox("\" . \""), ")"}, ",", 
                   StringBox("\"1\"")}, "}"}, ")"}, ")"}, ")"}), "Input", 
             SectionLabel -> "in [2]:"), 
            Section(
             BoxData(
              FillBox(TemplateBox({
                 TemplateBox({StringBox("\"Introduction\""), 
                   FillBox(StringBox("\" . \""), StripOnInput -> False), 
                   StringBox("\"1\"")}, "RowDefault")}, "Highlighted"), 
               StripOnInput -> False)), "Output", SectionGenerated -> True, 
             SectionLabel -> "out [2]:")}, All)}, All)}, 1), 
      Section("", "SectionFooterSpacer")}, All), 
    SectionGroup({Section("See Also", "SeeAlsoSection"), 
      Section(TextData({TemplateBox({"Grid"}, "ReferenceHyperlink"), 
         "\[NonBreakingSpace]\[Dot] ", TemplateBox({"Pane"}, 
          "ReferenceHyperlink"), "\[NonBreakingSpace]\[Dot] ", 
         TemplateBox({"Button"}, "ReferenceHyperlink"), 
         "\[NonBreakingSpace]\[Dot] ", TemplateBox({"InputField"}, 
          "ReferenceHyperlink"), "\[NonBreakingSpace]\[Dot] ", 
         TemplateBox({"Slider"}, "ReferenceHyperlink")}), "SeeAlso")}, All)}, 
   All)}, StyleDefinitions -> "Reference.pmathdoc", Visible -> True)
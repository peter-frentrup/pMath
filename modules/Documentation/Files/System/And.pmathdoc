/* pMath Document */

Document({
  SectionGroup({
    SectionGroup({Section("And (&&, \[And])", "ObjectName"), 
      Section(BoxData(TemplateBox({"And"}, "UsageReference")), "Usage")}, 
     All), SectionGroup({Section("Details", "NotesSection"), 
      SectionGroup({Section("", "NotesSectionHeaderSpacer"), 
        Section(TextData({TemplateBox({"And"}, "ReferenceHyperlink"), 
           " has attributes ", TemplateBox({"Associative"}, 
            "ReferenceHyperlink"), ", ", TemplateBox({"HoldAll"}, 
            "ReferenceHyperlink"), " and ", TemplateBox({"OneIdentity"}, 
            "ReferenceHyperlink"), "."}), "Notes"), 
        Section(TextData({TemplateBox({"And"}, "ReferenceHyperlink"), 
           " has attribute ", TemplateBox({"HoldAll"}, "ReferenceHyperlink"), 
           " and explicitly controls evaluation of its arguments. In ", 
           StyleBox("e", "Arg"), SubscriptBox("1"), " && ", 
           StyleBox("e", "Arg"), SubscriptBox("2"), " && \[Ellipsis], the ", 
           StyleBox("e", "Arg"), SubscriptBox(StyleBox("i", "Arg")), 
           " are evaluated in order, stopping if any of them is explicitly ", 
           TemplateBox({"False"}, "ReferenceHyperlink"), "."}), "Notes")}, 
       All), Section("", "SectionFooterSpacer")}, 1), 
    SectionGroup({Section("Examples", "PrimaryExamplesSection"), 
      SectionGroup({Section("Basic Examples", "ExampleSection"), 
        Section("Combine conditions with &&:", "ExampleText"), 
        SectionGroup({
          Section(BoxData({{"7", ">", "5"}, "&&", {"Pi", ">", "3"}}), "Input", 
           SectionLabel -> "in [1]:"), Section(BoxData("True"), "Output", 
           SectionGenerated -> True, SectionLabel -> "out [1]:")}, All), 
        SectionGroup({
          Section(BoxData(InterpretationBox("", $Line:= 0;, 
             Editable -> False)), "ExampleDelimiter"), 
          Section("A symbolic conjuction:", "ExampleText"), 
          SectionGroup({Section(BoxData({"a", "&&", "b", "&&", {"!", "c"}}), 
             "Input", SectionLabel -> "in [1]:"), 
            Section(BoxData({"a", "\[And]", "b", "\[And]", {"\[Not]", "c"}}), 
             "Output", SectionGenerated -> True, SectionLabel -> "out [1]:")}, 
           All)}, All), SectionGroup({
          Section(BoxData(InterpretationBox("", $Line:= 0;, 
             Editable -> False)), "ExampleDelimiter"), 
          Section(TextData({"Enter \[And] using ", 
             BoxData(TemplateBox({}, "AliasDelimiterKeyEvent")), "and", 
             BoxData(TemplateBox({}, "AliasDelimiterKeyEvent")), ":"}), 
           "ExampleText"), SectionGroup({
            Section(BoxData({"p", "\[And]", "q"}), "Input", 
             SectionLabel -> "in [1]:"), 
            Section(BoxData({"p", "\[And]", "q"}), "Output", 
             SectionGenerated -> True, SectionLabel -> "out [1]:")}, All)}, 
         All)}, All), SectionGroup({Section("Scope", "ExampleSection"), 
        Section(TextData({TemplateBox({"And"}, "ReferenceHyperlink"), 
           " accepts any number of arguments:"}), "ExampleText"), 
        SectionGroup({
          Section(BoxData({"And", "(", {"x", ",", "y", ",", "z"}, ")"}), 
           "Input", SectionLabel -> "in [1]:"), 
          Section(BoxData({"x", "\[And]", "y", "\[And]", "z"}), "Output", 
           SectionGenerated -> True, SectionLabel -> "out [1]:")}, All), 
        Section(TextData({TemplateBox({"And"}, "ReferenceHyperlink"), 
           " is associative:"}), "ExampleText"), 
        SectionGroup({
          Section(
           BoxData({
             {"And", "(", {"x", ",", {"And", "(", {"y", ",", "z"}, ")"}}, 
              ")"}, "|>", "FullForm"}), "Input", SectionLabel -> "in [2]:"), 
          Section(BoxData(StyleBox({"And", "(", {"x", ",", "y", ",", "z"}, 
              ")"}, AutoDelete -> True, ShowStringCharacters -> True)), 
           "Output", SectionGenerated -> True, SectionLabel -> "out [2]:")}, 
         All), 
        Section(TextData({"Without arguments, ", 
           TemplateBox({"And"}, "ReferenceHyperlink"), 
           " gives its neutral element ", 
           TemplateBox({"True"}, "ReferenceHyperlink"), ":"}), "ExampleText"), 
        SectionGroup({Section(BoxData({"And", "(", ")"}), "Input", 
           SectionLabel -> "in [3]:"), Section(BoxData("True"), "Output", 
           SectionGenerated -> True, SectionLabel -> "out [3]:")}, All), 
        SectionGroup({
          Section(BoxData(InterpretationBox("", $Line:= 0;, 
             Editable -> False)), "ExampleDelimiter"), 
          Section(TextData({TemplateBox({"And"}, "ReferenceHyperlink"), 
             " with explicit ", TemplateBox({"True"}, "ReferenceHyperlink"), 
             " or ", TemplateBox({"False"}, "ReferenceHyperlink"), 
             " arguments will simplify:"}), "ExampleText"), 
          SectionGroup({
            Section(BoxData({"And", "(", {"x", ",", "True", ",", "z"}, ")"}), 
             "Input", SectionLabel -> "in [1]:"), 
            Section(BoxData({"x", "\[And]", "z"}), "Output", 
             SectionGenerated -> True, SectionLabel -> "out [1]:")}, All), 
          SectionGroup({
            Section(BoxData({"And", "(", {"x", ",", "False", ",", "z"}, ")"}), 
             "Input", SectionLabel -> "in [2]:"), 
            Section(BoxData("False"), "Output", SectionGenerated -> True, 
             SectionLabel -> "out [2]:")}, All)}, All), 
        SectionGroup({
          Section(BoxData(InterpretationBox("", $Line:= 0;, 
             Editable -> False)), "ExampleDelimiter"), 
          Section(TextData({TemplateBox({"And"}, "ReferenceHyperlink"), 
             " evaluates its argument in order, stopping when an argument \
             evaluates to ", TemplateBox({"False"}, "ReferenceHyperlink"), 
             ":"}), "ExampleText"), 
          SectionGroup({
            Section(
             BoxData({"And", "(", {
                {"Echo", "(", {"False", ",", StringBox("\"1.\"")}, ")"}, ",", {
                 "Echo", "(", {"True", ",", StringBox("\"2.\"")}, ")"}}, 
               ")"}), "Input", SectionLabel -> "in [1]:"), 
            Section(BoxData(TemplateBox({" ", " ", StringBox("\"1.\""), 
                "False"}, "RowWithSeparators")), "Echo", 
             SectionGenerated -> True), Section(BoxData("False"), "Output", 
             SectionGenerated -> True, SectionLabel -> "out [1]:")}, All), 
          SectionGroup({
            Section(
             BoxData({"And", "(", {
                {"Echo", "(", {"True", ",", StringBox("\"1.\"")}, ")"}, ",", {
                 "Echo", "(", {"True", ",", StringBox("\"2.\"")}, ")"}}, 
               ")"}), "Input", SectionLabel -> "in [2]:"), 
            Section(BoxData(TemplateBox({" ", " ", StringBox("\"1.\""), 
                "True"}, "RowWithSeparators")), "Echo", 
             SectionGenerated -> True), 
            Section(BoxData(TemplateBox({" ", " ", StringBox("\"2.\""), 
                "True"}, "RowWithSeparators")), "Echo", 
             SectionGenerated -> True), Section(BoxData("True"), "Output", 
             SectionGenerated -> True, SectionLabel -> "out [2]:")}, All)}, 
         All), SectionGroup({
          Section(BoxData(InterpretationBox("", $Line:= 0;, 
             Editable -> False)), "ExampleDelimiter"), 
          Section("The order of arguments may be important:", "ExampleText"), 
          SectionGroup({
            Section(BoxData({"Replace", "(", {
                {{"x", "\[NotEqual]", "0"}, "&&", {
                  "y", "=", {"1", "/", "x"}}}, ",", {"x", "\[Rule]", "0"}}, 
               ")"}), "Input", SectionLabel -> "in [1]:"), 
            Section(BoxData("False"), "Output", SectionGenerated -> True, 
             SectionLabel -> "out [1]:")}, All), 
          SectionGroup({
            Section(BoxData({"Replace", "(", {
                {{"y", "=", {"1", "/", "x"}}, "&&", {
                  "x", "\[NotEqual]", "0"}}, ",", {"x", "\[Rule]", "0"}}, 
               ")"}), "Input", SectionLabel -> "in [2]:"), 
            Section(
             BoxData({
               TemplateBox({
                 TemplateBox({MessageName -> HoldForm(Power::"infy"), 
                   Message -> StringForm(
                     "Infinite expression `1` encountered.", HoldForm(1/0)), 
                   Stack -> {{"Head" -> And}, {"Head" -> Equal}, {
                      "Head" -> Power}, {"Head" -> Message}, {
                      "Head" -> SectionPrint}}}, "MessageMenuButton"), {
                  "Power", "::", StringBox("\"infy\"")}}, "RowDefault"), ":", 
               " ", InterpretationBox(StringBox("\"Infinite expression ", 
                 FractionBox("1", "0"), " encountered.\""), 
                StringForm("Infinite expression `1` encountered.", 
                 HoldForm(1/0)), Editable -> False)}), "Message", 
             SectionGenerated -> True), Section(BoxData("False"), "Output", 
             SectionGenerated -> True, SectionLabel -> "out [2]:")}, All)}, 
         All)}, 1), SectionGroup({
        Section("Properties & Relations", "ExampleSection"), 
        Section("&& has higher precedence than ||:", "ExampleText"), 
        SectionGroup({
          Section(BoxData({{{"p", "&&", "q"}, "||", "r"}, "//", "FullForm"}), 
           "Input", SectionLabel -> "in [1]:"), 
          Section(
           BoxData(StyleBox({"Or", "(", {{"And", "(", {"p", ",", "q"}, ")"}, 
               ",", "r"}, ")"}, AutoDelete -> True, 
             ShowStringCharacters -> True)), "Output", 
           SectionGenerated -> True, SectionLabel -> "out [1]:")}, All), 
        SectionGroup({
          Section(BoxData(InterpretationBox("", $Line:= 0;, 
             Editable -> False)), "ExampleDelimiter"), 
          Section(TextData({TemplateBox({"ConditionalExpression"}, 
              "ReferenceHyperlink"), " propagates over ", 
             TemplateBox({"And"}, "ReferenceHyperlink"), ":"}), 
           "ExampleText"), SectionGroup({
            Section(BoxData({{"ConditionalExpression", "(", {"p", ",", "c"}, 
                ")"}, "&&", {"ConditionalExpression", "(", {"q", ",", "d"}, 
                ")"}}), "Input", SectionLabel -> "in [1]:"), 
            Section(
             BoxData(TemplateBox({{"p", "\[And]", "q"}, {"c", "\[And]", "d"}}, 
               "ConditionalExpression")), "Output", SectionGenerated -> True, 
             SectionLabel -> "out [1]:")}, All)}, All)}, 1), 
      SectionGroup({Section("Possible Issues", "ExampleSection"), 
        Section(TextData({TemplateBox({"And"}, "ReferenceHyperlink"), 
           " may give inconsistent simplifications when some arguments are ", 
           TemplateBox({"False"}, "ReferenceHyperlink"), " and others are ", 
           TemplateBox({"Undefined"}, "ReferenceHyperlink"), ":"}), 
         "ExampleText"), SectionGroup({
          Section(BoxData({"False", "&&", "p"}), "Input", 
           SectionLabel -> "in [1]:"), Section(BoxData("False"), "Output", 
           SectionGenerated -> True, SectionLabel -> "out [1]:")}, All), 
        SectionGroup({Section(BoxData({"False", "&&", "Undefined"}), "Input", 
           SectionLabel -> "in [2]:"), Section(BoxData("Undefined"), "Output", 
           SectionGenerated -> True, SectionLabel -> "out [2]:")}, All), 
        SectionGroup({
          Section(BoxData(/\/({{"p", "\[Assign]", "Undefined"}, ";"}, "\n", {
              "False", "&&", "p"})), "Input", SectionLabel -> "in [3]:"), 
          Section(BoxData("False"), "Output", SectionGenerated -> True, 
           SectionLabel -> "out [4]:")}, All)}, 1), 
      Section("", "SectionFooterSpacer")}, All), 
    SectionGroup({Section("See Also", "SeeAlsoSection"), 
      Section(TextData({TemplateBox({"Or"}, "ReferenceHyperlink"), 
         "\[NonBreakingSpace]\[Dot] ", TemplateBox({"Not"}, 
          "ReferenceHyperlink"), "\[NonBreakingSpace]\[Dot] ", 
         TemplateBox({"BitAnd"}, "ReferenceHyperlink"), 
         "\[NonBreakingSpace]\[Dot] ", TemplateBox({"True"}, 
          "ReferenceHyperlink"), "\[NonBreakingSpace]\[Dot] ", 
         TemplateBox({"False"}, "ReferenceHyperlink")}), "SeeAlso")}, All)}, 
   All)}, StyleDefinitions -> "Reference.pmathdoc", Visible -> True)
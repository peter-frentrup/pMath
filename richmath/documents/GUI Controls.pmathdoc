/* pMath Document */

Document({
  SectionGroup({Section("GUI Controls", "Title"), 
    SectionGroup({Section(BoxData({"Slider", "(", ")"}), "Input", 
       SectionLabel -> "in [1]:"), Section(BoxData(SliderBox(0.5, 0 .. 1)), 
       "Output", SectionGenerated -> True, SectionLabel -> "out [1]:")}, All), 
    SectionGroup({
      Section(BoxData({"Slider", "(", {"Enabled", "\[Rule]", "False"}, ")"}), 
       "Input", SectionLabel -> "in [2]:"), 
      Section(BoxData(SliderBox(0.5, 0 .. 1, Enabled -> False)), "Output", 
       SectionGenerated -> True, SectionLabel -> "out [2]:")}, All), 
    SectionGroup({Section(BoxData({"ProgressIndicator", "(", "0.5", ")"}), 
       "Input", SectionLabel -> "in [3]:"), 
      Section(BoxData(ProgressIndicatorBox(0.5, 0 .. 1)), "Output", 
       SectionGenerated -> True, SectionLabel -> "out [3]:")}, All), 
    SectionGroup({
      Section(
       BoxData({"Table", "(", {
          {"Button", "(", {"bf", ",", {"ButtonFrame", "\[Rule]", "bf"}}, ")"}, 
          ",", {"bf", "\[Rule]", {
            "{", {"None", ",", "Automatic", ",", StringBox("\"Frameless\""), 
             ",", StringBox("\"DialogBox\""), ",", StringBox("\"Defaulted\""), 
             ",", StringBox("\"Palette\""), ",", StringBox("\"Generic\""), 
             ",", StringBox("\"ListViewItem\""), ",", 
             StringBox("\"ListViewItemSelected\""), ",", 
             StringBox("\"NavigationBack\""), ",", 
             StringBox("\"NavigationForward\"")}, "}"}}}, ")"}), "Input", 
       SectionLabel -> "in [4]:"), 
      Section(BoxData({"{", {ButtonBox("None", ButtonFrame -> None), ",", 
          ButtonBox("Automatic"), ",", ButtonBox(StringBox("\"Frameless\""), 
           ButtonFrame -> "Frameless"), ",", 
          ButtonBox(StringBox("\"DialogBox\""), ButtonFrame -> "DialogBox"), 
          ",", ButtonBox(StringBox("\"Defaulted\""), 
           ButtonFrame -> "Defaulted"), ",", 
          ButtonBox(StringBox("\"Palette\""), ButtonFrame -> "Palette"), ",", 
          ButtonBox(StringBox("\"Generic\""), ButtonFrame -> "Generic"), ",", 
          ButtonBox(StringBox("\"ListViewItem\""), 
           ButtonFrame -> "ListViewItem"), ",", 
          ButtonBox(StringBox("\"ListViewItemSelected\""), 
           ButtonFrame -> "ListViewItemSelected"), ",", 
          ButtonBox(StringBox("\"NavigationBack\""), 
           ButtonFrame -> "NavigationBack"), ",", 
          ButtonBox(StringBox("\"NavigationForward\""), 
           ButtonFrame -> "NavigationForward")}, "}"}), "Output", 
       SectionGenerated -> True, SectionLabel -> "out [4]:")}, All), 
    SectionGroup({
      Section(
       BoxData({"Table", "(", {
          {"Button", "(", {"bf", ",", {"ButtonFrame", "\[Rule]", "bf"}, ",", {
             "Enabled", "\[Rule]", "False"}}, ")"}, ",", {
           "bf", "\[Rule]", {"{", {"None", ",", "Automatic", ",", 
             StringBox("\"Frameless\""), ",", StringBox("\"DialogBox\""), ",", 
             StringBox("\"Defaulted\""), ",", StringBox("\"Palette\""), ",", 
             StringBox("\"Generic\""), ",", StringBox("\"ListViewItem\""), 
             ",", StringBox("\"ListViewItemSelected\""), ",", 
             StringBox("\"NavigationBack\""), ",", 
             StringBox("\"NavigationForward\"")}, "}"}}}, ")"}), "Input", 
       SectionLabel -> "in [5]:"), 
      Section(
       BoxData({
         "{", {ButtonBox("None", ButtonFrame -> None, Enabled -> False), ",", 
          ButtonBox("Automatic", Enabled -> False), ",", 
          ButtonBox(StringBox("\"Frameless\""), ButtonFrame -> "Frameless", 
           Enabled -> False), ",", ButtonBox(StringBox("\"DialogBox\""), 
           ButtonFrame -> "DialogBox", Enabled -> False), ",", 
          ButtonBox(StringBox("\"Defaulted\""), ButtonFrame -> "Defaulted", 
           Enabled -> False), ",", ButtonBox(StringBox("\"Palette\""), 
           ButtonFrame -> "Palette", Enabled -> False), ",", 
          ButtonBox(StringBox("\"Generic\""), ButtonFrame -> "Generic", 
           Enabled -> False), ",", ButtonBox(StringBox("\"ListViewItem\""), 
           ButtonFrame -> "ListViewItem", Enabled -> False), ",", 
          ButtonBox(StringBox("\"ListViewItemSelected\""), 
           ButtonFrame -> "ListViewItemSelected", Enabled -> False), ",", 
          ButtonBox(StringBox("\"NavigationBack\""), 
           ButtonFrame -> "NavigationBack", Enabled -> False), ",", 
          ButtonBox(StringBox("\"NavigationForward\""), 
           ButtonFrame -> "NavigationForward", Enabled -> False)}, "}"}), 
       "Output", SectionGenerated -> True, SectionLabel -> "out [5]:")}, All), 
    SectionGroup({
      Section(BoxData({"DynamicLocal", "(", {
          {"{", {"x", "\[Assign]", "1"}, "}"}, ",", {
           "{", {{"SetterBar", "(", {{"Dynamic", "(", "x", ")"}, ",", {
               "{", {"1", ",", "2", ",", "3"}, "}"}}, ")"}, ",", {
             "Dynamic", "(", "x", ")"}}, "}"}}, ")"}), "Input", 
       SectionLabel -> "in [6]:"), 
      Section(BoxData(DynamicLocalBox({$Context`x}, {
          "{", {InterpretationBox({SetterBox(Dynamic($Context`x), 1, "1"), 
             "\[InvisibleSpace]", SetterBox(Dynamic($Context`x), 2, "2"), 
             "\[InvisibleSpace]", SetterBox(Dynamic($Context`x), 3, "3")}, 
            SetterBar(Dynamic($Context`x), {1, 2, 3}), Editable -> False), 
           ",", DynamicBox(ToBoxes($Context`x))}, "}"}, 
         Deinitialization -> None, DynamicLocalValues :> {
           {OwnRules($Context`x):= {HoldPattern($Context`x) :> 1}}}, 
         Initialization -> None, UnsavedVariables -> {})), "Output", 
       SectionGenerated -> True, SectionLabel -> "out [6]:")}, All), 
    SectionGroup({
      Section(BoxData({"DynamicLocal", "(", {
          {"{", {"x", "\[Assign]", "1"}, "}"}, ",", {
           "{", {{"SetterBar", "(", {{"Dynamic", "(", "x", ")"}, ",", {
               "{", {"1", ",", "2", ",", "3"}, "}"}, ",", {
               "Enabled", "\[Rule]", "False"}}, ")"}, ",", {
             "Dynamic", "(", "x", ")"}}, "}"}}, ")"}), "Input", 
       SectionLabel -> "in [7]:"), 
      Section(BoxData(DynamicLocalBox({$Context`x}, {
          "{", {
           InterpretationBox({
             SetterBox(Dynamic($Context`x), 1, "1", Enabled -> False), 
             "\[InvisibleSpace]", SetterBox(Dynamic($Context`x), 2, "2", 
              Enabled -> False), "\[InvisibleSpace]", 
             SetterBox(Dynamic($Context`x), 3, "3", Enabled -> False)}, 
            SetterBar(Dynamic($Context`x), {1, 2, 3}, Enabled -> False), 
            Editable -> False), ",", DynamicBox(ToBoxes($Context`x))}, "}"}, 
         Deinitialization -> None, DynamicLocalValues :> {
           {OwnRules($Context`x):= {HoldPattern($Context`x) :> 1}}}, 
         Initialization -> None, UnsavedVariables -> {})), "Output", 
       SectionGenerated -> True, SectionLabel -> "out [7]:")}, All), 
    SectionGroup({
      Section(BoxData({"Table", "(", {{"Checkbox", "(", "c", ")"}, ",", {
           "c", "\[Rule]", {"{", {"True", ",", "False", ",", "Undefined"}, 
            "}"}}}, ")"}), "Input", SectionLabel -> "in [8]:"), 
      Section(BoxData({"{", {CheckboxBox(True), ",", CheckboxBox(False), ",", 
          CheckboxBox(Undefined)}, "}"}), "Output", SectionGenerated -> True, 
       SectionLabel -> "out [8]:")}, All), 
    SectionGroup({
      Section(
       BoxData({"Table", "(", {
          {"Checkbox", "(", {"c", ",", {"Enabled", "\[Rule]", "False"}}, ")"}, 
          ",", {"c", "\[Rule]", {
            "{", {"True", ",", "False", ",", "Undefined"}, "}"}}}, ")"}), 
       "Input", SectionLabel -> "in [9]:"), 
      Section(
       BoxData({"{", {CheckboxBox(True, {False, True}, Enabled -> False), ",", 
          CheckboxBox(False, {False, True}, Enabled -> False), ",", 
          CheckboxBox(Undefined, {False, True}, Enabled -> False)}, "}"}), 
       "Output", SectionGenerated -> True, SectionLabel -> "out [9]:")}, All), 
    SectionGroup({
      Section(BoxData({"Table", "(", {{"ToggleSwitch", "(", "c", ")"}, ",", {
           "c", "\[Rule]", {"{", {"True", ",", "False", ",", "Undefined"}, 
            "}"}}}, ")"}), "Input", SectionLabel -> "in [10]:"), 
      Section(BoxData({"{", {TemplateBox({True}, "ToggleSwitch"), ",", 
          TemplateBox({False}, "ToggleSwitch"), ",", 
          TemplateBox({Undefined}, "ToggleSwitch")}, "}"}), "Output", 
       SectionGenerated -> True, SectionLabel -> "out [10]:")}, All), 
    SectionGroup({
      Section(
       BoxData({"Table", "(", {
          {"ToggleSwitch", "(", {"c", ",", {"Enabled", "\[Rule]", "False"}}, 
           ")"}, ",", {"c", "\[Rule]", {
            "{", {"True", ",", "False", ",", "Undefined"}, "}"}}}, ")"}), 
       "Input", SectionLabel -> "in [11]:"), 
      Section(
       BoxData({"{", {TemplateBox({True, Enabled -> False}, "ToggleSwitch"), 
          ",", TemplateBox({False, Enabled -> False}, "ToggleSwitch"), ",", 
          TemplateBox({Undefined, Enabled -> False}, "ToggleSwitch")}, "}"}), 
       "Output", SectionGenerated -> True, SectionLabel -> "out [11]:")}, 
     All), SectionGroup({
      Section(BoxData({"Table", "(", {{"RadioButton", "(", "c", ")"}, ",", {
           "c", "\[Rule]", {"{", {"True", ",", "False"}, "}"}}}, ")"}), 
       "Input", SectionLabel -> "in [12]:"), 
      Section(
       BoxData({"{", {RadioButtonBox(True), ",", RadioButtonBox(False)}, 
         "}"}), "Output", SectionGenerated -> True, 
       SectionLabel -> "out [12]:")}, All), 
    SectionGroup({
      Section(
       BoxData({"Table", "(", {
          {"RadioButton", "(", {"c", ",", "True", ",", {
             "Enabled", "\[Rule]", "False"}}, ")"}, ",", {
           "c", "\[Rule]", {"{", {"True", ",", "False"}, "}"}}}, ")"}), 
       "Input", SectionLabel -> "in [13]:"), 
      Section(BoxData({"{", {RadioButtonBox(True, True, Enabled -> False), 
          ",", RadioButtonBox(False, True, Enabled -> False)}, "}"}), 
       "Output", SectionGenerated -> True, SectionLabel -> "out [13]:")}, 
     All), SectionGroup({
      Section(BoxData({"Table", "(", {{"Opener", "(", "c", ")"}, ",", {
           "c", "\[Rule]", {"{", {"False", ",", "True"}, "}"}}}, ")"}), 
       "Input", SectionLabel -> "in [14]:"), 
      Section(BoxData({"{", {OpenerBox(False), ",", OpenerBox(True)}, "}"}), 
       "Output", SectionGenerated -> True, SectionLabel -> "out [14]:")}, 
     All), SectionGroup({
      Section(
       BoxData({"Table", "(", {
          {"Opener", "(", {"c", ",", {"Enabled", "\[Rule]", "False"}}, ")"}, 
          ",", {"c", "\[Rule]", {"{", {"False", ",", "True"}, "}"}}}, ")"}), 
       "Input", SectionLabel -> "in [15]:"), 
      Section(BoxData({"{", {OpenerBox(False, Enabled -> False), ",", 
          OpenerBox(True, Enabled -> False)}, "}"}), "Output", 
       SectionGenerated -> True, SectionLabel -> "out [15]:")}, All), 
    SectionGroup({
      Section(BoxData({"Tooltip", "(", {
          {"Panel", "(", StringBox("\"abc\""), ")"}, ",", 
          StringBox("\"Tip\"")}, ")"}), "Input", SectionLabel -> "in [16]:"), 
      Section(BoxData(TooltipBox(PanelBox(StringBox("\"abc\"")), 
         StringBox("\"Tip\""))), "Output", SectionGenerated -> True, 
       SectionLabel -> "out [16]:")}, All), 
    SectionGroup({
      Section(BoxData({"Tooltip", "(", {
          {"Panel", "(", {StringBox("\"abc\""), ",", {
             "Enabled", "\[Rule]", "False"}}, ")"}, ",", 
          StringBox("\"Tip\"")}, ")"}), "Input", SectionLabel -> "in [17]:"), 
      Section(BoxData(TooltipBox(PanelBox(StringBox("\"abc\""), 
          Enabled -> False), StringBox("\"Tip\""))), "Output", 
       SectionGenerated -> True, SectionLabel -> "out [17]:")}, All), 
    SectionGroup({
      Section(BoxData({"Panel", "(", {StringBox("\"abc\""), ",", {
           "Appearance", "\[Rule]", StringBox("\"Popup\"")}}, ")"}), "Input", 
       SectionLabel -> "in [18]:"), 
      Section(BoxData(PanelBox(StringBox("\"abc\""), Appearance -> "Popup")), 
       "Output", SectionGenerated -> True, SectionLabel -> "out [18]:")}, 
     All), SectionGroup({
      Section(BoxData({"Panel", "(", {StringBox("\"abc\""), ",", {
           "Appearance", "\[Rule]", StringBox("\"Tooltip\"")}}, ")"}), 
       "Input", SectionLabel -> "in [19]:"), 
      Section(BoxData(PanelBox(StringBox("\"abc\""), 
         Appearance -> "Tooltip")), "Output", SectionGenerated -> True, 
       SectionLabel -> "out [19]:")}, All), 
    SectionGroup({Section("Input Field", "Subsection"), 
      SectionGroup({
        Section(BoxData({"InputField", "(", {
            StringBox("\"Hallo\""), ",", "String"}, ")"}), "Input", 
         SectionLabel -> "in [20]:"), 
        Section(BoxData(InputFieldBox("Hallo", String)), "Output", 
         SectionGenerated -> True, SectionLabel -> "out [20]:")}, All), 
      SectionGroup({
        Section(BoxData({"InputField", "(", {
            StringBox("\"Hallo\""), ",", "String", ",", {
             "Enabled", "\[Rule]", "False"}}, ")"}), "Input", 
         SectionLabel -> "in [21]:"), 
        Section(BoxData(InputFieldBox("Hallo", String, Enabled -> False)), 
         "Output", SectionGenerated -> True, SectionLabel -> "out [21]:")}, 
       All), SectionGroup({
        Section(
         BoxData({"Panel", "(", {
            {"Grid", "(", {
              {"{", {
                "{", {{"InputField", "(", {StringBox("\"abc\""), ",", 
                   "String", ",", {"Appearance", "\[Rule]", 
                    StringBox("\"AddressBand\"")}}, ")"}, ",", {
                  "Button", "(", {StringBox("\"Go\""), ",", "None", ",", {
                    "ButtonFrame", "\[Rule]", 
                    StringBox("\"AddressBandGo\"")}}, ")"}}, "}"}, "}"}, ",", {
               "ColumnSpacing", "\[Rule]", "0"}}, ")"}, ",", {
             "Appearance", "\[Rule]", StringBox("\"AddressBand\"")}}, ")"}), 
         "Input", SectionLabel -> "in [22]:"), 
        Section(
         BoxData(
          PanelBox(
           TagBox(
            GridBox({
              {InputFieldBox("abc", String, Appearance -> "AddressBand"), 
               ButtonBox(StringBox("\"Go\""), 
                ButtonFrame -> "AddressBandGo")}}, GridBoxColumnSpacing -> 0), 
            "Grid"), Appearance -> "AddressBand")), "Output", 
         SectionGenerated -> True, SectionLabel -> "out [22]:")}, All)}, All), 
    SectionGroup({Section("Tab view", "Subsection"), 
      SectionGroup({
        Section(BoxData({"TabView", "(", {
            "{", {{"a", "\[Rule]", {"a", SuperscriptBox("2")}}, ",", {
              "b", "\[Rule]", {"b", SuperscriptBox("2")}}}, "}"}, ")"}), 
         "Input", SectionLabel -> "in [23]:"), 
        Section(
         BoxData(TemplateBox({
            {"a" -> {"a", SuperscriptBox("2")}, 
             "b" -> {"b", SuperscriptBox("2")}}, 1}, "TabView")), "Output", 
         SectionGenerated -> True, SectionLabel -> "out [23]:")}, All), 
      SectionGroup({
        Section(BoxData({"DynamicLocal", "(", {
            {"{", {"idx", "\[Assign]", "1"}, "}"}, ",", {
             "\n", {"Grid", "(", {
               {"{", {
                 {"\n", {
                   "{", {"Panel", "(", {
                     {"\n", {"Grid", "(", {
                        {"{", {"{", {StringBox("\" \""), ",", {
                            "\n", {"Setter", "(", {
                              {"Dynamic", "(", {"idx", ",", {
                                 "{", {"Automatic", ",", "None", ",", 
                                  "Automatic"}, "}"}}, ")"}, ",", "1", ",", 
                              StringBox("\"Tab 1\""), ",", {
                               "\n", {"ButtonFrame", "\[Rule]", 
                                StringBox("\"TabHeadAbuttingRight\"")}}}, 
                             ")"}}, ",", {
                            "\n", {"Setter", "(", {
                              {"Dynamic", "(", {"idx", ",", {
                                 "{", {"Automatic", ",", "None", ",", 
                                  "Automatic"}, "}"}}, ")"}, ",", "2", ",", 
                              StringBox("\"Tab 2\""), ",", {
                               "\n", {"ButtonFrame", "\[Rule]", 
                                StringBox("\"TabHeadAbuttingLeftRight\"")}}}, 
                             ")"}}, ",", {
                            "\n", {"Setter", "(", {
                              {"Dynamic", "(", {"idx", ",", {
                                 "{", {"Automatic", ",", "None", ",", 
                                  "Automatic"}, "}"}}, ")"}, ",", "3", ",", 
                              StringBox("\"Tab 3\""), ",", {
                               "\n", {"ButtonFrame", "\[Rule]", 
                                StringBox("\"TabHeadAbuttingLeftRight\"")}}}, 
                             ")"}}, ",", {
                            "\n", {"Setter", "(", {
                              {"Dynamic", "(", {"idx", ",", {
                                 "{", {"Automatic", ",", "None", ",", 
                                  "Automatic"}, "}"}}, ")"}, ",", "4", ",", 
                              StringBox("\"Tab 4\""), ",", {
                               "\n", {"ButtonFrame", "\[Rule]", 
                                StringBox("\"TabHeadAbuttingLeft\"")}}}, 
                             ")"}}, ",", {"\n", StringBox("\"  \"")}, ",", {
                            "\n", {"Button", "(", {StringBox("\"+\""), ",", 
                              ",", {"ButtonFrame", "\[Rule]", 
                               StringBox("\"TabHead\"")}}, ")"}}, ",", {
                            "\n", StringBox("\" \"")}}, "}"}, "}"}, ",", {
                         "\n", {"ColumnSpacing", "\[Rule]", "0"}}}, ")"}}, 
                     ",", {"\n", {"Appearance", "\[Rule]", 
                       StringBox("\"TabHead\"")}}}, ")"}, "}"}}, ",", {
                  "\n", {
                   "{", {"Panel", "(", {
                     {"\n", {"PaneSelector", "(", {
                        {"{", {
                          {"\n", {"1", "\[Rule]", 
                            StringBox("\"content 1\"")}}, ",", {
                           "\n", {"2", "\[Rule]", 
                            StringBox("\"content 2\"")}}, ",", {
                           "\n", {"3", "\[Rule]", 
                            StringBox("\"content 3\"")}}, ",", {
                           "\n", {"4", "\[Rule]", 
                            StringBox("\"content 4\"")}}}, "}"}, ",", {
                         "\n", {"Dynamic", "(", "idx", ")"}}}, ")"}}, ",", {
                      "\n", {"Appearance", "\[Rule]", 
                       StringBox("\"TabBody\"")}}}, ")"}, "}"}}}, "}"}, ",", {
                "RowSpacing", "\[Rule]", "0"}}, ")"}}}, ")"}), "Input"), 
        Section(BoxData(DynamicLocalBox({$Context`idx}, 
           TagBox(
            GridBox({
              {PanelBox(
                TagBox(
                 GridBox({
                   {StringBox("\" \""), 
                    SetterBox(Dynamic($Context`idx, {
                       Automatic, None, Automatic}), 1, 
                     StringBox("\"Tab 1\""), 
                     ButtonFrame -> "TabHeadAbuttingRight"), 
                    SetterBox(Dynamic($Context`idx, {
                       Automatic, None, Automatic}), 2, 
                     StringBox("\"Tab 2\""), 
                     ButtonFrame -> "TabHeadAbuttingLeftRight"), 
                    SetterBox(Dynamic($Context`idx, {
                       Automatic, None, Automatic}), 3, 
                     StringBox("\"Tab 3\""), 
                     ButtonFrame -> "TabHeadAbuttingLeftRight"), 
                    SetterBox(Dynamic($Context`idx, {
                       Automatic, None, Automatic}), 4, 
                     StringBox("\"Tab 4\""), 
                     ButtonFrame -> "TabHeadAbuttingLeft"), 
                    StringBox("\"  \""), ButtonBox(StringBox("\"+\""), 
                     ButtonFrame -> "TabHead", 
                     ButtonFunction -> Function(/\/)), StringBox("\" \"")}}, 
                  GridBoxColumnSpacing -> 0), "Grid"), 
                Appearance -> "TabHead")}, {
               PanelBox(PaneSelectorBox({1 -> StringBox("\"content 1\""), 
                  2 -> StringBox("\"content 2\""), 
                  3 -> StringBox("\"content 3\""), 
                  4 -> StringBox("\"content 4\"")}, Dynamic($Context`idx)), 
                Appearance -> "TabBody")}}, GridBoxRowSpacing -> 0), "Grid"), 
           DynamicLocalValues :> {
             {OwnRules($Context`idx):= {HoldPattern($Context`idx) :> 1}}})), 
         "Output", SectionGenerated -> True, SectionLabel -> "out [1]:")}, 
       All), SectionGroup({
        Section(
         BoxData({
           {{"{", {
              {"{", {StringBox("\"TabPanelTopLeft\""), ",", 
                StringBox("\"TabPanelTopCenter\""), ",", 
                StringBox("\"TabPanelTopRight\"")}, "}"}, ",", {
               "{", {StringBox("\"TabPanelCenterLeft\""), ",", 
                StringBox("\"TabPanelCenter\""), ",", 
                StringBox("\"TabPanelCenterRight\"")}, "}"}, ",", {
               "{", {StringBox("\"TabPanelBottomLeft\""), ",", 
                StringBox("\"TabPanelBottomCenter\""), ",", 
                StringBox("\"TabPanelBottomRight\"")}, "}"}}, "}"}, "|>", {
             "Map", "(", {
              {"Function", "(", {"Panel", "(", {
                 StringBox("\" x \""), ",", {"Appearance", "\[Rule]", "#"}}, 
                ")"}, ")"}, ",", "2"}, ")"}}, "|>", {
            "Grid", "(", {{"ColumnSpacing", "\[Rule]", "0"}, ",", {
              "RowSpacing", "\[Rule]", "0"}}, ")"}}), "Input", 
         SectionLabel -> "in [7]:"), 
        Section(
         BoxData(
          TagBox(
           GridBox({
             {PanelBox(StringBox("\" x \""), Appearance -> "TabPanelTopLeft"), 
              PanelBox(StringBox("\" x \""), 
               Appearance -> "TabPanelTopCenter"), 
              PanelBox(StringBox("\" x \""), 
               Appearance -> "TabPanelTopRight")}, {
              PanelBox(StringBox("\" x \""), 
               Appearance -> "TabPanelCenterLeft"), 
              PanelBox(StringBox("\" x \""), Appearance -> "TabPanelCenter"), 
              PanelBox(StringBox("\" x \""), 
               Appearance -> "TabPanelCenterRight")}, {
              PanelBox(StringBox("\" x \""), 
               Appearance -> "TabPanelBottomLeft"), 
              PanelBox(StringBox("\" x \""), 
               Appearance -> "TabPanelBottomCenter"), 
              PanelBox(StringBox("\" x \""), 
               Appearance -> "TabPanelBottomRight")}}, 
            GridBoxColumnSpacing -> 0, GridBoxRowSpacing -> 0), "Grid")), 
         "Output", SectionGenerated -> True, SectionLabel -> "out [7]:")}, 
       All), SectionGroup({
        Section(BoxData({"DynamicLocal", "(", {
            {"{", {"idx", "\[Assign]", "1"}, "}"}, ",", {
             {{{"{", {
                 {"{", {StringBox("\"TabPanelTopLeft\""), ",", 
                   StringBox("\"TabPanelTopCenter\""), ",", 
                   StringBox("\"TabPanelTopRight\"")}, "}"}, ",", {
                  "{", {StringBox("\"TabPanelCenterLeft\""), ",", 
                   StringBox("\"TabPanelCenter\""), ",", 
                   StringBox("\"TabPanelCenterRight\"")}, "}"}, ",", {
                  "{", {StringBox("\"TabPanelBottomLeft\""), ",", 
                   StringBox("\"TabPanelBottomCenter\""), ",", 
                   StringBox("\"TabPanelBottomRight\"")}, "}"}}, "}"}, "|>", {
                "Map", "(", {
                 {"Function", "(", {"Panel", "(", {
                    StringBox("\"\""), ",", {"Appearance", "\[Rule]", "#"}}, 
                   ")"}, ")"}, ",", "2"}, ")"}}, "|>", {
               "Grid", "(", {{"ColumnSpacing", "\[Rule]", "0"}, ",", {
                 "RowSpacing", "\[Rule]", "0"}}, ")"}}, "|>", {
              "Replace", "(", {
               "{", {
                {{"Panel", "(", {"~", ",", {"Appearance", "\[Rule]", 
                    StringBox("\"TabPanelCenter\"")}}, ")"}, "\[Rule]", {
                  "Panel", "(", {
                   {"PaneSelector", "(", {
                     {"{", {
                       {"\n", {"1", "\[Rule]", StringBox("\"content 1\"")}}, 
                       ",", {"\n", {"2", "\[Rule]", 
                         StringBox("\"content 2\"")}}, ",", {
                        "\n", {"3", "\[Rule]", StringBox("\"content 3\"")}}, 
                       ",", {"\n", {"4", "\[Rule]", 
                         StringBox("\"content 4\"")}}}, "}"}, ",", {
                      "\n", {"Dynamic", "(", "idx", ")"}}}, ")"}, ",", {
                    "Appearance", "\[Rule]", 
                    StringBox("\"TabPanelCenter\"")}}, ")"}}, ",", {
                 "\n", {
                  {"Panel", "(", {"~", ",", {"Appearance", "\[Rule]", 
                     StringBox("\"TabPanelCenterLeft\"")}}, ")"}, "\[Rule]", {
                   "Panel", "(", {
                    {"Grid", "(", {
                      {"{", {
                        {"\n", {"{", {"Setter", "(", {
                            {"Dynamic", "(", {"idx", ",", {
                               "{", {"Automatic", ",", "None", ",", 
                                "Automatic"}, "}"}}, ")"}, ",", "1", ",", 
                            StringBox("\"Tab 1\""), ",", {
                             "ButtonFrame", "\[Rule]", 
                             StringBox("\"TabHeadLeftAbuttingBottom\"")}}, 
                           ")"}, "}"}}, ",", {
                         "\n", {"{", {"Setter", "(", {
                            {"Dynamic", "(", {"idx", ",", {
                               "{", {"Automatic", ",", "None", ",", 
                                "Automatic"}, "}"}}, ")"}, ",", "2", ",", 
                            StringBox("\"Tab 2\""), ",", {
                             "ButtonFrame", "\[Rule]", 
                             StringBox("\"TabHeadLeftAbuttingTopBottom\"")}}, 
                           ")"}, "}"}}, ",", {
                         "\n", {"{", {"Setter", "(", {
                            {"Dynamic", "(", {"idx", ",", {
                               "{", {"Automatic", ",", "None", ",", 
                                "Automatic"}, "}"}}, ")"}, ",", "3", ",", 
                            StringBox("\"Tab 3\""), ",", {
                             "ButtonFrame", "\[Rule]", 
                             StringBox("\"TabHeadLeftAbuttingTop\"")}}, ")"}, 
                          "}"}}, ",", {
                         "\n", {"{", {"Pane", "(", {
                            StringBox("\"\""), ",", {"{", {"10", ",", "10"}, 
                             "}"}}, ")"}, "}"}}, ",", {
                         "\n", {"{", {"Button", "(", {
                            StringBox("\"+\""), ",", "None", ",", {
                             "ButtonFrame", "\[Rule]", 
                             StringBox("\"TabHeadLeft\"")}}, ")"}, "}"}}}, 
                       "}"}, ",", {"\n", {"ColumnSpacing", "\[Rule]", "0"}}, 
                      ",", {"RowSpacing", "\[Rule]", "0"}}, ")"}, ",", {
                     "Appearance", "\[Rule]", 
                     StringBox("\"TabPanelCenterLeft\"")}}, ")"}}}}, "}"}, 
              ")"}}}, ")"}), "Input", SectionLabel -> "in [4]:"), 
        Section(BoxData(DynamicLocalBox({$Context`idx}, 
           TagBox(
            GridBox({
              {PanelBox(StringBox("\"\""), Appearance -> "TabPanelTopLeft"), 
               PanelBox(StringBox("\"\""), Appearance -> "TabPanelTopCenter"), 
               PanelBox(StringBox("\"\""), Appearance -> "TabPanelTopRight")}, 
              {PanelBox(
                TagBox(
                 GridBox({
                   {SetterBox(Dynamic($Context`idx, {
                       Automatic, None, Automatic}), 1, 
                     StringBox("\"Tab 1\""), 
                     ButtonFrame -> "TabHeadLeftAbuttingBottom")}, {
                    SetterBox(Dynamic($Context`idx, {
                       Automatic, None, Automatic}), 2, 
                     StringBox("\"Tab 2\""), 
                     ButtonFrame -> "TabHeadLeftAbuttingTopBottom")}, {
                    SetterBox(Dynamic($Context`idx, {
                       Automatic, None, Automatic}), 3, 
                     StringBox("\"Tab 3\""), 
                     ButtonFrame -> "TabHeadLeftAbuttingTop")}, {
                    PaneBox(StringBox("\"\""), ImageSize -> {10, 10})}, {
                    ButtonBox(StringBox("\"+\""), 
                     ButtonFrame -> "TabHeadLeft")}}, 
                  GridBoxColumnSpacing -> 0, GridBoxRowSpacing -> 0), "Grid"), 
                Appearance -> "TabPanelCenterLeft"), 
               PanelBox(PaneSelectorBox({1 -> StringBox("\"content 1\""), 
                  2 -> StringBox("\"content 2\""), 
                  3 -> StringBox("\"content 3\""), 
                  4 -> StringBox("\"content 4\"")}, Dynamic($Context`idx)), 
                Appearance -> "TabPanelCenter"), 
               PanelBox(StringBox("\"\""), 
                Appearance -> "TabPanelCenterRight")}, {
               PanelBox(StringBox("\"\""), 
                Appearance -> "TabPanelBottomLeft"), 
               PanelBox(StringBox("\"\""), 
                Appearance -> "TabPanelBottomCenter"), 
               PanelBox(StringBox("\"\""), 
                Appearance -> "TabPanelBottomRight")}}, 
             GridBoxColumnSpacing -> 0, GridBoxRowSpacing -> 0), "Grid"), 
           DynamicLocalValues :> {
             {OwnRules($Context`idx):= {HoldPattern($Context`idx) :> 1}}})), 
         "Output", SectionGenerated -> True, SectionLabel -> "out [4]:")}, 
       All)}, All)}, All)}, StyleDefinitions -> "Default.pmathdoc", 
 Visible -> True)
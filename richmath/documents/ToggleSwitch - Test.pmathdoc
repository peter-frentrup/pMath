/* pMath Document */

Document({SectionGroup({Section("ToggleSwitch \[LongDash] Test", "Title"), 
    SectionGroup({
      Section(BoxData({"Slider", "(", {{"Dynamic", "(", "x", ")"}, ",", {
           "Appearance", "\[Rule]", StringBox("\"ToggleSwitchUnchecked\"")}}, 
         ")"}), "Input", SectionLabel -> "in [1]:"), 
      Section(BoxData(SliderBox(Dynamic($Context`x), 0 .. 1, 
         Appearance -> "ToggleSwitchUnchecked")), "Output", 
       SectionGenerated -> True, SectionLabel -> "out [1]:")}, All), 
    SectionGroup({
      Section(BoxData({"Slider", "(", {{"Dynamic", "(", "x", ")"}, ",", {
           "Appearance", "\[Rule]", StringBox("\"ToggleSwitchChecked\"")}}, 
         ")"}), "Input", SectionLabel -> "in [2]:"), 
      Section(BoxData(SliderBox(Dynamic($Context`x), 0 .. 1, 
         Appearance -> "ToggleSwitchChecked")), "Output", 
       SectionGenerated -> True, SectionLabel -> "out [2]:")}, All), 
    SectionGroup({
      Section(
       BoxData({{"TemplateBox", "(", {{"{", {"Dynamic", "(", "c", ")"}, "}"}, 
           ",", StringBox("\"ToggleSwitch\"")}, ")"}, ".", "RawBoxes"}), 
       "Input", SectionLabel -> "in [3]:"), 
      Section(BoxData(TemplateBox({Dynamic($Context`c)}, "ToggleSwitch")), 
       "Output", SectionGenerated -> True, SectionLabel -> "out [3]:")}, All), 
    SectionGroup({
      Section(BoxData(TemplateBox({Dynamic($Context`c)}, "ToggleSwitch")), 
       "Input", SectionLabel -> "in [4]:"), 
      Section(BoxData(TemplateBox({Dynamic($Context`c)}, "ToggleSwitch")), 
       "Output", SectionGenerated -> True, SectionLabel -> "out [4]:")}, All), 
    SectionGroup({
      Section(
       BoxData({{"TemplateBox", "(", {{"{", {"Dynamic", "(", "c", ")"}, "}"}, 
           ",", StringBox("\"ToggleSwitch\""), ",", {
            "DisplayFunction", "\[Rule]", {
             "Function", "(", {"SliderBox", "(", {
               {"Dynamic", "(", {
                 {"\n", {{"CurrentValue", "(", {
                     "{", {"TemplateSlot", ",", "1"}, "}"}, ")"}, ".", 
                   "Replace", "(", {"{", {{"True", "\[Rule]", "1"}, ",", {
                      "False", "\[Rule]", "0"}, ",", {"~", "\[Rule]", "0.5"}}, 
                    "}"}, ")"}}, ",", {
                  "{", {"None", ",", "Temporary", ",", {
                    "Function", "(", {
                     "\n", {
                      {{"If", "(", {{"(", {"0", "<", "#", "<", "1"}, ")"}, 
                         "===", "True"}, ")"}, {
                        "{", {
                         "\n", {
                          {{"With", "(", {"FE`Private`state", "\[Assign]", {
                              "CurrentValue", "(", {
                               "{", {"TemplateSlot", ",", "1"}, "}"}, ")"}}, 
                            ")"}, {
                            "{", {
                             "\n", {
                              {{"If", "(", {
                                 {"FE`Private`state", "===", "True"}, "||", {
                                  "FE`Private`state", "===", "False"}}, ")"}, {
                                "{", {
                                 "\n", {
                                  {{"CurrentValue", "(", {
                                     "{", {"TemplateSlot", ",", "1"}, "}"}, 
                                    ")"}, "\[Assign]", {
                                    "Not", "(", "FE`Private`state", ")"}}, 
                                  "\n"}}, "}"}, "Else", {
                                "{", {
                                 "\n", {
                                  {{"CurrentValue", "(", {
                                     "{", {"TemplateSlot", ",", "1"}, "}"}, 
                                    ")"}, "\[Assign]", {
                                    {"(", {{"#", "1"}, "\[GreaterEqual]", 
                                      "0.5"}, ")"}, "===", "True"}}, "\n"}}, 
                                "}"}}, "\n"}}, "}"}}, "\n"}}, "}"}, "Else", {
                        "{", {
                         "\n", {
                          {{"CurrentValue", "(", {
                             "{", {"TemplateSlot", ",", "1"}, "}"}, ")"}, 
                           "\[Assign]", {{"(", {"#", "=", "1"}, ")"}, "===", 
                            "True"}}, "\n"}}, "}"}}, "\n"}}, ")"}}, "}"}}, 
                ")"}, ",", {"0", "..", "1"}, ",", {
                "ContinuousAction", "\[Rule]", "False"}, ",", {
                "Appearance", "\[Rule]", {
                 "Dynamic", "(", {
                  {"CurrentValue", "(", {"{", {"TemplateSlot", ",", "1"}, 
                    "}"}, ")"}, ".", "Replace", "(", {
                   "{", {
                    {"True", "\[Rule]", StringBox("\"ToggleSwitchChecked\"")}, 
                    ",", {"~", "\[Rule]", 
                     StringBox("\"ToggleSwitchUnchecked\"")}}, "}"}, ")"}, 
                 ")"}}}, ")"}, ")"}}}, ")"}, ".", "RawBoxes"}), "Input", 
       SectionLabel -> "in [5]:"), 
      Section(BoxData(TemplateBox({Dynamic($Context`c)}, "ToggleSwitch", 
         DisplayFunction -> (
           SliderBox(Dynamic(Replace(CurrentValue({TemplateSlot, 1}), {
               True -> 1, False -> 0, ~ -> 0.5`}), {
              None, Temporary, 
              If((0 < #1 < 1) === True, 
                With({FE`Private`state:= CurrentValue({TemplateSlot, 1})}, 
                 If(FE`Private`state === True || FE`Private`state === False, 
                  CurrentValue({TemplateSlot, 1}):= !FE`Private`state, 
                  CurrentValue({TemplateSlot, 1}):= (#1 >= 0.5`) === True)), 
                CurrentValue({TemplateSlot, 1}):= (#1 = 1) === True) &}), 
            0 .. 1, ContinuousAction -> False, 
            Appearance -> Dynamic(Replace(CurrentValue({TemplateSlot, 1}), {
                True -> "ToggleSwitchChecked", ~ -> 
                 "ToggleSwitchUnchecked"}))) &))), "Output", 
       SectionGenerated -> True, SectionLabel -> "out [5]:")}, All), 
    SectionGroup({Section(BoxData({"Dynamic", "(", "c", ")"}), "Input", 
       SectionLabel -> "in [6]:"), 
      Section(BoxData(DynamicBox(ToBoxes($Context`c))), "Output", 
       SectionGenerated -> True, SectionLabel -> "out [6]:")}, All), 
    SectionGroup({
      Section(BoxData({"Checkbox", "(", {"Dynamic", "(", "c", ")"}, ")"}), 
       "Input", SectionLabel -> "in [1]:"), 
      Section(BoxData(CheckboxBox(Dynamic($Context`c))), "Output", 
       SectionGenerated -> True, SectionLabel -> "out [7]:")}, All), 
    Section(BoxData({"c", "\[Assign]", "."}), "Input", 
     SectionLabel -> "in [1]:"), 
    SectionGroup({Section("Other state values", "Section"), 
      Section(BoxData({"ccc", "\[Assign]", "."}), "Input", 
       SectionLabel -> "in [9]:"), 
      SectionGroup({
        Section(
         BoxData({
           {"TemplateBox", "(", {
             {"{", {{"Dynamic", "(", "ccc", ")"}, ",", {
                "{", {"111", ",", "222"}, "}"}}, "}"}, ",", 
             StringBox("\"ToggleSwitch2\"")}, ")"}, ".", "RawBoxes"}), 
         "Input", SectionLabel -> "in [10]:"), 
        Section(BoxData(TemplateBox({Dynamic($Context`ccc), {111, 222}}, 
           "ToggleSwitch2")), "Output", SectionGenerated -> True, 
         SectionLabel -> "out [10]:")}, All), 
      SectionGroup({
        Section(
         BoxData({
           {"TemplateBox", "(", {
             {"{", {{"Dynamic", "(", "ccc", ")"}, ",", {
                "{", {"111", ",", "222"}, "}"}}, "}"}, ",", 
             StringBox("\"ToggleSwitch2\""), ",", {
              "DisplayFunction", "\[Rule]", {
               "Function", "(", {"SliderBox", "(", {
                 {"Dynamic", "(", {
                   {"\n", {"Block", {
                      "{", {
                       "\n", {
                        {{"With", "(", {"FE`Private`state", "\[Assign]", {
                            "CurrentValue", "(", {
                             "{", {"TemplateSlot", ",", "1"}, "}"}, ")"}}, 
                          ")"}, "\n", {"With", "(", {
                           "FE`Private`values", "\[Assign]", {
                            "CurrentValue", "(", {
                             "{", {"TemplateSlot", ",", "2"}, "}"}, ")"}}, 
                          ")"}, "\n", {"FE`Private`state", ".", "Replace", 
                          "(", {"{", {{{"FE`Private`values", "[", "2", "]"}, 
                             "\[Rule]", "1"}, ",", {
                             {"FE`Private`values", "[", "1", "]"}, "\[Rule]", 
                             "0"}, ",", {"~", "\[Rule]", "0.5"}}, "}"}, ")"}}, 
                        "\n"}}, "}"}}}, ",", {
                    "{", {"None", ",", "Temporary", ",", {
                      "Function", "(", {
                       "\n", {
                        {{"If", "(", {{"(", {"0", "<", "#", "<", "1"}, ")"}, 
                           "===", "True"}, ")"}, {
                          "{", {
                           "\n", {
                            {{"With", "(", {"FE`Private`state", "\[Assign]", {
                                "CurrentValue", "(", {
                                 "{", {"TemplateSlot", ",", "1"}, "}"}, ")"}}, 
                              ")"}, "\n", {"With", "(", {
                               "FE`Private`values", "\[Assign]", {
                                "CurrentValue", "(", {
                                 "{", {"TemplateSlot", ",", "2"}, "}"}, ")"}}, 
                              ")"}, "\n", {
                              {"If", "(", {"FE`Private`state", "===", {
                                 "FE`Private`values", "[", "1", "]"}}, ")"}, {
                               "{", {
                                "\n", {
                                 {{"CurrentValue", "(", {
                                    "{", {"TemplateSlot", ",", "1"}, "}"}, 
                                   ")"}, "\[Assign]", {"FE`Private`values", 
                                   "[", "2", "]"}}, "\n"}}, "}"}, "Else", " ", 
                              {"If", "(", {"FE`Private`state", "===", {
                                 "FE`Private`values", "[", "2", "]"}}, ")"}, {
                               "{", {
                                "\n", {
                                 {{"CurrentValue", "(", {
                                    "{", {"TemplateSlot", ",", "1"}, "}"}, 
                                   ")"}, "\[Assign]", {"FE`Private`values", 
                                   "[", "1", "]"}}, "\n"}}, "}"}, "Else", " ", 
                              {"If", "(", {
                                {"(", {{"#", "1"}, "\[GreaterEqual]", "0.5"}, 
                                 ")"}, "===", "True"}, ")"}, {
                               "{", {
                                "\n", {
                                 {{"CurrentValue", "(", {
                                    "{", {"TemplateSlot", ",", "1"}, "}"}, 
                                   ")"}, "\[Assign]", {"FE`Private`values", 
                                   "[", "2", "]"}}, "\n"}}, "}"}, "Else", {
                               "{", {
                                "\n", {
                                 {{"CurrentValue", "(", {
                                    "{", {"TemplateSlot", ",", "1"}, "}"}, 
                                   ")"}, "\[Assign]", {"FE`Private`values", 
                                   "[", "1", "]"}}, "\n"}}, "}"}}}, "\n"}}, 
                          "}"}, "Else", {
                          "{", {
                           "\n", {
                            {{"With", "(", {"FE`Private`values", "\[Assign]", {
                                "CurrentValue", "(", {
                                 "{", {"TemplateSlot", ",", "2"}, "}"}, ")"}}, 
                              ")"}, "\n", {
                              {"If", "(", {{"(", {"#", "=", "1"}, ")"}, "===", 
                                "True"}, ")"}, {
                               "{", {
                                "\n", {
                                 {{"CurrentValue", "(", {
                                    "{", {"TemplateSlot", ",", "1"}, "}"}, 
                                   ")"}, "\[Assign]", {"FE`Private`values", 
                                   "[", "2", "]"}}, "\n"}}, "}"}, "Else", {
                               "{", {
                                "\n", {
                                 {{"CurrentValue", "(", {
                                    "{", {"TemplateSlot", ",", "1"}, "}"}, 
                                   ")"}, "\[Assign]", {"FE`Private`values", 
                                   "[", "1", "]"}}, "\n"}}, "}"}}}, "\n"}}, 
                          "}"}}, "\n"}}, ")"}}, "}"}}, ")"}, ",", {
                  "0", "..", "1"}, ",", {"ContinuousAction", "\[Rule]", 
                  "False"}, ",", {"Appearance", "\[Rule]", {
                   "Dynamic", "(", {
                    "Block", {
                     "{", {
                      "\n", {
                       {{"With", "(", {"FE`Private`state", "\[Assign]", {
                           "CurrentValue", "(", {
                            "{", {"TemplateSlot", ",", "1"}, "}"}, ")"}}, 
                         ")"}, "\n", {"With", "(", {
                          "FE`Private`values", "\[Assign]", {
                           "CurrentValue", "(", {
                            "{", {"TemplateSlot", ",", "2"}, "}"}, ")"}}, 
                         ")"}, "\n", {
                         {"If", "(", {"FE`Private`state", "===", {
                            "FE`Private`values", "[", "2", "]"}}, ")"}, {
                          "{", {"\n", {StringBox("\"ToggleSwitchChecked\""), 
                            "\n"}}, "}"}, "Else", {
                          "{", {"\n", {StringBox("\"ToggleSwitchUnchecked\""), 
                            "\n"}}, "}"}}}, "\n"}}, "}"}}, ")"}}}, ")"}, 
               ")"}}}, ")"}, ".", "RawBoxes"}), "Input", 
         SectionLabel -> "in [11]:"), 
        Section(BoxData(TemplateBox({Dynamic($Context`ccc), {111, 222}}, 
           "ToggleSwitch2", DisplayFunction -> (
             SliderBox(
              Dynamic(
               With({FE`Private`state:= CurrentValue({TemplateSlot, 1})}, 
                With({FE`Private`values:= CurrentValue({TemplateSlot, 2})}, 
                 Replace(FE`Private`state, {FE`Private`values[2] -> 1, 
                   FE`Private`values[1] -> 0, ~ -> 0.5`}))), {
                None, Temporary, 
                If((0 < #1 < 1) === True, 
                  With({FE`Private`state:= CurrentValue({TemplateSlot, 1})}, 
                   With({FE`Private`values:= CurrentValue({TemplateSlot, 2})}, 
                    If(FE`Private`state === FE`Private`values[1], 
                     CurrentValue({TemplateSlot, 1}):= FE`Private`values[2], 
                     If(FE`Private`state === FE`Private`values[2], 
                      CurrentValue({TemplateSlot, 1}):= FE`Private`values[1], 
                      If((#1 >= 0.5`) === True, 
                       CurrentValue({TemplateSlot, 1}):= FE`Private`values[2], 
                       CurrentValue({TemplateSlot, 1}):= 
                        FE`Private`values[1]))))), 
                  With({FE`Private`values:= CurrentValue({TemplateSlot, 2})}, 
                   If((#1 = 1) === True, CurrentValue({TemplateSlot, 1}):= 
                     FE`Private`values[2], CurrentValue({TemplateSlot, 1}):= 
                     FE`Private`values[1]))) &}), 0 .. 1, 
              ContinuousAction -> False, 
              Appearance -> 
               Dynamic(
                With({FE`Private`state:= CurrentValue({TemplateSlot, 1})}, 
                 With({FE`Private`values:= CurrentValue({TemplateSlot, 2})}, 
                  If(FE`Private`state === FE`Private`values[2], 
                   "ToggleSwitchChecked", "ToggleSwitchUnchecked"))))) &))), 
         "Output", SectionGenerated -> True, SectionLabel -> "out [11]:")}, 
       All), SectionGroup({
        Section(BoxData({"Checkbox", "(", {{"Dynamic", "(", "ccc", ")"}, ",", {
             "{", {"111", ",", "222"}, "}"}}, ")"}), "Input", 
         SectionLabel -> "in [12]:"), 
        Section(BoxData(CheckboxBox(Dynamic($Context`ccc), {111, 222})), 
         "Output", SectionGenerated -> True, SectionLabel -> "out [12]:")}, 
       All), SectionGroup({Section(BoxData({"Dynamic", "(", "ccc", ")"}), 
         "Input", SectionLabel -> "in [13]:"), 
        Section(BoxData(DynamicBox(ToBoxes($Context`ccc))), "Output", 
         SectionGenerated -> True, SectionLabel -> "out [13]:")}, All)}, 
     All)}, All)}, StyleDefinitions -> "Default.pmathdoc", Visible -> True)
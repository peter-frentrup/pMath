/* pMath Document */

System`Document({
  System`SectionGroup({System`Section("Geometric Transformations", "Title"), 
    System`SectionGroup({System`Section(System`BoxData({"??", "*Transform*"}), 
       "Input", System`SectionLabel -> "in [1]:"), 
      System`Section(System`BoxData(
        System`StyleBox(System`TagBox(
          System`GridBox({
            {/\/(System`ButtonBox(System`ComplexStringBox(
                "\"System`AffineTransform\"")), " "), 
             /\/(System`ButtonBox(System`ComplexStringBox(
                "\"System`ShearingTransform\"")), " ")}, {
             /\/(System`ButtonBox(System`ComplexStringBox(
                "\"System`BoxTransformation\"")), " "), 
             /\/(System`ButtonBox(System`ComplexStringBox(
                "\"System`TransformationBox\"")), " ")}, {
             /\/(System`ButtonBox(System`ComplexStringBox(
                "\"System`LinearFractionalTransform\"")), " "), 
             /\/(System`ButtonBox(System`ComplexStringBox(
                "\"System`TransformationFunction\"")), " ")}, {
             /\/(System`ButtonBox(System`ComplexStringBox(
                "\"System`ReflectionTransform\"")), " "), 
             /\/(System`ButtonBox(System`ComplexStringBox(
                "\"System`TransformationMatrix\"")), " ")}, {
             /\/(System`ButtonBox(System`ComplexStringBox(
                "\"System`RotationTransform\"")), " "), 
             /\/(System`ButtonBox(System`ComplexStringBox(
                "\"System`TranslationTransform\"")), " ")}, {
             /\/(System`ButtonBox(System`ComplexStringBox(
                "\"System`ScalingTransform\"")), " "), 
             System`ComplexStringBox("\"\"")}}), "Grid"), 
         System`ButtonFrame -> "Frameless", 
         System`ButtonFunction -> (System`With({
           FE`Private`s$:= System`ToExpression(System`First(#1))}, 
          System`ShowDefinition(FE`Private`s$)) &), 
         System`GridBoxColumnSpacing -> 2, System`GridBoxRowSpacing -> 
          0.20000000298023224`, System`StripOnInput -> System`False)), 
       "PrintUsage", System`SectionGenerated -> System`True)}, System`All), 
    System`SectionGroup({System`Section(System`BoxData({"??", "*Matrix"}), 
       "Input", System`SectionLabel -> "in [5]:"), 
      System`Section(System`BoxData(
        System`StyleBox(System`TagBox(
          System`GridBox({
            {/\/(System`ButtonBox(System`ComplexStringBox(
                "\"System`DiagonalMatrix\"")), " "), 
             /\/(System`ButtonBox(System`ComplexStringBox(
                "\"System`RotationMatrix\"")), " ")}, {
             /\/(System`ButtonBox(System`ComplexStringBox(
                "\"System`IdentityMatrix\"")), " "), 
             /\/(System`ButtonBox(System`ComplexStringBox(
                "\"System`ScalingMatrix\"")), " ")}, {
             /\/(System`ButtonBox(System`ComplexStringBox(
                "\"System`IsMatrix\"")), " "), 
             /\/(System`ButtonBox(System`ComplexStringBox(
                "\"System`ShearingMatrix\"")), " ")}, {
             /\/(System`ButtonBox(System`ComplexStringBox(
                "\"System`ReflectionMatrix\"")), " "), 
             /\/(System`ButtonBox(System`ComplexStringBox(
                "\"System`TransformationMatrix\"")), " ")}}), "Grid"), 
         System`ButtonFrame -> "Frameless", 
         System`ButtonFunction -> (System`With({
           FE`Private`s$:= System`ToExpression(System`First(#1))}, 
          System`ShowDefinition(FE`Private`s$)) &), 
         System`GridBoxColumnSpacing -> 2, System`GridBoxRowSpacing -> 
          0.20000000298023224`, System`StripOnInput -> System`False)), 
       "PrintUsage", System`SectionGenerated -> System`True)}, System`All), 
    System`SectionGroup({System`Section("Test", "Section"), 
      System`SectionGroup({
        System`Section(System`BoxData({
           "r", "\[Assign]", {"RotationTransform", "(", {
             "\[Theta]", ",", {"{", {"0", ",", "1", ",", "1"}, "}"}}, ")"}}), 
         "Input", System`SectionLabel -> "in [2]:"), 
        System`Section(System`BoxData({"TransformationFunction", "(", {
            "(", System`GridBox({
              {{"Cos", "(", "\[Theta]", ")"}, {
                "-", System`FractionBox({"Sin", "(", "\[Theta]", ")"}, 
                 System`SqrtBox("2"))}, System`FractionBox({
                 "Sin", "(", "\[Theta]", ")"}, System`SqrtBox("2")), "0"}, {
               System`FractionBox({"Sin", "(", "\[Theta]", ")"}, 
                System`SqrtBox("2")), {{"Cos", "(", "\[Theta]", ")"}, "+", 
                System`FractionBox({"1", "-", {"Cos", "(", "\[Theta]", ")"}}, 
                 "2")}, System`FractionBox({
                 "1", "-", {"Cos", "(", "\[Theta]", ")"}}, "2"), "0"}, {
               {"-", System`FractionBox({"Sin", "(", "\[Theta]", ")"}, 
                 System`SqrtBox("2"))}, System`FractionBox({
                 "1", "-", {"Cos", "(", "\[Theta]", ")"}}, "2"), {
                {"Cos", "(", "\[Theta]", ")"}, "+", 
                System`FractionBox({"1", "-", {"Cos", "(", "\[Theta]", ")"}}, 
                 "2")}, "0"}, {"0", "0", "0", "1"}}), ")"}, ")"}), "Output", 
         System`SectionGenerated -> System`True, 
         System`SectionLabel -> "out [2]:")}, System`All), 
      System`SectionGroup({
        System`Section(System`BoxData({
           {"r", "(", {"{", {"x", ",", "y", ",", "z"}, "}"}, ")"}, "//", 
           "MatrixForm"}), "Input", System`SectionLabel -> "in [3]:"), 
        System`Section(System`BoxData({
           "(", System`TagBox(System`GridBox({
              {{{"x", " ", {"Cos", "(", "\[Theta]", ")"}}, "+", 
                System`FractionBox({"z", " ", {"Sin", "(", "\[Theta]", ")"}}, 
                 System`SqrtBox("2")), "-", System`FractionBox({
                  "y", " ", {"Sin", "(", "\[Theta]", ")"}}, 
                 System`SqrtBox("2"))}}, {
               {{"y", " ", {"(", {{"Cos", "(", "\[Theta]", ")"}, "+", 
                   System`FractionBox({"1", "-", {"Cos", "(", "\[Theta]", ")"}}, "2")}, ")"}}, 
                "+", System`FractionBox({
                  "z", " ", {"(", {"1", "-", {"Cos", "(", "\[Theta]", ")"}}, 
                   ")"}}, "2"), "+", System`FractionBox({
                  "x", " ", {"Sin", "(", "\[Theta]", ")"}}, 
                 System`SqrtBox("2"))}}, {
               {{"z", " ", {"(", {{"Cos", "(", "\[Theta]", ")"}, "+", 
                   System`FractionBox({"1", "-", {"Cos", "(", "\[Theta]", ")"}}, "2")}, ")"}}, 
                "+", System`FractionBox({
                  "y", " ", {"(", {"1", "-", {"Cos", "(", "\[Theta]", ")"}}, 
                   ")"}}, "2"), "-", System`FractionBox({
                  "x", " ", {"Sin", "(", "\[Theta]", ")"}}, 
                 System`SqrtBox("2"))}}}), System`Column), ")"}), "Output", 
         System`SectionGenerated -> System`True, 
         System`SectionLabel -> "out [3]:")}, System`All), 
      System`SectionGroup({
        System`Section(System`BoxData({"ShearingTransform", "(", {
            "\[Theta]", ",", {"{", {"1", ",", "0", ",", "0"}, "}"}, ",", {
             "{", {"0", ",", "0", ",", "1"}, "}"}, ",", {
             "{", {"0", ",", "0", ",", "1"}, "}"}}, ")"}), "Input", 
         System`SectionLabel -> "in [4]:"), 
        System`Section(System`BoxData({"TransformationFunction", "(", {
            "(", System`GridBox({
              {"1", "0", {"Tan", "(", "\[Theta]", ")"}, {
                "-", {"Tan", "(", "\[Theta]", ")"}}}, {"0", "1", "0", "0"}, {
               "0", "0", "1", "0"}, {"0", "0", "0", "1"}}), ")"}, ")"}), 
         "Output", System`SectionGenerated -> System`True, 
         System`SectionLabel -> "out [4]:")}, System`All)}, System`All)}, 
   System`All)}, System`Visible -> System`True)
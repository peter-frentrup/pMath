/* pMath Document */

Document({
  SectionGroup({Section("Symbol classifications", "Title"), 
    SectionGroup({Section("Initialization", "Subsection"), 
      Section(
       BoxData(
        /\/({
          {"all", "\[Assign]", {
            "Sort", "(", {"Names", "(", StringBox("\"System`*\""), ")"}, 
            ")"}}, ";"}, "\n", {
          {"allFunc", "\[Assign]", {"all", ".", "Select", "(", {
             {{"Developer`HasBuiltinCode", "(", {
                "#", ",", {"{", {"DownRules", ",", "SubRules"}, "}"}}, ")"}, 
              "||", {{"DownRules", "(", "#", ")"}, "=!=", {"{", "}"}}, "||", {
               {"SubRules", "(", "#", ")"}, "=!=", {"{", "}"}}}, "&"}, ")"}}, 
          ";"}, "\n", {
          {"allRest", ":=", {"Complement", "(", {"all", ",", "allFunc"}, 
            ")"}}, ";"}, "\n", {
          {"allUnknown", "\[Assign]", {"allRest", ".", "Select", "(", {
             {{"OwnRules", "(", "#", ")"}, ".", "Match", "(", {
               "{", {{"(", {"Rule", "|", "RuleDelayed"}, ")"}, "(", {
                 "~", ",", {"~", ":", "System`Private`AutoLoadStart"}}, ")"}, 
               "}"}, ")"}, "&"}, ")"}}, ";"}, "\n", {
          {"allRest", ":=", {"Complement", "(", {
             "allRest", ",", "allUnknown"}, ")"}}, ";"}, "\n", {
          {"allValues", ":=", {"allRest", ".", "Select", "(", {
             {{"OwnRules", "(", "#", ")"}, "=!=", {"{", "}"}}, "&"}, ")"}}, 
          ";"}, "\n", {
          {"allRest", ":=", {"Complement", "(", {"allRest", ",", "allValues"}, 
            ")"}}, ";"})), "Input", SectionLabel -> "in [1]:"), 
      Section(
       BoxData({{"makeGrid", "(", {{"~", "data"}, ",", {"~", "columns"}}, 
          ")"}, "\[AssignDelayed]", {
          "Grid", "(", {
           {"PadRight", "(", {
             {"Partition", "(", {"data", ",", {
                "\[LeftCeiling]", FractionBox({"Length", "(", "data", ")"}, 
                 "columns"), "\[RightCeiling]"}, ",", {
                "\[LeftCeiling]", FractionBox({"Length", "(", "data", ")"}, 
                 "columns"), "\[RightCeiling]"}, ",", {
                "{", {"1", ",", "1"}, "}"}, ",", {"{", "}"}}, ")"}, ",", {
              "{", {"columns", ",", {"\[LeftCeiling]", 
                FractionBox({"Length", "(", "data", ")"}, "columns"), 
                "\[RightCeiling]"}}, "}"}, ",", StringBox("\"\"")}, ")"}, 
           SuperscriptBox("\[DownTee]")}, ")"}}), "Input", 
       SectionLabel -> "in [8]:"), 
      Section(
       BoxData({{"printInfoGrid", "(", {{"~", "data"}, ",", {"~", "columns"}}, 
          ")"}, "\[AssignDelayed]", {"SectionPrint", "(", {
           StringBox("\"PrintUsage\""), ",", {
            {{"data", ".", "Map", "(", {
               {"RawBoxes", "(", {
                 "{", {{"ButtonBox", "(", {"ToBoxes", "(", "#", ")"}, ")"}, 
                  ",", StringBox("\" \"")}, "}"}, ")"}, "&"}, ")"}, ".", 
             "makeGrid", "(", "columns", ")"}, ".", "Style", "(", {
             {"ButtonBoxOptions", "\[Rule]", {
               "{", {{"ButtonFrame", "\[Rule]", StringBox("\"Frameless\"")}, 
                ",", {"ButtonFunction", "\[Rule]", " ", {
                  "(", {
                   {"With", "(", {
                     {"{", {"FE`Private`s", "\[Assign]", {
                        "ToExpression", "(", {"First", "(", {"#", "1"}, ")"}, 
                        ")"}}, "}"}, ",", {"ShowDefinition", "(", 
                      "FE`Private`s", ")"}}, ")"}, "&"}, ")"}}}, "}"}}, ",", {
              "GridBoxColumnSpacing", "\[Rule]", "2"}, ",", {
              "GridBoxRowSpacing", "\[Rule]", "0.20000000298023224`"}, ",", {
              "StripOnInput", "\[Rule]", "False"}}, ")"}}, ")"}}), "Input", 
       SectionLabel -> "in [9]:"), 
      Section(
       BoxData({{"usageSymbolNames", "\[Assign]", {
           "Flatten", "(", {
            {"ReadList", "(", {
              {"ToFileName", "(", {"$BaseDirectory", ",", 
                StringBox("\"usage.pmath\"")}, ")"}, ",", "String"}, ")"}, 
            ".", "StringCases", "(", {
             {{"StartOfString", "++", {{"Shortest", "(", {"~~~", "sym"}, ")"}, 
                "++", StringBox("\"::usage\"")}}, "\[RuleDelayed]", {
               "If", "(", {
                {{"StringPosition", "(", {"sym", ",", StringBox("\"`\""), ",", 
                   "1"}, ")"}, "===", {"{", "}"}}, ",", {
                 StringBox("\"System`\""), "++", "sym"}, ",", "sym"}, ")"}}, 
             ",", "1"}, ")"}, ")"}}, ";"}), "Input", 
       SectionLabel -> "in [10]:"), 
      Section(BoxData(/\/({"usageSymbolNames", ".", "Scan", "(", {
           {"(", {{"hasUsage", "(", {"MakeExpression", "(", "#", ")"}, ")"}, 
             "\[Assign]", "True"}, ")"}, "&"}, ")"}, "\n", {
          {{"hasUsage", "(", "~", ")"}, "\[Assign]", "False"}, ";"})), 
       "Input", SectionLabel -> "in [11]:"), 
      Section(BoxData({{"markNonDocumented", "(", {"~", "name"}, ")"}, 
         "\[AssignDelayed]", {
          "If", "(", {{"hasUsage", "(", {"MakeExpression", "(", "name", ")"}, 
            ")"}, ",", "name", ",", {"Style", "(", {"name", ",", "Red"}, 
            ")"}}, ")"}}), "Input", SectionLabel -> "in [13]:")}, All), 
    SectionGroup({Section("Functions", "Subsection"), 
      SectionGroup({
        Section(
         BoxData({
           {{"allFunc", ".", "StringReplace", "(", {
              {"StartOfString", "++", StringBox("\"System`\"")}, "\[Rule]", 
              StringBox("\"\"")}, ")"}, ".", "Map", "(", "markNonDocumented", 
            ")"}, ".", "printInfoGrid", "(", "3", ")"}), "Input", 
         SectionLabel -> "in [14]:"), 
        Section(
         BoxData({
           TemplateBox({
             TemplateBox({
               MessageName -> HoldForm(Developer`FromPackedArray::"punpack"), 
               Message -> StringForm(
                 "Unpacking array with dimensions `2` in call to `1`.", Part, {
                  2}), Stack -> {
                 {"Head" -> SectionPrint, 
                  "Location" -> Language`SourceLocation(
                    FrontEndObject(10801762494786359001, 10539), 30 .. 328)}, {
                  "Head" -> Style, "Location" -> 
                   Language`SourceLocation(
                    FrontEndObject(10801762494786359001, 10539), 56 .. 327)}, {
                  "Head" -> Grid, "Location" -> 
                   Language`SourceLocation(
                    FrontEndObject(10801762494786359001, 10525), 25 .. 91)}, {
                  "Head" -> Transpose, 
                  "Location" -> Language`SourceLocation(
                    FrontEndObject(10801762494786359001, 10525), 30 .. 90)}, {
                  "Head" -> With}, {"Head" -> Catch, 
                  "Location" -> Language`SourceLocation(
                    "C:\\Users\\Peter\\Documents\\Programmieren\\pmath\\librar\
                    y\\scripts\\auto\\core\\linalg.pmath", {
                      11, 55} .. {11, 100})}, {
                  "Head" -> System`linalg`transposeHelper, 
                  "Location" -> Language`SourceLocation(
                    "C:\\Users\\Peter\\Documents\\Programmieren\\pmath\\librar\
                    y\\scripts\\auto\\core\\linalg.pmath", {
                      11, 61} .. {11, 90})}, {"Head" -> EvaluationSequence, 
                  "Location" -> Language`SourceLocation(
                    "C:\\Users\\Peter\\Documents\\Programmieren\\pmath\\librar\
                    y\\scripts\\auto\\core\\linalg.pmath", {
                      14, 97} .. {46, 15})}, {
                  "Head" -> Do, "Location" -> Language`SourceLocation(
                    "C:\\Users\\Peter\\Documents\\Programmieren\\pmath\\librar\
                    y\\scripts\\auto\\core\\linalg.pmath", {
                      39, 38} .. {45, 16})}, {"Head" -> EvaluationSequence, 
                  "Location" -> Language`SourceLocation(
                    "C:\\Users\\Peter\\Documents\\Programmieren\\pmath\\librar\
                    y\\scripts\\auto\\core\\linalg.pmath", {
                      40, 4} .. {44, 50})}, {
                  "Head" -> Do, "Location" -> Language`SourceLocation(
                    "C:\\Users\\Peter\\Documents\\Programmieren\\pmath\\librar\
                    y\\scripts\\auto\\core\\linalg.pmath", {
                      41, 2} .. {43, 22})}, {"Head" -> Part, 
                  "Location" -> Language`SourceLocation(
                    "C:\\Users\\Peter\\Documents\\Programmieren\\pmath\\librar\
                    y\\scripts\\auto\\core\\linalg.pmath", {
                      41, 5} .. {42, 26})}, {"Head" -> Message}, {
                  "Head" -> SectionPrint}}}, "MessageMenuButton"), {
              "Developer`FromPackedArray", "::", StringBox("\"punpack\"")}}, 
            "RowDefault"), ":", " ", InterpretationBox(
            StringBox("\"Unpacking array with dimensions ", {"{", "2", "}"}, 
             " in call to ", "Part", ".\""), 
            StringForm("Unpacking array with dimensions `2` in call to `1`.", 
             Part, {2}), Editable -> False)}), "Message", 
         SectionGenerated -> True), 
        Section(
         BoxData(
          StyleBox(
           TagBox(GridBox({{/\/(ButtonBox(StringBox("\"$History\"")), " "), 
               /\/(ButtonBox(StringBox("\"FilterRules\"")), " "), 
               /\/(ButtonBox(StringBox("\"Overflow\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"$MessageCount\"")), " "), 
               /\/(ButtonBox(StringBox("\"Finally\"")), " "), 
               /\/(ButtonBox(StringBox("\"OwnRules\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Abort\"")), " "), 
               /\/(ButtonBox(StringBox("\"Find\"")), " "), 
               /\/(ButtonBox(StringBox("\"PadLeft\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Abs\"")), " "), 
               /\/(ButtonBox(StringBox("\"FindList\"")), " "), 
               /\/(ButtonBox(StringBox("\"PadRight\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"AiryAi\"")), " "), 
               /\/(ButtonBox(StringBox("\"First\"")), " "), 
               /\/(ButtonBox(StringBox("\"ParallelMap\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"AiryAiPrime\"")), " "), 
               /\/(ButtonBox(StringBox("\"FixedPoint\"")), " "), 
               /\/(ButtonBox(StringBox("\"ParallelMapIndexed\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"AiryBi\"")), " "), 
               /\/(ButtonBox(StringBox("\"FixedPointList\"")), " "), 
               /\/(ButtonBox(StringBox("\"ParallelScan\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"AiryBiPrime\"")), " "), 
               /\/(ButtonBox(StringBox("\"Flatten\"")), " "), 
               /\/(ButtonBox(StringBox("\"ParallelTry\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"And\"")), " "), 
               /\/(ButtonBox(StringBox("\"Floor\"")), " "), 
               /\/(ButtonBox(StringBox("\"ParentDirectory\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Append\"")), " "), 
               /\/(ButtonBox(StringBox("\"Fold\"")), " "), 
               /\/(ButtonBox(StringBox("\"ParenthesizeBoxes\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Apply\"")), " "), 
               /\/(ButtonBox(StringBox("\"FoldList\"")), " "), 
               /\/(ButtonBox(StringBox("\"Part\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"ArcCos\"")), " "), 
               /\/(ButtonBox(StringBox("\"For\"")), " "), 
               /\/(ButtonBox(StringBox("\"Partition\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"ArcCosh\"")), " "), 
               /\/(ButtonBox(StringBox("\"FormatRules\"")), " "), 
               /\/(ButtonBox(StringBox("\"Pause\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"ArcCot\"")), " "), 
               /\/(ButtonBox(StringBox("\"FractionalPart\"")), " "), 
               /\/(ButtonBox(StringBox("\"Piecewise\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"ArcCsc\"")), " "), 
               /\/(ButtonBox(StringBox("\"FresnelC\"")), " "), 
               /\/(ButtonBox(StringBox("\"Plot\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"ArcSec\"")), " "), 
               /\/(ButtonBox(StringBox("\"FresnelS\"")), " "), 
               /\/(ButtonBox(StringBox("\"Plus\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"ArcSin\"")), " "), 
               /\/(ButtonBox(StringBox("\"FromCharacterCode\"")), " "), 
               /\/(ButtonBox(StringBox("\"PolyGamma\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"ArcSinh\"")), " "), 
               /\/(ButtonBox(StringBox("\"FrontEndTokenExecute\"")), " "), 
               /\/(ButtonBox(StringBox("\"Position\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"ArcTan\"")), " "), 
               /\/(ButtonBox(StringBox("\"Function\"")), " "), 
               /\/(ButtonBox(StringBox("\"PostDecrement\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"ArcTanh\"")), " "), 
               /\/(ButtonBox(StringBox("\"GCD\"")), " "), 
               /\/(ButtonBox(StringBox("\"PostIncrement\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Arg\"")), " "), 
               /\/(ButtonBox(StringBox("\"Gamma\"")), " "), 
               /\/(ButtonBox(StringBox("\"Power\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"ArithmeticGeometricMean\"")), " "), 
               /\/(ButtonBox(StringBox("\"Gather\"")), " "), 
               /\/(ButtonBox(StringBox("\"PowerMod\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Array\"")), " "), 
               /\/(ButtonBox(StringBox("\"Get\"")), " "), 
               /\/(ButtonBox(StringBox("\"Precision\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Assign\"")), " "), 
               /\/(ButtonBox(StringBox("\"Goto\"")), " "), 
               /\/(ButtonBox(StringBox("\"Prepend\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"AssignDelayed\"")), " "), 
               /\/(ButtonBox(StringBox("\"Greater\"")), " "), 
               /\/(ButtonBox(StringBox("\"Print\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Attributes\"")), " "), 
               /\/(ButtonBox(StringBox("\"GreaterEqual\"")), " "), 
               /\/(ButtonBox(StringBox("\"Product\"")), " ")}, {
               /\/(ButtonBox(StyleBox(StringBox("\"AutoLoad\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " "), /\/(ButtonBox(StringBox("\"HankelH1\"")), " "), 
               /\/(ButtonBox(StringBox("\"Protect\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"BaseForm\"")), " "), 
               /\/(ButtonBox(StringBox("\"HankelH2\"")), " "), 
               /\/(ButtonBox(StringBox("\"QRDecomposition\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Begin\"")), " "), 
               /\/(ButtonBox(StringBox("\"Hash\"")), " "), 
               /\/(ButtonBox(StringBox("\"Quantile\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"BeginPackage\"")), " "), 
               /\/(ButtonBox(StringBox("\"Head\"")), " "), 
               /\/(ButtonBox(StringBox("\"Quotient\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"BesselI\"")), " "), 
               /\/(ButtonBox(StringBox("\"HermiteH\"")), " "), 
               /\/(ButtonBox(StringBox("\"RandomInteger\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"BesselJ\"")), " "), 
               /\/(ButtonBox(StringBox("\"Hypergeometric0F1\"")), " "), 
               /\/(ButtonBox(StringBox("\"RandomReal\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"BesselK\"")), " "), 
               /\/(ButtonBox(StringBox("\"Hypergeometric0F1Regularized\"")), 
                " "), /\/(ButtonBox(StringBox("\"Range\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"BesselY\"")), " "), 
               /\/(ButtonBox(StringBox("\"Hypergeometric1F1\"")), " "), 
               /\/(ButtonBox(StringBox("\"Re\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"BinaryRead\"")), " "), 
               /\/(ButtonBox(StringBox("\"Hypergeometric1F1Regularized\"")), 
                " "), /\/(ButtonBox(StringBox("\"ReGather\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"BinaryReadList\"")), " "), 
               /\/(ButtonBox(StringBox("\"Hypergeometric2F1\"")), " "), 
               /\/(ButtonBox(StringBox("\"Read\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"BinaryWrite\"")), " "), 
               /\/(ButtonBox(StringBox("\"HypergeometricPFQ\"")), " "), 
               /\/(ButtonBox(StringBox("\"ReadList\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Binomial\"")), " "), 
               /\/(ButtonBox(StringBox("\"HypergeometricPFQRegularized\"")), 
                " "), /\/(ButtonBox(StringBox("\"Refresh\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"BitAnd\"")), " "), 
               /\/(ButtonBox(StringBox("\"Identical\"")), " "), 
               /\/(ButtonBox(StringBox("\"ReleaseHold\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"BitClear\"")), " "), 
               /\/(ButtonBox(StringBox("\"Identity\"")), " "), 
               /\/(ButtonBox(StringBox("\"Remove\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"BitGet\"")), " "), 
               /\/(ButtonBox(StringBox("\"IdentityMatrix\"")), " "), 
               /\/(ButtonBox(StringBox("\"RenameDirectory\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"BitLength\"")), " "), 
               /\/(ButtonBox(StringBox("\"If\"")), " "), 
               /\/(ButtonBox(StringBox("\"RenameFile\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"BitNot\"")), " "), 
               /\/(ButtonBox(StringBox("\"Im\"")), " "), 
               /\/(ButtonBox(StringBox("\"Replace\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"BitOr\"")), " "), 
               /\/(ButtonBox(StringBox("\"Increment\"")), " "), 
               /\/(ButtonBox(StringBox("\"ReplaceList\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"BitSet\"")), " "), 
               /\/(ButtonBox(StringBox("\"Inequation\"")), " "), 
               /\/(ButtonBox(StringBox("\"ReplacePart\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"BitShiftLeft\"")), " "), 
               /\/(ButtonBox(StringBox("\"Inner\"")), " "), 
               /\/(ButtonBox(StringBox("\"ReplaceRepeated\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"BitShiftRight\"")), " "), 
               /\/(ButtonBox(StringBox("\"IntegerPart\"")), " "), 
               /\/(ButtonBox(StringBox("\"Rescale\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"BitXor\"")), " "), 
               /\/(ButtonBox(StringBox("\"Interrupt\"")), " "), 
               /\/(ButtonBox(StringBox("\"ResetDirectory\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Block\"")), " "), 
               /\/(ButtonBox(StringBox("\"Intersection\"")), " "), 
               /\/(ButtonBox(StringBox("\"Rest\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Boole\"")), " "), 
               /\/(ButtonBox(StringBox("\"IsArray\"")), " "), 
               /\/(ButtonBox(StringBox("\"Return\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Break\"")), " "), 
               /\/(ButtonBox(StringBox("\"IsAtom\"")), " "), 
               /\/(ButtonBox(StringBox("\"Reverse\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Button\"")), " "), 
               /\/(ButtonBox(StringBox("\"IsComplex\"")), " "), 
               /\/(ButtonBox(StringBox("\"Riffle\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"ByteCount\"")), " "), 
               /\/(ButtonBox(StringBox("\"IsEven\"")), " "), 
               /\/(ButtonBox(StringBox("\"Round\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Cases\"")), " "), 
               /\/(ButtonBox(StringBox("\"IsExactNumber\"")), " "), 
               /\/(ButtonBox(StringBox("\"Scan\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Catch\"")), " "), 
               /\/(ButtonBox(StringBox("\"IsFloat\"")), " "), 
               /\/(ButtonBox(StringBox("\"Sec\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Ceiling\"")), " "), 
               /\/(ButtonBox(StringBox("\"IsFreeOf\"")), " "), 
               /\/(ButtonBox(StringBox("\"Sech\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Characters\"")), " "), 
               /\/(ButtonBox(StringBox("\"IsHeld\"")), " "), 
               /\/(ButtonBox(StringBox("\"SectionPrint\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"ChebyshevT\"")), " "), 
               /\/(ButtonBox(StringBox("\"IsImaginary\"")), " "), 
               /\/(ButtonBox(StyleBox(StringBox("\"SeedRandom\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " ")}, {/\/(ButtonBox(StringBox("\"ChebyshevU\"")), " "), 
               /\/(ButtonBox(StringBox("\"IsInexactNumber\"")), " "), 
               /\/(ButtonBox(StringBox("\"Select\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Chop\"")), " "), 
               /\/(ButtonBox(StringBox("\"IsInteger\"")), " "), 
               /\/(ButtonBox(StringBox("\"SelectedDocument\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Clear\"")), " "), 
               /\/(ButtonBox(StringBox("\"IsMachineNumber\"")), " "), 
               /\/(ButtonBox(StringBox("\"SetAttributes\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"ClearAll\"")), " "), 
               /\/(ButtonBox(StringBox("\"IsMatrix\"")), " "), 
               /\/(ButtonBox(StringBox("\"SetDirectory\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"ClearAttributes\"")), " "), 
               /\/(ButtonBox(StringBox("\"IsNegative\"")), " "), 
               /\/(ButtonBox(StringBox("\"SetOptions\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Clock\"")), " "), 
               /\/(ButtonBox(StringBox("\"IsNonNegative\"")), " "), 
               /\/(ButtonBox(StringBox("\"SetPrecision\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Close\"")), " "), 
               /\/(ButtonBox(StringBox("\"IsNonPositive\"")), " "), 
               /\/(ButtonBox(StringBox("\"SetSelectedDocument\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Complement\"")), " "), 
               /\/(ButtonBox(StringBox("\"IsNumber\"")), " "), 
               /\/(ButtonBox(StringBox("\"SetStreamPosition\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Complex\"")), " "), 
               /\/(ButtonBox(StringBox("\"IsNumeric\"")), " "), 
               /\/(ButtonBox(StringBox("\"Setting\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Compress\"")), " "), 
               /\/(ButtonBox(StringBox("\"IsOdd\"")), " "), 
               /\/(ButtonBox(StringBox("\"ShowDefinition\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"CompressStream\"")), " "), 
               /\/(ButtonBox(StringBox("\"IsOption\"")), " "), 
               /\/(ButtonBox(StringBox("\"Sign\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"ConditionalExpression\"")), " "), 
               /\/(ButtonBox(StringBox("\"IsOrdered\"")), " "), 
               /\/(ButtonBox(StringBox("\"Sin\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Conjugate\"")), " "), 
               /\/(ButtonBox(StringBox("\"IsPositive\"")), " "), 
               /\/(ButtonBox(StringBox("\"SinIntegral\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"ConstantArray\"")), " "), 
               /\/(ButtonBox(StringBox("\"IsPrime\"")), " "), 
               /\/(ButtonBox(StringBox("\"Sinc\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Continue\"")), " "), 
               /\/(ButtonBox(StringBox("\"IsQuotient\"")), " "), 
               /\/(ButtonBox(StringBox("\"SingleMatch\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"ControlActive\"")), " "), 
               /\/(ButtonBox(StringBox("\"IsRational\"")), " "), 
               /\/(ButtonBox(StringBox("\"Sinh\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"CopyDirectory\"")), " "), 
               /\/(ButtonBox(StringBox("\"IsReal\"")), " "), 
               /\/(ButtonBox(StringBox("\"SinhIntegral\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"CopyFile\"")), " "), 
               /\/(ButtonBox(StringBox("\"IsString\"")), " "), 
               /\/(ButtonBox(StringBox("\"Sort\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Cos\"")), " "), 
               /\/(ButtonBox(StringBox("\"IsSymbol\"")), " "), 
               /\/(ButtonBox(StringBox("\"SortBy\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"CosIntegral\"")), " "), 
               /\/(ButtonBox(StringBox("\"IsValidArgumentCount\"")), " "), 
               /\/(ButtonBox(StringBox("\"Split\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Cosh\"")), " "), 
               /\/(ButtonBox(StringBox("\"IsVector\"")), " "), 
               /\/(ButtonBox(StringBox("\"Sqrt\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"CoshIntegral\"")), " "), 
               /\/(ButtonBox(StringBox("\"JacobiSymbol\"")), " "), 
               /\/(ButtonBox(StringBox("\"Stack\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Cot\"")), " "), 
               /\/(ButtonBox(StringBox("\"Join\"")), " "), 
               /\/(ButtonBox(StringBox("\"StreamPosition\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Coth\"")), " "), 
               /\/(ButtonBox(StringBox("\"Keys\"")), " "), 
               /\/(ButtonBox(StringBox("\"StringCases\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Count\"")), " "), 
               /\/(ButtonBox(StringBox("\"KroneckerSymbol\"")), " "), 
               /\/(ButtonBox(StringBox("\"StringCount\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"CreateDirectory\"")), " "), 
               /\/(ButtonBox(StringBox("\"LCM\"")), " "), 
               /\/(ButtonBox(StringBox("\"StringDrop\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"CreateDocument\"")), " "), 
               /\/(ButtonBox(StringBox("\"LUDecomposition\"")), " "), 
               /\/(ButtonBox(StringBox("\"StringExpression\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Cross\"")), " "), 
               /\/(ButtonBox(StringBox("\"Label\"")), " "), 
               /\/(ButtonBox(StringBox("\"StringMatch\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Csc\"")), " "), 
               /\/(ButtonBox(StringBox("\"Last\"")), " "), 
               /\/(ButtonBox(StringBox("\"StringPosition\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Csch\"")), " "), 
               /\/(ButtonBox(StringBox("\"LeafCount\"")), " "), 
               /\/(ButtonBox(StringBox("\"StringReplace\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"CubeRoot\"")), " "), 
               /\/(ButtonBox(StringBox("\"Length\"")), " "), 
               /\/(ButtonBox(StringBox("\"StringSplit\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"CurrentValue\"")), " "), 
               /\/(ButtonBox(StringBox("\"LengthWhile\"")), " "), 
               /\/(ButtonBox(StringBox("\"StringTake\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"DateList\"")), " "), 
               /\/(ButtonBox(StringBox("\"Less\"")), " "), 
               /\/(ButtonBox(StringBox("\"StringToBoxes\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Decrement\"")), " "), 
               /\/(ButtonBox(StringBox("\"LessEqual\"")), " "), 
               /\/(ButtonBox(StringBox("\"StringToStream\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Default\"")), " "), 
               /\/(ButtonBox(StringBox("\"Level\"")), " "), 
               /\/(ButtonBox(StringBox("\"SubRules\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"DefaultRules\"")), " "), 
               /\/(ButtonBox(StringBox("\"LinearSolve\"")), " "), 
               /\/(ButtonBox(StringBox("\"Sum\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"DeleteDirectory\"")), " "), 
               /\/(ButtonBox(StringBox("\"LinearSolveFunction\"")), " "), 
               /\/(ButtonBox(StringBox("\"Surd\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"DeleteFile\"")), " "), 
               /\/(ButtonBox(StringBox("\"List\"")), " "), 
               /\/(ButtonBox(StringBox("\"Switch\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Depth\"")), " "), 
               /\/(ButtonBox(StringBox("\"ListConvolve\"")), " "), 
               /\/(ButtonBox(StringBox("\"SymbolName\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Det\"")), " "), 
               /\/(ButtonBox(StringBox("\"ListLinePlot\"")), " "), 
               /\/(ButtonBox(StringBox("\"Synchronize\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"DiagonalMatrix\"")), " "), 
               /\/(ButtonBox(StringBox("\"LoadLibrary\"")), " "), 
               /\/(ButtonBox(StringBox("\"SyntaxInformation\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Dialog\"")), " "), 
               /\/(ButtonBox(StringBox("\"Local\"")), " "), 
               /\/(ButtonBox(StringBox("\"SystemOpen\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Dimensions\"")), " "), 
               /\/(ButtonBox(StringBox("\"Log\"")), " "), 
               /\/(ButtonBox(StringBox("\"Table\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"DirectedInfinity\"")), " "), 
               /\/(ButtonBox(StringBox("\"LogGamma\"")), " "), 
               /\/(ButtonBox(StringBox("\"TagAssign\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"DirectoryName\"")), " "), 
               /\/(ButtonBox(StringBox("\"LogIntegral\"")), " "), 
               /\/(ButtonBox(StringBox("\"TagAssignDelayed\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"DivideBy\"")), " "), 
               /\/(ButtonBox(StringBox("\"Lookup\"")), " "), 
               /\/(ButtonBox(StringBox("\"TagUnassign\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Do\"")), " "), 
               /\/(ButtonBox(StringBox("\"MakeBoxes\"")), " "), 
               /\/(ButtonBox(StringBox("\"Take\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"DocumentApply\"")), " "), 
               /\/(ButtonBox(StringBox("\"MakeExpression\"")), " "), 
               /\/(ButtonBox(StringBox("\"TakeWhile\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"DocumentClose\"")), " "), 
               /\/(ButtonBox(StringBox("\"Map\"")), " "), 
               /\/(ButtonBox(StringBox("\"Tan\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"DocumentDelete\"")), " "), 
               /\/(ButtonBox(StringBox("\"MapIndexed\"")), " "), 
               /\/(ButtonBox(StringBox("\"Tanh\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"DocumentGet\"")), " "), 
               /\/(ButtonBox(StringBox("\"MapThread\"")), " "), 
               /\/(ButtonBox(StringBox("\"Thread\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"DocumentOpen\"")), " "), 
               /\/(ButtonBox(StringBox("\"Match\"")), " "), 
               /\/(ButtonBox(StringBox("\"Through\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"DocumentRead\"")), " "), 
               /\/(ButtonBox(StringBox("\"Max\"")), " "), 
               /\/(ButtonBox(StringBox("\"Throw\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"DocumentSave\"")), " "), 
               /\/(ButtonBox(StringBox("\"Mean\"")), " "), 
               /\/(ButtonBox(StringBox("\"TimeConstrained\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"DocumentWrite\"")), " "), 
               /\/(ButtonBox(StringBox("\"MemoryUsage\"")), " "), 
               /\/(ButtonBox(StringBox("\"Times\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Documents\"")), " "), 
               /\/(ButtonBox(StringBox("\"Message\"")), " "), 
               /\/(ButtonBox(StringBox("\"TimesBy\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Dot\"")), " "), 
               /\/(ButtonBox(StringBox("\"MessageName\"")), " "), 
               /\/(ButtonBox(StringBox("\"Timing\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"DownRules\"")), " "), 
               /\/(ButtonBox(StringBox("\"Messages\"")), " "), 
               /\/(ButtonBox(StringBox("\"ToBoxes\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Drop\"")), " "), 
               /\/(ButtonBox(StringBox("\"Min\"")), " "), 
               /\/(ButtonBox(StringBox("\"ToCharacterCode\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"DynamicLocal\"")), " "), 
               /\/(ButtonBox(StringBox("\"MinMax\"")), " "), 
               /\/(ButtonBox(StringBox("\"ToExpression\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Emit\"")), " "), 
               /\/(ButtonBox(StringBox("\"Mod\"")), " "), 
               /\/(ButtonBox(StringBox("\"ToFileName\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"End\"")), " "), 
               /\/(ButtonBox(StringBox("\"Most\"")), " "), 
               /\/(ButtonBox(StringBox("\"ToString\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"EndPackage\"")), " "), 
               /\/(ButtonBox(StringBox("\"N\"")), " "), 
               /\/(ButtonBox(StringBox("\"Total\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Environment\"")), " "), 
               /\/(ButtonBox(StringBox("\"NRules\"")), " "), 
               /\/(ButtonBox(StringBox("\"Transpose\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Equal\"")), " "), 
               /\/(ButtonBox(StringBox("\"Names\"")), " "), 
               /\/(ButtonBox(StringBox("\"Try\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Erf\"")), " "), 
               /\/(ButtonBox(StringBox("\"Namespace\"")), " "), 
               /\/(ButtonBox(StringBox("\"Unassign\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Erfc\"")), " "), 
               /\/(ButtonBox(StringBox("\"Nest\"")), " "), 
               /\/(ButtonBox(StringBox("\"Uncompress\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Erfi\"")), " "), 
               /\/(ButtonBox(StringBox("\"NestList\"")), " "), 
               /\/(ButtonBox(StringBox("\"UncompressStream\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Evaluate\"")), " "), 
               /\/(ButtonBox(StringBox("\"NestWhile\"")), " "), 
               /\/(ButtonBox(StringBox("\"Underflow\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"EvaluateDelayed\"")), " "), 
               /\/(ButtonBox(StringBox("\"NestWhileList\"")), " "), 
               /\/(ButtonBox(StringBox("\"Unequal\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"EvaluationBox\"")), " "), 
               /\/(ButtonBox(StringBox("\"NewTask\"")), " "), 
               /\/(ButtonBox(StringBox("\"Unidentical\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"EvaluationDocument\"")), " "), 
               /\/(ButtonBox(StringBox("\"NextPrime\"")), " "), 
               /\/(ButtonBox(StringBox("\"Union\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"EvaluationSequence\"")), " "), 
               /\/(ButtonBox(StringBox("\"Norm\"")), " "), 
               /\/(ButtonBox(StringBox("\"UnitVector\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Exp\"")), " "), 
               /\/(ButtonBox(StringBox("\"Not\"")), " "), 
               /\/(ButtonBox(StringBox("\"Unprotect\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"ExpIntegralEi\"")), " "), 
               /\/(ButtonBox(StringBox("\"Nothing\"")), " "), 
               /\/(ButtonBox(StringBox("\"UpRules\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Expand\"")), " "), 
               /\/(ButtonBox(StringBox("\"Off\"")), " "), 
               /\/(ButtonBox(StringBox("\"Update\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"ExpandAll\"")), " "), 
               /\/(ButtonBox(StringBox("\"On\"")), " "), 
               /\/(ButtonBox(StringBox("\"Wait\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"ExtendedGCD\"")), " "), 
               /\/(ButtonBox(StringBox("\"OpenAppend\"")), " "), 
               /\/(ButtonBox(StringBox("\"Which\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Extract\"")), " "), 
               /\/(ButtonBox(StringBox("\"OpenRead\"")), " "), 
               /\/(ButtonBox(StringBox("\"While\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Factorial\"")), " "), 
               /\/(ButtonBox(StringBox("\"OpenWrite\"")), " "), 
               /\/(ButtonBox(StringBox("\"With\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Factorial2\"")), " "), 
               /\/(ButtonBox(StringBox("\"Operate\"")), " "), 
               /\/(ButtonBox(StringBox("\"Write\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"FileByteCount\"")), " "), 
               /\/(ButtonBox(StringBox("\"OptionValue\"")), " "), 
               /\/(ButtonBox(StringBox("\"WriteString\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"FileInformation\"")), " "), 
               /\/(ButtonBox(StringBox("\"Options\"")), " "), 
               /\/(ButtonBox(StringBox("\"Xor\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"FileNameSplit\"")), " "), 
               /\/(ButtonBox(StringBox("\"OptionsPattern\"")), " "), 
               /\/(ButtonBox(StringBox("\"Zeta\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"FileNames\"")), " "), 
               /\/(ButtonBox(StringBox("\"Or\"")), " "), StringBox("\"\"")}, {
               /\/(ButtonBox(StringBox("\"FileType\"")), " "), 
               /\/(ButtonBox(StringBox("\"Ordering\"")), " "), 
               StringBox("\"\"")}}), "Grid"), 
           ButtonBoxOptions -> {ButtonFrame -> "Frameless", 
             ButtonFunction -> (With({FE`Private`s:= ToExpression(First(#1))}, 
                ShowDefinition(FE`Private`s)) &)}, GridBoxColumnSpacing -> 2, 
           GridBoxRowSpacing -> 0.20000000298023224`, StripOnInput -> False)), 
         "PrintUsage", SectionGenerated -> True)}, All)}, All), 
    SectionGroup({Section("Unknown \[Dash] not yet loaded", "Subsection"), 
      SectionGroup({
        Section(
         BoxData({
           {{"allUnknown", ".", "StringReplace", "(", {
              {"StartOfString", "++", StringBox("\"System`\"")}, "\[Rule]", 
              StringBox("\"\"")}, ")"}, ".", "Map", "(", "markNonDocumented", 
            ")"}, ".", "printInfoGrid", "(", "3", ")"}), "Input", 
         SectionLabel -> "in [15]:"), 
        Section(
         BoxData({
           TemplateBox({
             TemplateBox({
               MessageName -> HoldForm(Developer`FromPackedArray::"punpack"), 
               Message -> StringForm(
                 "Unpacking array with dimensions `2` in call to `1`.", Part, {
                  2}), Stack -> {
                 {"Head" -> SectionPrint, 
                  "Location" -> Language`SourceLocation(
                    FrontEndObject(10801762494786359001, 10539), 30 .. 328)}, {
                  "Head" -> Style, "Location" -> 
                   Language`SourceLocation(
                    FrontEndObject(10801762494786359001, 10539), 56 .. 327)}, {
                  "Head" -> Grid, "Location" -> 
                   Language`SourceLocation(
                    FrontEndObject(10801762494786359001, 10525), 25 .. 91)}, {
                  "Head" -> Transpose, 
                  "Location" -> Language`SourceLocation(
                    FrontEndObject(10801762494786359001, 10525), 30 .. 90)}, {
                  "Head" -> With}, {"Head" -> Catch, 
                  "Location" -> Language`SourceLocation(
                    "C:\\Users\\Peter\\Documents\\Programmieren\\pmath\\librar\
                    y\\scripts\\auto\\core\\linalg.pmath", {
                      11, 55} .. {11, 100})}, {
                  "Head" -> System`linalg`transposeHelper, 
                  "Location" -> Language`SourceLocation(
                    "C:\\Users\\Peter\\Documents\\Programmieren\\pmath\\librar\
                    y\\scripts\\auto\\core\\linalg.pmath", {
                      11, 61} .. {11, 90})}, {"Head" -> EvaluationSequence, 
                  "Location" -> Language`SourceLocation(
                    "C:\\Users\\Peter\\Documents\\Programmieren\\pmath\\librar\
                    y\\scripts\\auto\\core\\linalg.pmath", {
                      14, 97} .. {46, 15})}, {
                  "Head" -> Do, "Location" -> Language`SourceLocation(
                    "C:\\Users\\Peter\\Documents\\Programmieren\\pmath\\librar\
                    y\\scripts\\auto\\core\\linalg.pmath", {
                      39, 38} .. {45, 16})}, {"Head" -> EvaluationSequence, 
                  "Location" -> Language`SourceLocation(
                    "C:\\Users\\Peter\\Documents\\Programmieren\\pmath\\librar\
                    y\\scripts\\auto\\core\\linalg.pmath", {
                      40, 4} .. {44, 50})}, {
                  "Head" -> Do, "Location" -> Language`SourceLocation(
                    "C:\\Users\\Peter\\Documents\\Programmieren\\pmath\\librar\
                    y\\scripts\\auto\\core\\linalg.pmath", {
                      41, 2} .. {43, 22})}, {"Head" -> Part, 
                  "Location" -> Language`SourceLocation(
                    "C:\\Users\\Peter\\Documents\\Programmieren\\pmath\\librar\
                    y\\scripts\\auto\\core\\linalg.pmath", {
                      41, 5} .. {42, 26})}, {"Head" -> Message}, {
                  "Head" -> SectionPrint}}}, "MessageMenuButton"), {
              "Developer`FromPackedArray", "::", StringBox("\"punpack\"")}}, 
            "RowDefault"), ":", " ", InterpretationBox(
            StringBox("\"Unpacking array with dimensions ", {"{", "2", "}"}, 
             " in call to ", "Part", ".\""), 
            StringForm("Unpacking array with dimensions `2` in call to `1`.", 
             Part, {2}), Editable -> False)}), "Message", 
         SectionGenerated -> True), 
        Section(
         BoxData(
          StyleBox(
           TagBox(GridBox({{/\/(ButtonBox(StringBox("\"AbsArg\"")), " "), 
               /\/(ButtonBox(StringBox("\"OpenerView\"")), " "), 
               /\/(ButtonBox(StringBox("\"SpanFromAbove\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"AffineTransform\"")), " "), 
               /\/(ButtonBox(StringBox("\"ReIm\"")), " "), 
               /\/(ButtonBox(StringBox("\"SpanFromBoth\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"BernoulliB\"")), " "), 
               /\/(ButtonBox(StringBox("\"ReflectionMatrix\"")), " "), 
               /\/(ButtonBox(StringBox("\"SpanFromLeft\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Clip\"")), " "), 
               /\/(ButtonBox(StringBox("\"ReflectionTransform\"")), " "), 
               /\/(ButtonBox(StringBox("\"TakeDrop\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Echo\"")), " "), 
               /\/(ButtonBox(StringBox("\"RotationMatrix\"")), " "), 
               /\/(ButtonBox(StringBox("\"TransformationFunction\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"EchoFunction\"")), " "), 
               /\/(ButtonBox(StringBox("\"RotationTransform\"")), " "), 
               /\/(ButtonBox(StringBox("\"TransformationMatrix\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Highlighted\"")), " "), 
               /\/(ButtonBox(StringBox("\"ScalingMatrix\"")), " "), 
               /\/(ButtonBox(StringBox("\"TranslationTransform\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Interval\"")), " "), 
               /\/(ButtonBox(StringBox("\"ScalingTransform\"")), " "), 
               /\/(ButtonBox(StringBox("\"UpTo\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"LinearFractionalTransform\"")), 
                " "), /\/(ButtonBox(StringBox("\"ShearingMatrix\"")), " "), 
               StringBox("\"\"")}, {
               /\/(ButtonBox(StringBox("\"Normalize\"")), " "), 
               /\/(ButtonBox(StringBox("\"ShearingTransform\"")), " "), 
               StringBox("\"\"")}}), "Grid"), 
           ButtonBoxOptions -> {ButtonFrame -> "Frameless", 
             ButtonFunction -> (With({FE`Private`s:= ToExpression(First(#1))}, 
                ShowDefinition(FE`Private`s)) &)}, GridBoxColumnSpacing -> 2, 
           GridBoxRowSpacing -> 0.20000000298023224`, StripOnInput -> False)), 
         "PrintUsage", SectionGenerated -> True)}, All)}, All), 
    SectionGroup({Section("Variables", "Subsection"), 
      SectionGroup({
        Section(
         BoxData({
           {{"allValues", ".", "StringReplace", "(", {
              {"StartOfString", "++", StringBox("\"System`\"")}, "\[Rule]", 
              StringBox("\"\"")}, ")"}, ".", "Map", "(", "markNonDocumented", 
            ")"}, ".", "printInfoGrid", "(", "3", ")"}), "Input", 
         SectionLabel -> "in [16]:"), 
        Section(
         BoxData({
           TemplateBox({
             TemplateBox({
               MessageName -> HoldForm(Developer`FromPackedArray::"punpack"), 
               Message -> StringForm(
                 "Unpacking array with dimensions `2` in call to `1`.", Part, {
                  2}), Stack -> {
                 {"Head" -> SectionPrint, 
                  "Location" -> Language`SourceLocation(
                    FrontEndObject(10801762494786359001, 10539), 30 .. 328)}, {
                  "Head" -> Style, "Location" -> 
                   Language`SourceLocation(
                    FrontEndObject(10801762494786359001, 10539), 56 .. 327)}, {
                  "Head" -> Grid, "Location" -> 
                   Language`SourceLocation(
                    FrontEndObject(10801762494786359001, 10525), 25 .. 91)}, {
                  "Head" -> Transpose, 
                  "Location" -> Language`SourceLocation(
                    FrontEndObject(10801762494786359001, 10525), 30 .. 90)}, {
                  "Head" -> With}, {"Head" -> Catch, 
                  "Location" -> Language`SourceLocation(
                    "C:\\Users\\Peter\\Documents\\Programmieren\\pmath\\librar\
                    y\\scripts\\auto\\core\\linalg.pmath", {
                      11, 55} .. {11, 100})}, {
                  "Head" -> System`linalg`transposeHelper, 
                  "Location" -> Language`SourceLocation(
                    "C:\\Users\\Peter\\Documents\\Programmieren\\pmath\\librar\
                    y\\scripts\\auto\\core\\linalg.pmath", {
                      11, 61} .. {11, 90})}, {"Head" -> EvaluationSequence, 
                  "Location" -> Language`SourceLocation(
                    "C:\\Users\\Peter\\Documents\\Programmieren\\pmath\\librar\
                    y\\scripts\\auto\\core\\linalg.pmath", {
                      14, 97} .. {46, 15})}, {
                  "Head" -> Do, "Location" -> Language`SourceLocation(
                    "C:\\Users\\Peter\\Documents\\Programmieren\\pmath\\librar\
                    y\\scripts\\auto\\core\\linalg.pmath", {
                      39, 38} .. {45, 16})}, {"Head" -> EvaluationSequence, 
                  "Location" -> Language`SourceLocation(
                    "C:\\Users\\Peter\\Documents\\Programmieren\\pmath\\librar\
                    y\\scripts\\auto\\core\\linalg.pmath", {
                      40, 4} .. {44, 50})}, {
                  "Head" -> Do, "Location" -> Language`SourceLocation(
                    "C:\\Users\\Peter\\Documents\\Programmieren\\pmath\\librar\
                    y\\scripts\\auto\\core\\linalg.pmath", {
                      41, 2} .. {43, 22})}, {"Head" -> Part, 
                  "Location" -> Language`SourceLocation(
                    "C:\\Users\\Peter\\Documents\\Programmieren\\pmath\\librar\
                    y\\scripts\\auto\\core\\linalg.pmath", {
                      41, 5} .. {42, 26})}, {"Head" -> Message}, {
                  "Head" -> SectionPrint}}}, "MessageMenuButton"), {
              "Developer`FromPackedArray", "::", StringBox("\"punpack\"")}}, 
            "RowDefault"), ":", " ", InterpretationBox(
            StringBox("\"Unpacking array with dimensions ", {"{", "2", "}"}, 
             " in call to ", "Part", ".\""), 
            StringForm("Unpacking array with dimensions `2` in call to `1`.", 
             Part, {2}), Editable -> False)}), "Message", 
         SectionGenerated -> True), 
        Section(
         BoxData(
          StyleBox(
           TagBox(
            GridBox({
              {/\/(ButtonBox(StringBox("\"$ApplicationFileName\"")), " "), 
               /\/(ButtonBox(StringBox("\"$NamespacePath\"")), " "), 
               /\/(ButtonBox(StringBox("\"Green\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"$BaseDirectory\"")), " "), 
               /\/(ButtonBox(StringBox("\"$NewMessage\"")), " "), 
               /\/(ButtonBox(StringBox("\"I\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"$ByteOrdering\"")), " "), 
               /\/(ButtonBox(StringBox("\"$Packages\"")), " "), 
               /\/(ButtonBox(StringBox("\"Infinity\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"$CharacterEncoding\"")), " "), 
               /\/(ButtonBox(StringBox("\"$PageWidth\"")), " "), 
               /\/(ButtonBox(StringBox("\"LightBlue\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"$CommandLine\"")), " "), 
               /\/(ButtonBox(StringBox("\"$Path\"")), " "), 
               /\/(ButtonBox(StringBox("\"LightBrown\"")), " ")}, {
               /\/(ButtonBox(StyleBox(StringBox("\"$ControlActiveSetting\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " "), /\/(ButtonBox(StringBox("\"$PathListSeparator\"")), 
                " "), /\/(ButtonBox(StringBox("\"LightCyan\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"$CurrentDirectory\"")), " "), 
               /\/(ButtonBox(StringBox("\"$PathnameSeparator\"")), " "), 
               /\/(ButtonBox(StringBox("\"LightGray\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"$DialogLevel\"")), " "), 
               /\/(ButtonBox(StringBox("\"$ProcessID\"")), " "), 
               /\/(ButtonBox(StringBox("\"LightGreen\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"$DirectoryStack\"")), " "), 
               /\/(ButtonBox(StringBox("\"$ProcessorCount\"")), " "), 
               /\/(ButtonBox(StringBox("\"LightMagenta\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"$FrontEndSession\"")), " "), 
               /\/(ButtonBox(StringBox("\"$ProcessorType\"")), " "), 
               /\/(ButtonBox(StringBox("\"LightOrange\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"$HistoryLength\"")), " "), 
               /\/(ButtonBox(StringBox("\"$SessionID\"")), " "), 
               /\/(ButtonBox(StringBox("\"LightPink\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"$HyperlinksSupported\"")), " "), 
               /\/(ButtonBox(StringBox("\"$SystemCharacterEncoding\"")), " "), 
               /\/(ButtonBox(StringBox("\"LightPurple\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"$InitialDirectory\"")), " "), 
               /\/(ButtonBox(StringBox("\"$SystemID\"")), " "), 
               /\/(ButtonBox(StringBox("\"LightRed\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"$Input\"")), " "), 
               /\/(ButtonBox(StringBox("\"$ThreadID\"")), " "), 
               /\/(ButtonBox(StringBox("\"LightYellow\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"$Line\"")), " "), 
               /\/(ButtonBox(StringBox("\"$TimeZone\"")), " "), 
               /\/(ButtonBox(StringBox("\"Magenta\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"$MachineEpsilon\"")), " "), 
               /\/(ButtonBox(StringBox("\"$VersionList\"")), " "), 
               /\/(ButtonBox(StringBox("\"Orange\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"$MachineID\"")), " "), 
               /\/(ButtonBox(StringBox("\"$VersionNumber\"")), " "), 
               /\/(ButtonBox(StringBox("\"Pink\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"$MachinePrecision\"")), " "), 
               /\/(ButtonBox(StringBox("\"Black\"")), " "), 
               /\/(ButtonBox(StringBox("\"Purple\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"$MaxExtraPrecision\"")), " "), 
               /\/(ButtonBox(StringBox("\"Blue\"")), " "), 
               /\/(ButtonBox(StringBox("\"Red\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"$MaxMachineNumber\"")), " "), 
               /\/(ButtonBox(StringBox("\"Brown\"")), " "), 
               /\/(ButtonBox(StringBox("\"White\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"$MessageGroups\"")), " "), 
               /\/(ButtonBox(StringBox("\"ComplexInfinity\"")), " "), 
               /\/(ButtonBox(StringBox("\"Yellow\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"$MinMachineNumber\"")), " "), 
               /\/(ButtonBox(StringBox("\"Cyan\"")), " "), StringBox("\"\"")}, 
              {/\/(ButtonBox(StringBox("\"$Namespace\"")), " "), 
               /\/(ButtonBox(StringBox("\"Gray\"")), " "), 
               StringBox("\"\"")}}), "Grid"), 
           ButtonBoxOptions -> {ButtonFrame -> "Frameless", 
             ButtonFunction -> (With({FE`Private`s:= ToExpression(First(#1))}, 
                ShowDefinition(FE`Private`s)) &)}, GridBoxColumnSpacing -> 2, 
           GridBoxRowSpacing -> 0.20000000298023224`, StripOnInput -> False)), 
         "PrintUsage", SectionGenerated -> True)}, All)}, All), 
    SectionGroup({Section("Symbolic constants", "Subsection"), 
      SectionGroup({
        Section(
         BoxData({
           {{"allRest", ".", "StringReplace", "(", {
              {"StartOfString", "++", StringBox("\"System`\"")}, "\[Rule]", 
              StringBox("\"\"")}, ")"}, ".", "Map", "(", "markNonDocumented", 
            ")"}, ".", "printInfoGrid", "(", "3", ")"}), "Input", 
         SectionLabel -> "in [17]:"), 
        Section(
         BoxData({
           TemplateBox({
             TemplateBox({
               MessageName -> HoldForm(Developer`FromPackedArray::"punpack"), 
               Message -> StringForm(
                 "Unpacking array with dimensions `2` in call to `1`.", Part, {
                  2}), Stack -> {
                 {"Head" -> SectionPrint, 
                  "Location" -> Language`SourceLocation(
                    FrontEndObject(10801762494786359001, 10539), 30 .. 328)}, {
                  "Head" -> Style, "Location" -> 
                   Language`SourceLocation(
                    FrontEndObject(10801762494786359001, 10539), 56 .. 327)}, {
                  "Head" -> Grid, "Location" -> 
                   Language`SourceLocation(
                    FrontEndObject(10801762494786359001, 10525), 25 .. 91)}, {
                  "Head" -> Transpose, 
                  "Location" -> Language`SourceLocation(
                    FrontEndObject(10801762494786359001, 10525), 30 .. 90)}, {
                  "Head" -> With}, {"Head" -> Catch, 
                  "Location" -> Language`SourceLocation(
                    "C:\\Users\\Peter\\Documents\\Programmieren\\pmath\\librar\
                    y\\scripts\\auto\\core\\linalg.pmath", {
                      11, 55} .. {11, 100})}, {
                  "Head" -> System`linalg`transposeHelper, 
                  "Location" -> Language`SourceLocation(
                    "C:\\Users\\Peter\\Documents\\Programmieren\\pmath\\librar\
                    y\\scripts\\auto\\core\\linalg.pmath", {
                      11, 61} .. {11, 90})}, {"Head" -> EvaluationSequence, 
                  "Location" -> Language`SourceLocation(
                    "C:\\Users\\Peter\\Documents\\Programmieren\\pmath\\librar\
                    y\\scripts\\auto\\core\\linalg.pmath", {
                      14, 97} .. {46, 15})}, {
                  "Head" -> Do, "Location" -> Language`SourceLocation(
                    "C:\\Users\\Peter\\Documents\\Programmieren\\pmath\\librar\
                    y\\scripts\\auto\\core\\linalg.pmath", {
                      39, 38} .. {45, 16})}, {"Head" -> EvaluationSequence, 
                  "Location" -> Language`SourceLocation(
                    "C:\\Users\\Peter\\Documents\\Programmieren\\pmath\\librar\
                    y\\scripts\\auto\\core\\linalg.pmath", {
                      40, 4} .. {44, 50})}, {
                  "Head" -> Do, "Location" -> Language`SourceLocation(
                    "C:\\Users\\Peter\\Documents\\Programmieren\\pmath\\librar\
                    y\\scripts\\auto\\core\\linalg.pmath", {
                      41, 2} .. {43, 22})}, {"Head" -> Part, 
                  "Location" -> Language`SourceLocation(
                    "C:\\Users\\Peter\\Documents\\Programmieren\\pmath\\librar\
                    y\\scripts\\auto\\core\\linalg.pmath", {
                      41, 5} .. {42, 26})}, {"Head" -> Message}, {
                  "Head" -> SectionPrint}}}, "MessageMenuButton"), {
              "Developer`FromPackedArray", "::", StringBox("\"punpack\"")}}, 
            "RowDefault"), ":", " ", InterpretationBox(
            StringBox("\"Unpacking array with dimensions ", {"{", "2", "}"}, 
             " in call to ", "Part", ".\""), 
            StringForm("Unpacking array with dimensions `2` in call to `1`.", 
             Part, {2}), Editable -> False)}), "Message", 
         SectionGenerated -> True), 
        Section(
         BoxData(
          StyleBox(
           TagBox(GridBox({{/\/(ButtonBox(StringBox("\"$Aborted\"")), " "), 
               /\/(ButtonBox(StringBox("\"GreaterGreater\"")), " "), 
               /\/(ButtonBox(StringBox("\"ProgressIndicator\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"$Canceled\"")), " "), 
               /\/(ButtonBox(StringBox("\"GreaterLess\"")), " "), 
               /\/(ButtonBox(StringBox("\"ProgressIndicatorBox\"")), " ")}, {
               /\/(ButtonBox(StyleBox(StringBox("\"$CreationData\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " "), /\/(ButtonBox(StringBox("\"GreaterTilde\"")), " "), 
               /\/(ButtonBox(StringBox("\"Protected\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"$Failed\"")), " "), 
               /\/(ButtonBox(StringBox("\"Grid\"")), " "), 
               /\/(ButtonBox(StringBox("\"PureArgument\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"$MessagePrePrint\"")), " "), 
               /\/(ButtonBox(StringBox("\"GridBox\"")), " "), 
               /\/(ButtonBox(StringBox("\"Quit\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"$NewSymbol\"")), " "), 
               /\/(ButtonBox(StringBox("\"GridBoxColumnSpacing\"")), " "), 
               /\/(ButtonBox(StringBox("\"RGBColor\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"All\"")), " "), 
               /\/(ButtonBox(StringBox("\"GridBoxRowSpacing\"")), " "), 
               /\/(ButtonBox(StringBox("\"RadicalBox\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Alternatives\"")), " "), 
               /\/(ButtonBox(StringBox("\"Heads\"")), " "), 
               /\/(ButtonBox(StringBox("\"RadioButton\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Antialiasing\"")), " "), 
               /\/(ButtonBox(StringBox("\"Hold\"")), " "), 
               /\/(ButtonBox(StringBox("\"RadioButtonBar\"")), " ")}, {
               /\/(ButtonBox(StyleBox(StringBox("\"Appearance\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " "), /\/(ButtonBox(StringBox("\"HoldAll\"")), " "), 
               /\/(ButtonBox(StringBox("\"RadioButtonBox\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"ArcCoth\"")), " "), 
               /\/(ButtonBox(StringBox("\"HoldAllComplete\"")), " "), 
               /\/(ButtonBox(StringBox("\"Rational\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"ArcCsch\"")), " "), 
               /\/(ButtonBox(StringBox("\"HoldComplete\"")), " "), 
               /\/(ButtonBox(StringBox("\"RawBoxes\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"ArcSech\"")), " "), 
               /\/(ButtonBox(StringBox("\"HoldFirst\"")), " "), 
               /\/(ButtonBox(StringBox("\"ReadProtected\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"AspectRatio\"")), " "), 
               /\/(ButtonBox(StringBox("\"HoldForm\"")), " "), 
               /\/(ButtonBox(StringBox("\"Real\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Associative\"")), " "), 
               /\/(ButtonBox(StringBox("\"HoldPattern\"")), " "), 
               /\/(ButtonBox(StringBox("\"RecordLists\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"AutoDelete\"")), " "), 
               /\/(ButtonBox(StringBox("\"HoldRest\"")), " "), 
               /\/(ButtonBox(StringBox("\"RegularExpression\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"AutoNumberFormating\"")), " "), 
               /\/(ButtonBox(StringBox("\"Hue\"")), " "), 
               /\/(ButtonBox(StyleBox(StringBox("\"RemovalConditions\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " ")}, {/\/(ButtonBox(StringBox("\"AutoSpacing\"")), " "), 
               /\/(ButtonBox(StringBox("\"HumpDownHump\"")), " "), 
               /\/(ButtonBox(StringBox("\"Repeated\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Automatic\"")), " "), 
               /\/(ButtonBox(StringBox("\"HumpEqual\"")), " "), 
               /\/(ButtonBox(StringBox("\"ReturnCreatesNewSection\"")), " ")}, 
              {/\/(ButtonBox(StringBox("\"Axes\"")), " "), 
               /\/(ButtonBox(StringBox("\"Hypergeometric2F1Regularized\"")), 
                " "), /\/(ButtonBox(StringBox("\"ReverseElement\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"AxesOrigin\"")), " "), 
               /\/(ButtonBox(StyleBox(StringBox("\"HypergeometricU\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " "), /\/(ButtonBox(StringBox("\"Right\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Axis\"")), " "), 
               /\/(ButtonBox(StringBox("\"IgnoreCase\"")), " "), 
               /\/(ButtonBox(StringBox("\"RightTriangle\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Background\"")), " "), 
               /\/(ButtonBox(StringBox("\"ImageSize\"")), " "), 
               /\/(ButtonBox(StringBox("\"RightTriangleEqual\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"BaseStyle\"")), " "), 
               /\/(ButtonBox(StringBox("\"ImageSizeAction\"")), " "), 
               /\/(ButtonBox(StringBox("\"Rotate\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Baseline\"")), " "), 
               /\/(ButtonBox(StringBox("\"Inherited\"")), " "), 
               /\/(ButtonBox(StringBox("\"RotationBox\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"BaselinePosition\"")), " "), 
               /\/(ButtonBox(StyleBox(StringBox("\"Initialization\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " "), /\/(ButtonBox(StringBox("\"Row\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"BinaryFormat\"")), " "), 
               /\/(ButtonBox(StringBox("\"InputAliases\"")), " "), 
               /\/(ButtonBox(StringBox("\"RowSpacing\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Bold\"")), " "), 
               /\/(ButtonBox(StringBox("\"InputAutoReplacements\"")), " "), 
               /\/(ButtonBox(StringBox("\"Rule\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"BorderRadius\"")), " "), 
               /\/(ButtonBox(StringBox("\"InputField\"")), " "), 
               /\/(ButtonBox(StringBox("\"RuleDelayed\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Bottom\"")), " "), 
               /\/(ButtonBox(StringBox("\"InputFieldBox\"")), " "), 
               /\/(ButtonBox(StringBox("\"SameTest\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"BoxData\"")), " "), 
               /\/(ButtonBox(StringBox("\"InputFieldBoxOptions\"")), " "), 
               /\/(ButtonBox(StringBox("\"Saveable\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"BoxRotation\"")), " "), 
               /\/(ButtonBox(StringBox("\"InputForm\"")), " "), 
               /\/(ButtonBox(StyleBox(StringBox("\"Scaled\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " ")}, {/\/(ButtonBox(StringBox("\"BoxTransformation\"")), 
                " "), /\/(ButtonBox(StyleBox(StringBox("\"InputStream\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " "), /\/(ButtonBox(StringBox("\"ScriptLevel\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"BracketingBar\"")), " "), 
               /\/(ButtonBox(StringBox("\"Integer\"")), " "), 
               /\/(ButtonBox(StringBox("\"ScriptSizeMultipliers\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"ButtonBox\"")), " "), 
               /\/(ButtonBox(StringBox("\"Interpretation\"")), " "), 
               /\/(ButtonBox(StringBox("\"Section\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"ButtonBoxOptions\"")), " "), 
               /\/(ButtonBox(StringBox("\"InterpretationBox\"")), " "), 
               /\/(ButtonBox(StringBox("\"SectionDingbat\"")), " ")}, {
               /\/(ButtonBox(StyleBox(StringBox("\"ButtonContents\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " "), /\/(ButtonBox(StringBox("\"InterpretationFunction\"")), 
                " "), /\/(ButtonBox(StringBox("\"SectionEditDuplicate\"")), 
                " ")}, {
               /\/(ButtonBox(StyleBox(StringBox("\"ButtonData\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " "), 
               /\/(ButtonBox(StyleBox(StringBox("\"InverseWeierstrassP\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " "), 
               /\/(ButtonBox(StringBox("\"SectionEditDuplicateMakesCopy\"")), 
                " ")}, {/\/(ButtonBox(StringBox("\"ButtonFrame\"")), " "), 
               /\/(ButtonBox(StringBox("\"Italic\"")), " "), 
               /\/(ButtonBox(StringBox("\"SectionEvaluationFunction\"")), 
                " ")}, {/\/(ButtonBox(StringBox("\"ButtonFunction\"")), " "), 
               /\/(ButtonBox(StyleBox(StringBox("\"JacobiP\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " "), /\/(ButtonBox(StringBox("\"SectionFrame\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"ButtonSource\"")), " "), 
               /\/(ButtonBox(StringBox("\"Key\"")), " "), 
               /\/(ButtonBox(StringBox("\"SectionFrameColor\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"ByteOrdering\"")), " "), 
               /\/(ButtonBox(StringBox("\"KeyValuePattern\"")), " "), 
               /\/(ButtonBox(
                 StyleBox(StringBox("\"SectionFrameLabelMargins\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " ")}, {/\/(ButtonBox(StringBox("\"Center\"")), " "), 
               /\/(ButtonBox(StyleBox(StringBox("\"LaguerreL\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " "), /\/(ButtonBox(StringBox("\"SectionFrameMargins\"")), 
                " ")}, {/\/(ButtonBox(StringBox("\"Character\"")), " "), 
               /\/(ButtonBox(StringBox("\"LanguageCategory\"")), " "), 
               /\/(ButtonBox(StringBox("\"SectionGenerated\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"CharacterEncoding\"")), " "), 
               /\/(ButtonBox(StringBox("\"Left\"")), " "), 
               /\/(ButtonBox(StringBox("\"SectionGroup\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Checkbox\"")), " "), 
               /\/(ButtonBox(StringBox("\"LeftArrow\"")), " "), 
               /\/(ButtonBox(StringBox("\"SectionGroupPrecedence\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"CheckboxBox\"")), " "), 
               /\/(ButtonBox(StringBox("\"LeftRightArrow\"")), " "), 
               /\/(ButtonBox(StringBox("\"SectionLabel\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"CirclePlus\"")), " "), 
               /\/(ButtonBox(StringBox("\"LeftTriangle\"")), " "), 
               /\/(ButtonBox(StringBox("\"SectionLabelAutoDelete\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"CircleTimes\"")), " "), 
               /\/(ButtonBox(StringBox("\"LeftTriangleEqual\"")), " "), 
               /\/(ButtonBox(StringBox("\"SectionMargins\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Colon\"")), " "), 
               /\/(ButtonBox(StyleBox(StringBox("\"LegendreP\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " "), 
               /\/(ButtonBox(StyleBox(StringBox("\"SecurityException\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " ")}, {/\/(ButtonBox(StringBox("\"ColonForm\"")), " "), 
               /\/(ButtonBox(StyleBox(StringBox("\"LegendreQ\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " "), /\/(ButtonBox(StringBox("\"Selectable\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Column\"")), " "), 
               /\/(ButtonBox(StringBox("\"LessEqualGreater\"")), " "), 
               /\/(ButtonBox(StringBox("\"Sequence\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"ColumnSpacing\"")), " "), 
               /\/(ButtonBox(StringBox("\"LessFullEqual\"")), " "), 
               /\/(ButtonBox(StringBox("\"SequenceHold\"")), " ")}, {
               /\/(ButtonBox(StyleBox(StringBox("\"ComplexStringBox\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " "), /\/(ButtonBox(StringBox("\"LessGreater\"")), " "), 
               /\/(ButtonBox(StringBox("\"Setter\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"CompressedData\"")), " "), 
               /\/(ButtonBox(StringBox("\"LessLess\"")), " "), 
               /\/(ButtonBox(StringBox("\"SetterBar\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Condition\"")), " "), 
               /\/(ButtonBox(StringBox("\"LessTilde\"")), " "), 
               /\/(ButtonBox(StringBox("\"SetterBox\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Congruent\"")), " "), 
               /\/(ButtonBox(StringBox("\"LetterCharacter\"")), " "), 
               /\/(ButtonBox(StyleBox(StringBox("\"SetterBoxOptions\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " ")}, {/\/(ButtonBox(StringBox("\"ContentPadding\"")), " "), 
               /\/(ButtonBox(StringBox("\"Line\"")), " "), 
               /\/(ButtonBox(StringBox("\"Shallow\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"ContextMenu\"")), " "), 
               /\/(ButtonBox(StringBox("\"LineBox\"")), " "), 
               /\/(ButtonBox(StringBox("\"Short\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"ContinuousAction\"")), " "), 
               /\/(ButtonBox(StringBox("\"LineBreakWithin\"")), " "), 
               /\/(ButtonBox(StringBox("\"Shortest\"")), " ")}, {
               /\/(ButtonBox(StyleBox(StringBox("\"ControlPlacement\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " "), /\/(ButtonBox(StringBox("\"Listable\"")), " "), 
               /\/(ButtonBox(StringBox("\"ShowAutoStyles\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"CupCap\"")), " "), 
               /\/(ButtonBox(StringBox("\"Literal\"")), " "), 
               /\/(ButtonBox(StringBox("\"ShowSectionBracket\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"DataRange\"")), " "), 
               /\/(ButtonBox(StringBox("\"LongForm\"")), " "), 
               /\/(ButtonBox(StringBox("\"ShowStringCharacters\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"DeepHoldAll\"")), " "), 
               /\/(ButtonBox(StringBox("\"Longest\"")), " "), 
               /\/(ButtonBox(StringBox("\"Skeleton\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"DefaultDuplicateSectionStyle\"")), 
                " "), /\/(ButtonBox(StringBox("\"LowerLeftArrow\"")), " "), 
               /\/(ButtonBox(StringBox("\"Slider\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"DefaultNewSectionStyle\"")), " "), 
               /\/(ButtonBox(StringBox("\"LowerRightArrow\"")), " "), 
               /\/(ButtonBox(StringBox("\"SliderBox\"")), " ")}, {
               /\/(ButtonBox(
                 StringBox("\"DefaultReturnCreatedSectionStyle\"")), " "), 
               /\/(ButtonBox(StringBox("\"MachinePrecision\"")), " "), 
               /\/(ButtonBox(StyleBox(StringBox("\"SliderBoxOptions\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " ")}, {/\/(ButtonBox(StringBox("\"DefiniteFunction\"")), 
                " "), /\/(ButtonBox(StyleBox(StringBox("\"Magnification\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " "), /\/(ButtonBox(StringBox("\"Special\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Degree\"")), " "), 
               /\/(ButtonBox(StringBox("\"MathFontFamily\"")), " "), 
               /\/(ButtonBox(StringBox("\"SqrtBox\"")), " ")}, {
               /\/(ButtonBox(StyleBox(StringBox("\"Deinitialization\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " "), /\/(ButtonBox(StringBox("\"MatrixForm\"")), " "), 
               /\/(ButtonBox(StringBox("\"StandardForm\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"DeleteContents\"")), " "), 
               /\/(ButtonBox(StringBox("\"MaxRecursion\"")), " "), 
               /\/(ButtonBox(StringBox("\"StartOfLine\"")), " ")}, {
               /\/(ButtonBox(StyleBox(StringBox("\"Delimiter\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " "), /\/(ButtonBox(StyleBox(StringBox("\"Menu\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " "), /\/(ButtonBox(StringBox("\"StartOfString\"")), " ")}, {
               /\/(ButtonBox(StyleBox(StringBox("\"Derivative\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " "), /\/(ButtonBox(StringBox("\"MenuCommandKey\"")), " "), 
               /\/(ButtonBox(StringBox("\"String\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"DigitCharacter\"")), " "), 
               /\/(ButtonBox(StyleBox(StringBox("\"MenuItem\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " "), /\/(ButtonBox(StyleBox(StringBox("\"StringBox\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " ")}, {/\/(ButtonBox(StringBox("\"Directive\"")), " "), 
               /\/(ButtonBox(StringBox("\"MenuSortingValue\"")), " "), 
               /\/(ButtonBox(StringBox("\"StringForm\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Directory\"")), " "), 
               /\/(ButtonBox(StringBox("\"Method\"")), " "), 
               /\/(ButtonBox(StringBox("\"StripOnInput\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"DisplayFunction\"")), " "), 
               /\/(ButtonBox(StringBox("\"MinusPlus\"")), " "), 
               /\/(ButtonBox(StringBox("\"Style\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"DockedSections\"")), " "), 
               /\/(ButtonBox(StringBox("\"Missing\"")), " "), 
               /\/(ButtonBox(StringBox("\"StyleBox\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Document\"")), " "), 
               /\/(ButtonBox(StyleBox(StringBox("\"NCache\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " "), /\/(ButtonBox(StyleBox(StringBox("\"StyleData\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " ")}, {/\/(ButtonBox(StringBox("\"DocumentObject\"")), " "), 
               /\/(ButtonBox(StringBox("\"NHoldAll\"")), " "), 
               /\/(ButtonBox(StyleBox(StringBox("\"StyleDefinitions\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " ")}, {/\/(ButtonBox(StringBox("\"DotEqual\"")), " "), 
               /\/(ButtonBox(StringBox("\"NHoldFirst\"")), " "), 
               /\/(ButtonBox(StringBox("\"Subscript\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"DoubleBracketingBar\"")), " "), 
               /\/(ButtonBox(StringBox("\"NHoldRest\"")), " "), 
               /\/(ButtonBox(StringBox("\"SubscriptBox\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"DoubleDownArrow\"")), " "), 
               /\/(ButtonBox(StringBox("\"None\"")), " "), 
               /\/(ButtonBox(StringBox("\"Subset\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"DoubleLeftArrow\"")), " "), 
               /\/(ButtonBox(StringBox("\"NotCongruent\"")), " "), 
               /\/(ButtonBox(StringBox("\"SubsetEqual\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"DoubleLeftRightArrow\"")), " "), 
               /\/(ButtonBox(StringBox("\"NotCupCap\"")), " "), 
               /\/(ButtonBox(StringBox("\"Subsuperscript\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"DoubleLowerLeftArrow\"")), " "), 
               /\/(ButtonBox(StringBox("\"NotElement\"")), " "), 
               /\/(ButtonBox(StringBox("\"SubsuperscriptBox\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"DoubleLowerRightArrow\"")), " "), 
               /\/(ButtonBox(StringBox("\"NotGreater\"")), " "), 
               /\/(ButtonBox(StringBox("\"Succeeds\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"DoubleRightArrow\"")), " "), 
               /\/(ButtonBox(StringBox("\"NotGreaterEqual\"")), " "), 
               /\/(ButtonBox(StringBox("\"SucceedsEqual\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"DoubleUpArrow\"")), " "), 
               /\/(ButtonBox(StringBox("\"NotGreaterLess\"")), " "), 
               /\/(ButtonBox(StringBox("\"SucceedsTilde\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"DoubleUpDownArrow\"")), " "), 
               /\/(ButtonBox(StringBox("\"NotGreaterTilde\"")), " "), 
               /\/(ButtonBox(StringBox("\"Superscript\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"DoubleUpperLeftArrow\"")), " "), 
               /\/(ButtonBox(StringBox("\"NotLeftTriangle\"")), " "), 
               /\/(ButtonBox(StringBox("\"SuperscriptBox\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"DoubleUpperRightArrow\"")), " "), 
               /\/(ButtonBox(StringBox("\"NotLeftTriangleEqual\"")), " "), 
               /\/(ButtonBox(StringBox("\"Superset\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"DownArrow\"")), " "), 
               /\/(ButtonBox(StringBox("\"NotLess\"")), " "), 
               /\/(ButtonBox(StringBox("\"SupersetEqual\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Dynamic\"")), " "), 
               /\/(ButtonBox(StringBox("\"NotLessEqual\"")), " "), 
               /\/(ButtonBox(StringBox("\"SurdForm\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"DynamicBox\"")), " "), 
               /\/(ButtonBox(StringBox("\"NotLessGreater\"")), " "), 
               /\/(ButtonBox(StringBox("\"Symbol\"")), " ")}, {
               /\/(ButtonBox(StyleBox(StringBox("\"DynamicBoxOptions\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " "), /\/(ButtonBox(StringBox("\"NotLessTilde\"")), " "), 
               /\/(ButtonBox(StringBox("\"Symmetric\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"DynamicLocalBox\"")), " "), 
               /\/(ButtonBox(StringBox("\"NotPrecedes\"")), " "), 
               /\/(ButtonBox(StringBox("\"SynchronousUpdating\"")), " ")}, {
               /\/(ButtonBox(StyleBox(StringBox("\"DynamicLocalBoxOptions\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " "), /\/(ButtonBox(StringBox("\"NotPrecedesEqual\"")), " "), 
               /\/(ButtonBox(StringBox("\"Syntax\"")), " ")}, {
               /\/(ButtonBox(StyleBox(StringBox("\"DynamicLocalValues\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " "), /\/(ButtonBox(StringBox("\"NotReverseElement\"")), " "), 
               /\/(ButtonBox(StringBox("\"SyntaxForm\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"DynamicSetting\"")), " "), 
               /\/(ButtonBox(StringBox("\"NotRightTriangle\"")), " "), 
               /\/(ButtonBox(StringBox("\"SystemException\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"E\"")), " "), 
               /\/(ButtonBox(StringBox("\"NotRightTriangleEqual\"")), " "), 
               /\/(ButtonBox(StringBox("\"TabView\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Editable\"")), " "), 
               /\/(ButtonBox(StringBox("\"NotSubset\"")), " "), 
               /\/(ButtonBox(StringBox("\"TagBox\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Element\"")), " "), 
               /\/(ButtonBox(StringBox("\"NotSubsetEqual\"")), " "), 
               /\/(ButtonBox(StringBox("\"TemplateBox\"")), " ")}, {
               /\/(ButtonBox(StyleBox(StringBox("\"EllipticE\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " "), /\/(ButtonBox(StringBox("\"NotSucceeds\"")), " "), 
               /\/(ButtonBox(StringBox("\"TemplateBoxOptions\"")), " ")}, {
               /\/(ButtonBox(StyleBox(StringBox("\"EllipticF\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " "), /\/(ButtonBox(StringBox("\"NotSucceedsEqual\"")), " "), 
               /\/(ButtonBox(StyleBox(StringBox("\"TemplateSlot\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " ")}, {
               /\/(ButtonBox(StyleBox(StringBox("\"EllipticK\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " "), /\/(ButtonBox(StringBox("\"NotSuperset\"")), " "), 
               /\/(ButtonBox(StyleBox(StringBox("\"TemplateSlotSequence\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " ")}, {
               /\/(ButtonBox(StyleBox(StringBox("\"EllipticPi\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " "), /\/(ButtonBox(StringBox("\"NotSupersetEqual\"")), " "), 
               /\/(ButtonBox(StringBox("\"Temporary\"")), " ")}, {
               /\/(ButtonBox(StyleBox(StringBox("\"EllipticRF\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " "), /\/(ButtonBox(StringBox("\"NotTildeEqual\"")), " "), 
               /\/(ButtonBox(StringBox("\"TestPattern\"")), " ")}, {
               /\/(ButtonBox(StyleBox(StringBox("\"EllipticRG\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " "), /\/(ButtonBox(StringBox("\"NotTildeFullEqual\"")), " "), 
               /\/(ButtonBox(StringBox("\"TextData\"")), " ")}, {
               /\/(ButtonBox(StyleBox(StringBox("\"EllipticRJ\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " "), /\/(ButtonBox(StringBox("\"NotTildeTilde\"")), " "), 
               /\/(ButtonBox(StringBox("\"TextShadow\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Enabled\"")), " "), 
               /\/(ButtonBox(StringBox("\"Number\"")), " "), 
               /\/(ButtonBox(StringBox("\"ThreadLocal\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"EndOfFile\"")), " "), 
               /\/(ButtonBox(StringBox("\"NumberString\"")), " "), 
               /\/(ButtonBox(StringBox("\"Ticks\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"EndOfLine\"")), " "), 
               /\/(ButtonBox(StringBox("\"NumericFunction\"")), " "), 
               /\/(ButtonBox(StringBox("\"TildeEqual\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"EndOfString\"")), " "), 
               /\/(ButtonBox(StringBox("\"OneIdentity\"")), " "), 
               /\/(ButtonBox(StringBox("\"TildeFullEqual\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"EulerGamma\"")), " "), 
               /\/(ButtonBox(StyleBox(StringBox("\"Opacity\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " "), /\/(ButtonBox(StringBox("\"TildeTilde\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Evaluatable\"")), " "), 
               /\/(ButtonBox(StringBox("\"Opener\"")), " "), 
               /\/(ButtonBox(StringBox("\"TimeZone\"")), " ")}, {
               /\/(ButtonBox(StyleBox(StringBox("\"EvaluationContext\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " "), /\/(ButtonBox(StringBox("\"OpenerBox\"")), " "), 
               /\/(ButtonBox(StringBox("\"ToggleSwitch\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Except\"")), " "), 
               /\/(ButtonBox(StringBox("\"OperatingSystem\"")), " "), 
               /\/(ButtonBox(StringBox("\"Tooltip\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Expression\"")), " "), 
               /\/(ButtonBox(StringBox("\"Optional\"")), " "), 
               /\/(ButtonBox(StringBox("\"TooltipBox\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"False\"")), " "), 
               /\/(ButtonBox(StringBox("\"OutputForm\"")), " "), 
               /\/(ButtonBox(StringBox("\"Top\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"File\"")), " "), 
               /\/(ButtonBox(StyleBox(StringBox("\"OutputStream\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " "), /\/(ButtonBox(StringBox("\"TrackedSymbols\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"FillBox\"")), " "), 
               /\/(ButtonBox(StringBox("\"Overlaps\"")), " "), 
               /\/(ButtonBox(StringBox("\"TransformationBox\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"FillBoxOptions\"")), " "), 
               /\/(ButtonBox(StringBox("\"Overscript\"")), " "), 
               /\/(ButtonBox(StringBox("\"True\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"FillBoxWeight\"")), " "), 
               /\/(ButtonBox(StringBox("\"OverscriptBox\"")), " "), 
               /\/(ButtonBox(StringBox("\"Undefined\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Filler\"")), " "), 
               /\/(ButtonBox(StringBox("\"PageWidth\"")), " "), 
               /\/(ButtonBox(StringBox("\"Underoverscript\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"FontColor\"")), " "), 
               /\/(ButtonBox(StringBox("\"Pane\"")), " "), 
               /\/(ButtonBox(StringBox("\"UnderoverscriptBox\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"FontFamily\"")), " "), 
               /\/(ButtonBox(StringBox("\"PaneBox\"")), " "), 
               /\/(ButtonBox(StringBox("\"Underscript\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"FontFeatures\"")), " "), 
               /\/(ButtonBox(StringBox("\"PaneBoxOptions\"")), " "), 
               /\/(ButtonBox(StringBox("\"UnderscriptBox\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"FontSize\"")), " "), 
               /\/(ButtonBox(StringBox("\"PaneSelector\"")), " "), 
               /\/(ButtonBox(StringBox("\"Unevaluated\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"FontSlant\"")), " "), 
               /\/(ButtonBox(StringBox("\"PaneSelectorBox\"")), " "), 
               /\/(ButtonBox(StyleBox(StringBox("\"UnsavedVariables\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " ")}, {/\/(ButtonBox(StringBox("\"FontWeight\"")), " "), 
               /\/(ButtonBox(StringBox("\"Panel\"")), " "), 
               /\/(ButtonBox(StringBox("\"UpArrow\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Format\"")), " "), 
               /\/(ButtonBox(StringBox("\"PanelBox\"")), " "), 
               /\/(ButtonBox(StringBox("\"UpDownArrow\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"FractionBox\"")), " "), 
               /\/(ButtonBox(StringBox("\"PanelBoxOptions\"")), " "), 
               /\/(ButtonBox(StringBox("\"UpdateInterval\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Frame\"")), " "), 
               /\/(ButtonBox(StringBox("\"ParseSymbols\"")), " "), 
               /\/(ButtonBox(StringBox("\"UpperLeftArrow\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"FrameBox\"")), " "), 
               /\/(ButtonBox(StringBox("\"ParserArguments\"")), " "), 
               /\/(ButtonBox(StringBox("\"UpperRightArrow\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"FrameBoxOptions\"")), " "), 
               /\/(ButtonBox(StringBox("\"Path\"")), " "), 
               /\/(ButtonBox(StringBox("\"Visible\"")), " ")}, {
               /\/(ButtonBox(StyleBox(StringBox("\"FrameStyle\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " "), /\/(ButtonBox(StringBox("\"Pattern\"")), " "), 
               /\/(ButtonBox(StyleBox(StringBox("\"WeierstrassP\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " ")}, {/\/(ButtonBox(StringBox("\"FrameTicks\"")), " "), 
               /\/(ButtonBox(StringBox("\"PatternSequence\"")), " "), 
               /\/(ButtonBox(StyleBox(StringBox("\"WeierstrassSigma\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " ")}, {/\/(ButtonBox(StringBox("\"Framed\"")), " "), 
               /\/(ButtonBox(StringBox("\"Pi\"")), " "), 
               /\/(ButtonBox(StyleBox(StringBox("\"WeierstrassZeta\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " ")}, {/\/(ButtonBox(StringBox("\"FrontEndObject\"")), " "), 
               /\/(ButtonBox(StringBox("\"Placeholder\"")), " "), 
               /\/(ButtonBox(StringBox("\"Whitespace\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"FullForm\"")), " "), 
               /\/(ButtonBox(StringBox("\"Plain\"")), " "), 
               /\/(ButtonBox(StringBox("\"WhitespaceCharacter\"")), " ")}, {
               /\/(ButtonBox(StyleBox(StringBox("\"GegenbauerC\""), 
                  FontColor -> RGBColor(1, 0, 0), StripOnInput -> False)), 
                " "), /\/(ButtonBox(StringBox("\"PlotPoints\"")), " "), 
               /\/(ButtonBox(StringBox("\"WholeSectionGroupOpener\"")), " ")}, 
              {/\/(ButtonBox(StringBox("\"General\"")), " "), 
               /\/(ButtonBox(StringBox("\"PlotRange\"")), " "), 
               /\/(ButtonBox(StringBox("\"WindowFrame\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"GeneratedSectionStyles\"")), " "), 
               /\/(ButtonBox(StringBox("\"PlotStyle\"")), " "), 
               /\/(ButtonBox(StringBox("\"WindowTitle\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"GoldenRatio\"")), " "), 
               /\/(ButtonBox(StringBox("\"PlusMinus\"")), " "), 
               /\/(ButtonBox(StringBox("\"Word\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"Graphics\"")), " "), 
               /\/(ButtonBox(StringBox("\"Point\"")), " "), 
               /\/(ButtonBox(StringBox("\"WordBoundary\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"GraphicsBox\"")), " "), 
               /\/(ButtonBox(StringBox("\"PointBox\"")), " "), 
               /\/(ButtonBox(StringBox("\"WordCharacter\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"GrayLevel\"")), " "), 
               /\/(ButtonBox(StringBox("\"Precedes\"")), " "), 
               /\/(ButtonBox(StringBox("\"WorkingPrecision\"")), " ")}, {
               /\/(ButtonBox(StringBox("\"GreaterEqualLess\"")), " "), 
               /\/(ButtonBox(StringBox("\"PrecedesEqual\"")), " "), 
               StringBox("\"\"")}, {
               /\/(ButtonBox(StringBox("\"GreaterFullEqual\"")), " "), 
               /\/(ButtonBox(StringBox("\"PrecedesTilde\"")), " "), 
               StringBox("\"\"")}}), "Grid"), 
           ButtonBoxOptions -> {ButtonFrame -> "Frameless", 
             ButtonFunction -> (With({FE`Private`s:= ToExpression(First(#1))}, 
                ShowDefinition(FE`Private`s)) &)}, GridBoxColumnSpacing -> 2, 
           GridBoxRowSpacing -> 0.20000000298023224`, StripOnInput -> False)), 
         "PrintUsage", SectionGenerated -> True)}, All)}, All)}, All)}, 
 StyleDefinitions -> "Default.pmathdoc", Visible -> True)
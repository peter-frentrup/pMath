Document({
   SectionGroup({Section("Using $WindowFrameImage", "Title"), 
     Section(
      "You need to turn on \[HighSixDoubleQuote]Aero \
      Glass\[HighNineDoubleQuote] to see the frame image.", "Text"), 
     SectionGroup({
       Section(BoxData({"Button", "(", {"\"Open Window with Frame Image\"", 
           ",", "\n", {"With", "(", {
             {"{", {"imgFile", "\[Assign]", {"FE`FileOpenDialog", "(", {
                 {"If", "(", {{"IsString", "(", "lastChosenImage", ")"}, ",", 
                   "lastChosenImage", ",", "\"\""}, ")"}, ",", {
                  "{", {"\"PNG Images\"", "->", "\"*.png\""}, "}"}}, ")"}}, 
              "}"}, ",", "\n", {
              {"If", "(", {{"IsString", "(", "imgFile", ")"}, ",", "\n", {
                 {"lastChosenImage", "\[Assign]", "imgFile"}, ";", "\n", {
                  "Block", "(", {{"{", "FE`$WindowFrameImage", "}"}, ",", {
                    {"FE`$WindowFrameImage", "\[Assign]", "imgFile"}, ";", {
                     "CreateDocument", "@@", {"DocumentGet", "(", {
                       "EvaluationDocument", "(", ")"}, ")"}}}}, ")"}}}, ")"}, 
              ";"}}, ")"}}, ")"}), "Input"), 
       Section(BoxData(ButtonBox("\"Open Window with Frame Image\"", 
          ButtonFunction -> (With({
            imgFile:= FE`FileOpenDialog(If(IsString(lastChosenImage), 
              lastChosenImage, ""), {"PNG Images" -> "*.png"})}, 
           If(IsString(imgFile), lastChosenImage:= imgFile; Block({
              FE`$WindowFrameImage}, FE`$WindowFrameImage:= imgFile; Apply(
              DocumentGet(EvaluationDocument()), CreateDocument)));) &))), 
        "Output", SectionGenerated -> True)}, 2), 
     SectionGroup({
       Section(BoxData({"Grid", "(", {
           "{", {{"{", {"\"last chosen image:\"", "++", {
               "StringExpression", "@@", {"ConstantArray", "(", {
                 "\"\\[U+2003]\"", ",", "20"}, ")"}}}, "}"}, ",", "\n", {
             "{", {"InputField", "(", {
               {"Dynamic", "(", "lastChosenImage", ")"}, ",", "String"}, ")"}, 
             "}"}}, "}"}, ")"}), "Input"), 
       Section(BoxData(TagBox(GridBox({{"\"last chosen \
             image:\[U+2003]\[U+2003]\[U+2003]\[U+2003]\[U+2003]\[U+2003]\[U+2003]\[U+2003]\[U+2003]\[U+2003]\
			 \[U+2003]\[U+2003]\[U+2003]\[U+2003]\[U+2003]\[U+2003]\[U+2003]\[U+2003]\[U+2003]\[U+2003]\""}, {InputFieldBox(Dynamic(lastChosenImage), String)}}), "Grid")), 
        "Output", SectionGenerated -> True)}, 2), 
     SectionGroup({
       Section(BoxData({"Button", "(", {"\"+\"", ",", "\n", {
            "With", "(", {
             {"{", {"old", "\[Assign]", {"\"TopGlass\"", ".", "Replace", "(", {
                 "DockedSections", ".", "Replace", "(", {
                  "Options", "(", {{"EvaluationDocument", "(", ")"}, ",", 
                   "DockedSections"}, ")"}, ")"}, ")"}}, "}"}, ",", "\n", {
              "SetOptions", "(", {{"EvaluationDocument", "(", ")"}, ",", {
                "DockedSections", "\[Rule]", {
                 "{", {"\"TopGlass\"", "\[Rule]", {
                   "Flatten", "@", {"{", {"old", ",", {"Section", "(", {
                       "\"\"", ",", "\"Docked\""}, ")"}}, "}"}}}, "}"}}}, 
              ")"}}, ")"}}, "\n", ")"}), "Input"), 
       Section(BoxData(ButtonBox("\"+\"", 
          ButtonFunction -> (With({
            old:= Replace("TopGlass", Replace(DockedSections, 
              Options(EvaluationDocument(), DockedSections)))}, 
           SetOptions(EvaluationDocument(), 
            DockedSections -> {"TopGlass" -> Flatten({
               old, Section("", "Docked")})})) &))), "Output", 
        SectionGenerated -> True)}, 2), 
     SectionGroup({
       Section(BoxData({"Button", "(", {"\"-\"", ",", "\n", {
            "With", "(", {
             {"{", {"old", "\[Assign]", {
                "Flatten", "@", {"{", {"\"TopGlass\"", ".", "Replace", "(", {
                   "DockedSections", ".", "Replace", "(", {
                    "Options", "(", {{"EvaluationDocument", "(", ")"}, ",", 
                     "DockedSections"}, ")"}, ")"}, ")"}, "}"}}}, "}"}, ",", 
             "\n", {"If", "(", {{{"Length", "(", "old", ")"}, ">", "0"}, ",", {
                "SetOptions", "(", {{"EvaluationDocument", "(", ")"}, ",", {
                  "DockedSections", "\[Rule]", {
                   "{", {"\"TopGlass\"", "\[Rule]", {"Most", "@", "old"}}, 
                   "}"}}}, ")"}}, ")"}}, "\n", ")"}}, "\n", ")"}), "Input", 
        SectionLabel -> "in [36]:"), 
       Section(BoxData(ButtonBox("\"-\"", 
          ButtonFunction -> (With({
            old:= Flatten({
              Replace("TopGlass", Replace(DockedSections, 
                Options(EvaluationDocument(), DockedSections)))})}, 
           If(Length(old) > 0, SetOptions(EvaluationDocument(), 
             DockedSections -> {"TopGlass" -> Most(old)}))) &))), "Output", 
        SectionGenerated -> True)}, 2)}, All)}, Background -> GrayLevel(1), 
  DockedSections -> {"Top" -> Inherited, "BottomGlass" -> Inherited, 
   "TopGlass" -> {Section("", "Docked")}, "Bottom" -> Inherited}, 
  Editable -> False, Selectable -> False, ShowSectionBracket -> False, 
  Visible -> True, WindowFrame -> "Dialog", 
  WindowTitle -> "Using $WindowFrameImage")

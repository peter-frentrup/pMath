Begin("FE`")FE`MenuFE`ItemFE`DelimiterFE`$MathShapersFE`ScopedCommandBegin("FE`Private`")FE`Private`mainmenu:= Menu("pMath", {	Menu("&File", {		Item("&New",                                  "New"),		Item("&Open...",                              "Open"),		Item("&Save",                                 "Save"),		Item("Save &As...",                           "SaveAs"),		Delimiter,		Item("&Close",                                "Close")		}),	Menu("&Edit", {		Item("Cu&t",                                  "Cut"),		Item("&Copy",                                 "Copy"),		Item("&Paste",                                "Paste"),		Menu("Cop&y As", {			Item("Plain &Text",                       CopySpecial("PlainText")),			Item("&Input Text",                       CopySpecial("InputText")),			Item("Boxes &Expression",                 CopySpecial("BoxesText")),			Delimiter,			Item("&Bitmap",                           CopySpecial("Bitmap")),			Item("&SVG",                              CopySpecial("image/svg+xml"))			}),		Delimiter,		Item("Di&vide Section",                       "SectionSplit"),		Item("&Merge Sections",                       "SectionMerge"),		Delimiter,		Item("&Edit Boxes",                           "EditBoxes"),		Item("Reset &Graphics Size",                  "GraphicsOriginalSize"),		Item("E&xpand Selection",                     "ExpandSelection"),		Item("Select &All",                           "SelectAll"),		Item("Find Matching &Bracket",                "FindMatchingFence"),		Delimiter,		Item("&Open/Close Group",                     "OpenCloseGroup")		}),	Menu("&Insert", {		Item("&Input from Above",                     "DuplicatePreviousInput"),		Item("&Output from Above",                    "DuplicatePreviousOutput"),		Item("Section with Same St&yle",              "SimilarSectionBelow"),		Delimiter,		Item("&Fraction",                             "InsertFraction"),		Item("R&adical",                              "InsertRadical"),		Delimiter,		Item("Su&bscript",                            "InsertSubscript"),		Item("Su&perscript",                          "InsertSuperscript"),		Item("O&verscript",                           "InsertOverscript"),		Item("&Underscript",                          "InsertUnderscript"),		Item("&Opposite Position",                    "InsertOpposite"),		Delimiter,		Item("Table &Column",                         "InsertColumn"),		Item("Table &Row",                            "InsertRow")		}),	Menu("Fo&rmat", {		Menu("Style", {			Item("Title",                              BaseStyle->"Title"),			Item("Section",                            BaseStyle->"Section"),			Item("Subsection",                         BaseStyle->"Subsection"),			Item("Subsubsection",                      BaseStyle->"Subsubsection"),			Item("Text",                               BaseStyle->"Text"),			Item("Input",                              BaseStyle->"Input")			}),		Menu("Magnification", {			Item("50%",                                ScopedCommand(Magnification->0.5, Document)),			Item("100%",                               ScopedCommand(Magnification->1.0, Document)),			Item("150%",                               ScopedCommand(Magnification->1.5, Document))			}),				Menu("Math Font", Join(			$MathShapers.Map(Item(# ++ "",             "@shaper=" ++ #) &),			{				Delimiter,				Item("Mathematica Mono",                "@shaper=Mathematica Mono"),				Item("Mathematica Serif",               "@shaper=Mathematica Serif"),			}))		}),	Menu("E&valuation", {		Item("&Evaluate Sections",                    "EvaluateSections"),		Item("Evaluate in &Place",                    "EvaluateInPlace"),		Item("E&valuate in Subsession",               "SubsessionEvaluateSections"),		Delimiter,		Item("Enter &Subsession",                     "EvaluatorSubsession"),		Item("&Abort",                                "EvaluatorAbort"),		Item("&Remove from Evaluation Queue",         "RemoveFromEvaluationQueue"),		Item("&Find Currently Evaluating Section",    "FindEvaluatingSection"),		Delimiter,		Item("&Convert Dynamic to Literal",           "DynamicToLiteral")		})	});End()End()FE`Private`mainmenu
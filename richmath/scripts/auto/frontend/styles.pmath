
BeginPackage("FE`Styles`")

MakeStyleDataBoxes
$DefaultDisplayFunction
$DefaultDisplayFunctionTooltip

Begin("FE`Styles`Private`")

MakeStyleDataBoxes(~)::= asStyleDataLabelBox("\"Unknown StyleData syntax\"")
MakeStyleDataBoxes(HoldComplete(StyleData(~name:String)))::= 
    asStyleDataExampleBox(
        MakeBoxes(StringForm("Local definition for style \[HighSixDoubleQuote]`1`\[HighNineDoubleQuote]:", name)),
        name
    )
    
Function MakeStyleDataBoxes(HoldComplete(StyleData(StyleDefinitions -> ~name:String))) {
    asStyleDataExampleBox(
        ComplexStringBox(
            "\"Include definitions from stylesheet \[HighSixDoubleQuote]", 
            TemplateBox({name}, "StylesheetHyperlink"),
            "\[HighNineDoubleQuote]\""),
        name
    )
}

asStyleDataLabelBox(~labelTextBox)::=
    StyleBox(
        labelTextBox,
        "SystemResetStyle", FontFamily->"Arial", ShowStringCharacters->False
    )

Function asStyleDataExampleBox(~labelTextBox, ~exampleBox) {
    With(lbl:= asStyleDataLabelBox(labelTextBox))

    TemplateBox({False}, "", Tooltip -> None, DisplayFunction -> Function(
        StyleBox(
            GridBox({{{lbl, OpenerBox(#1)}},
                {PaneSelectorBox({True -> 
                    GridBox({{"  ", ""}, {"", DynamicBox(asStyleDataLabelBox(
                        ToBoxes @ Grid(
                            DocumentGet(CurrentValue(Section)).Replace({
                                    Section(~,~~~rest):>{rest}
                                }, 0).Replace(
                                    {{}->{"(nothing)"}
                                }, 0).Map(makePropertyGridEntries0).Flatten(1)
                        )))}, {"", ""}}, GridBoxRowSpacing -> 0.2)
                }, #1)},
                {exampleBox}},
                BaselinePosition -> -1, GridBoxColumnSpacing -> 0, GridBoxRowSpacing -> 0),
            AutoSpacing->False)
    ))
}

makePropertyGridEntries0(~x)::= makePropertyGridEntries("", x)

$styleOptionAlternatives:= BaseStyle | DefaultDuplicateSectionStyle | DefaultNewSectionStyle | DefaultReturnCreatedSectionStyle
makePropertyGridEntries(~pre, $styleOptionAlternatives -> ~s:String)::= {{makePropertyGridLabel(pre, BaseStyle), "\[Rule]", RawBoxes@{TemplateBox({s}, "StyleHyperlink"),"\[InvisibleSpace]"}}}
makePropertyGridEntries(~pre, Rule(~l, ~r))::=           {{makePropertyGridLabel(pre, l),         "\[Rule]",        makePropertyGridValue(r)}}
makePropertyGridEntries(~pre, RuleDelayed(~l, ~r))::=    {{makePropertyGridLabel(pre, l),         "\[RuleDelayed]", makePropertyGridValue(HoldForm(r))}}
makePropertyGridEntries(~pre, ~x)::=                     {{"",                                    "",               makePropertyGridValue(x)}}
Function makePropertyGridEntries(~pre, Rule(~l, r: {((Rule|RuleDelayed)(~,~))**})) {
    {{makePropertyGridLabel(pre, l), "\[Rule]", "{\[Ellipsis]}:"}}.Join(
        r.Map(Function(makePropertyGridEntries(pre ++ "  ", #))).Flatten(1))
}
Function makePropertyGridEntries(~pre, RuleDelayed(~l, r: {((Rule|RuleDelayed)(~,~))**})) {
    {{makePropertyGridLabel(pre, l), "\[RuleDelayed]", "{\[Ellipsis]}:"}}.Join(
        r.Map(Function(makePropertyGridEntries(pre ++ "  ", #))).Flatten(1))
}

makePropertyGridLabel(~pre, ~post)::= Row({pre, post})

makePropertyGridSeparator(~f):=          RawBoxes(OverscriptBox("\[Rule]", ToBoxes(Shallow(f))))
makePropertyGridSeparator(Rule):=        "\[Rule]"
makePropertyGridSeparator(RuleDelayed):= "\[RuleDelayed]"

makePropertyGridValue(~x)::= Short(x)
makePropertyGridValue(d:Dynamic(~~~args))::= Grid({
        {Short(HoldForm(HoldForm(Dynamic)(args)))}, 
        {Short(d)}}, BaselinePosition -> 1)
makePropertyGridValue(col: RGBColor(~,~,~))::= Row({Framed("    ", Background -> col), " ", Short(col)})
makePropertyGridValue(col: GrayLevel(~))::=    Row({Framed("    ", Background -> col), " ", Short(col)})

$DefaultDisplayFunction(~tag:String)::= Function(
    FrameBox(
        {tag, "(", 
            %TemplateSlotSequence(1, ","),
            TemplateSlotSequence(##1, Function(FrameBox(#1).StyleBox("TemplateBoxErrorDisplayArgumentStyle")), ","),
            %{##1}.Map(Function(FrameBox(#1).StyleBox("TemplateBoxErrorDisplayArgumentStyle"))).Riffle(","), 
            ")"}
    ).StyleBox("TemplateBoxErrorDisplayStyle")
)

$DefaultDisplayFunctionTooltip(~tag:String)::= 
    ComplexStringBox(
        "\"The TemplateBox was unable to use the specified display function, \
        or could not locate the display function for \[HighSixDoubleQuote]",
        tag,
        "\[HighNineDoubleQuote] because a style sheet is missing\""
    ).StyleBox("Message")
    
$DefaultDisplayFunctionTooltip(~~~)::= 
    (
        "\"The TemplateBox was unable to use the specified display function\""
    ).StyleBox("Message")

End()

EndPackage()


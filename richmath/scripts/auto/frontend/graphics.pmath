/* Helper functions for GraphicsBox */

BeginPackage("FE`Graphics`")

FE`Graphics`DefaultTickBoxes

Begin("FE`Graphics`Private`")


stepSize(~width ? IsPositive)::= 
	First @ Select(
		{5,10,20,50} 10^(Round @ Log(10, width) - 2), 
		width < 8 # &, 
		1)

smallTickPositions(~start, ~end) /? start < end ::=
	With({step:= stepSize(stepSize(end - start))},
		N @ Array(Ceiling(start, step) .. end .. step))
		
largeTickPositions(~start, ~end) /? start < end ::=
	With({step:= stepSize(end - start)},
		N @ Array(Ceiling(start, step) .. end .. step))

isSmallInt(~s:String)::= s.StringMatch(".0`" ++ EndOfString)
isSmallInt(~)::= False
allLabelsArrSmallInt(~ticks)::= And @@ ticks.Map(isSmallInt)

makeIntTick({~x, ~lblBox, ~~~rest})::= {x, lblBox.StringReplace(".0`" ++ EndOfString :> ""), rest}

DefaultTickBoxes(~start, ~end, True) /? start < end ::=
	Join(
		With({t:= largeTickPositions(start, end).Map({#, ToBoxes(#), {0.0, 0.02}}&)},
			If(allLabelsArrSmallInt(t),
				t.Map(makeIntTick),
				t)), 
		smallTickPositions(start, end).Map({#, "",         {0.0, 0.01}}&))

DefaultTickBoxes(~start, ~end, False) /? start < end ::=
	Join(
		largeTickPositions(start, end).Map({#, "", {0.0, 0.02}}&), 
		smallTickPositions(start, end).Map({#, "", {0.0, 0.01}}&))


End()

EndPackage()

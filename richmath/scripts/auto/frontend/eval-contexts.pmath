Begin("FE`")

Begin("FE`Private`")


FE`Private`DeleteEvaluationContext
FE`Private`EvaluationContextBlock
FE`Private`SwitchEvaluationContext


Function SwitchEvaluationContext(~oldctx:String, ~newctx:String) {
    Refresh(
        ToExpression(StringReplace(
            "FE`Private`SwitchEvaluationContextImpl(`1`, AAA, `2`, BBB)",
            {   "AAA" -> oldctx ++ "Private`SavedContextInfo",
                "BBB" -> newctx ++ "Private`SavedContextInfo"}),
            ParserArguments -> {oldctx, newctx}),
        None)
}


Function SwitchEvaluationContextImpl(~oldctx, ~oldsave, ~newctx, ~newsave) {
    StoreEvaluationContext(oldctx, oldsave)
    
    If(!IsString(newsave("$Namespace"))) {
        CreateEvaluationContext(newctx, newsave)
    }

    LoadEvaluationContext(newctx, newsave)
    
    If(oldsave("$Line") =!= newsave("$Line")) {
        % TODO: incorporate $DialogLevel
        CurrentValue(EvaluationBox(),SectionLabel):= StringForm("in [`1`]:", newsave("$Line")).ToString
    }
}

Function CreateEvaluationContext(~ctx, ~save) {
    save("$History"):= {}
    save("$Line"):= 0
    save("$MessageCount"):= {}
    save("$Namespace"):= ctx
    save("$NamespacePath"):= {"System`"}
}

Function LoadEvaluationContext(~ctx, ~save) {
    DownRules($History):=      save("$History")
    $Line:=                    save("$Line")
    DownRules($MessageCount):= save("$MessageCount")
    $Namespace:=               save("$Namespace")
    $NamespacePath:=           save("$NamespacePath")
}

Function StoreEvaluationContext(~ctx, ~save) {
    save("$History"):=       DownRules($History)
    save("$Line"):=          $Line
    save("$MessageCount"):=  DownRules($MessageCount)
    save("$Namespace"):=     $Namespace
    save("$NamespacePath"):= $NamespacePath
}

Attributes(EvaluationContextBlock):= {HoldAllComplete}
Function EvaluationContextBlock(~expr, ~ctx:String) {
    ToExpression(StringReplace(
        "FE`Private`EvaluationContextBlockImpl(`1`, `2`, AAA)",
        {"AAA" -> ctx ++ "Private`SavedContextInfo"}),
        ParserArguments -> {HoldComplete(expr), ctx})
}

Function EvaluationContextBlockImpl(HoldComplete(~expr), ~ctx, ~save) {
    If(!IsString(save("$Namespace"))) {
        CreateEvaluationContext(ctx, save)
    }

    Block({$History, $Line, $MessageCount, $Namespace, $NamespacePath},
        Internal`SuppressDynamicTrackingBlock({$History, $Line, $MessageCount, $Namespace, $NamespacePath},
            LoadEvaluationContext(ctx, save)
        )
        Try {
            expr
        } Finally {
            StoreEvaluationContext(ctx, save)
        }
    )
}

Function DeleteEvaluationContext(~ctx:String) {
    ToExpression(StringReplace(
        "FE`Private`DeleteEvaluationContextImpl(`1`, AAA)",
        {"AAA" -> ctx ++ "Private`SavedContextInfo"}),
        ParserArguments -> {ctx})
}

Function DeleteEvaluationContextImpl(~ctx, ~save) {
    ClearAll(save)
    Names(ctx ++ ~~~).Scan(Function(SetAttributes(#, Temporary)))
}

End()

End()
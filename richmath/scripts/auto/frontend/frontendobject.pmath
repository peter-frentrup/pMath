BeginPackage("FE`", {"ExperimentalSyntax`"})

Begin("FE`Private`")

allowGuiBoxes::= Refresh(System`BoxForm`$UseTextFormatting =!= True, None)
Protect(allowGuiBoxes)

MakeBoxes(doc: DocumentObject(~feo:FrontEndObject))::= Block {
    With(title:= CurrentValue(doc, WindowTitle))
    If(title.IsString) {
        TemplateBox({feo, title}, "DocumentObject")
    } Else {
        TemplateBox({feo, feo.ReplaceRepeated(FrontEndObject(~~~, ~id) :> id)}, "DocumentObject")
    }
} /? allowGuiBoxes

MakeBoxes(FrontEndObject(~sess:Integer, ~id:Integer))::= TemplateBox({sess, id}, "FrontEndObject") /? allowGuiBoxes

DocumentObject/: Options(~obj:DocumentObject, args:Repeated(~, 0..1))::= FE`CallFrontEnd(FrontEnd`Options(obj, args))
FrontEndObject/: Options(~obj:FrontEndObject, args:Repeated(~, 0..1))::= FE`CallFrontEnd(FrontEnd`Options(obj, args))

DocumentObject/: SetOptions(~obj:DocumentObject, ~~args)::= FE`CallFrontEnd(FrontEnd`SetOptions(obj, args))
FrontEndObject/: SetOptions(~obj:FrontEndObject, ~~args)::= FE`CallFrontEnd(FrontEnd`SetOptions(obj, args))

FE`EvaluateDynamic(~feo, ~dyn)::= ReleaseHold(FE`CallFrontEnd(FrontEnd`PrepareDynamicEvaluation(feo, dyn)))
FE`AssignDynamicValue(~feo, ~dyn, ~val)::= FE`CallFrontEnd(FrontEnd`AssignDynamicValue(feo, dyn, val))


End()

EndPackage()

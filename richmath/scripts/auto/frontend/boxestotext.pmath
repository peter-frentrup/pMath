
Begin("FE`Private`")

FE`BoxesToText(~s:String, ~format)::= s

/* format: "InputText" or "PlainText" */
FE`BoxesToText(~boxes, ~format)::= innerBoxesToText(boxes, format)

parenthesize(~x:String, ~format)::= x
parenthesize({~x}, ~format)::= parenthesize(x, format)
parenthesize(~x, ~format)::= "(" ++ innerBoxesToText(x, format) ++ ")"

innerBoxesToText("\[u+2192]", "InputText"):= "->";
innerBoxesToText("\[u+2254]", "InputText"):= ":=";
innerBoxesToText("\[U+29F4]", "InputText"):= ":>";
innerBoxesToText("\[U+2A74]", "InputText"):= "::=";
innerBoxesToText("\[u+2260]", "InputText"):= "!=";
innerBoxesToText("\[u+2264]", "InputText"):= "<=";
innerBoxesToText("\[u+2265]", "InputText"):= ">=";
innerBoxesToText("\[U+27E6]", "InputText"):= "[[";
innerBoxesToText("\[U+27E7]", "InputText"):= "]]";

/*  TODO: {"a1", "b"}  becomes  "a1b"  but should be "a1 b" */
innerBoxesToText(~b:List, ~format)::= StringExpression @@ b.Map(innerBoxesToText(#, format)&)
innerBoxesToText(~b:/\/, ~format)::= StringExpression @@ b.Map(innerBoxesToText(#, format)&)
innerBoxesToText({"\[Piecewise]", ~~b}, ~format)::= "Piecewise(" ++ innerBoxesToText({b}, format) ++ ")"

innerBoxesToText(~csb:StringBox, ~format)::= Join @@ csb.Map(If(IsString(#), #, "\\(" ++ ToString(InputForm(#)).StringReplace({"\\" -> "\\\\", "\"" -> "\\\""}) ++ "\\)")&)

innerBoxesToText(SqrtBox(~x), ~format)::= "Sqrt(" ++ innerBoxesToText(x, format) ++ ")"
innerBoxesToText(RadicalBox(~x,~y), ~format)::= innerBoxesToText({x, SuperscriptBox(FractionBox("1", y))}, format)

innerBoxesToText(SuperscriptBox(~x), ~format)::= "^" ++ parenthesize(x, format)
innerBoxesToText({~x, SubscriptBox(~y)}, ~format)::= "Subscript(" ++ x ++ ", " ++ y ++ ")"
innerBoxesToText(SubscriptBox(~y), ~format)::= "Subscript(\"\", " ++ y ++ ")"
innerBoxesToText({~x, SubsuperscriptBox(~y,~z)}, ~format)::= "Subscript(" ++ x ++ ", " ++ y ++ ")^" ++ parenthesize(z, format)
innerBoxesToText(SubsuperscriptBox(~y,~z), ~format)::= "Subscript(\"\", " ++ y ++ ")^" ++ parenthesize(z, format)

innerBoxesToText(FractionBox(~x,~y), ~format)::= parenthesize(x, format) ++ "/" ++ parenthesize(y, format)

innerBoxesToText(UnderscriptBox(~x,~y), ~format)::= "Underscript(" ++ innerBoxesToText(x, format) ++ ", " ++ innerBoxesToText(y, format) ++ ")"
innerBoxesToText(OverscriptBox(~x,~y), ~format)::= "Overscript(" ++ innerBoxesToText(x, format) ++ ", " ++ innerBoxesToText(y, format) ++ ")"
innerBoxesToText(UnderoverscriptBox(~x,~y,~z), ~format)::= innerBoxesToText(OverscriptBox(UnderscriptBox(x, y), z), format)

innerBoxesToText(FrameBox(~x,~~~), ~format)::= "Framed(" ++ innerBoxesToText(x, format) ++ ")"
innerBoxesToText((StyleBox|TagBox|InterpretationBox|TooltipBox)(~x,~~~), ~format)::= innerBoxesToText(x, format)

innerBoxesToText(GridBox(~m,~~~), "InputText")::= "{" ++ m.Map(
	Function({row}, 
		"{" ++ row.Map(Function({x}, 
			innerBoxesToText(x, "InputText"))).Row(", ").ToString ++ "}")).Row(",\n").ToString ++ "}"
			
innerBoxesToText(GridBox(~m,~~~), "PlainText")::= m.Map(
	Function({row}, 
		row.Map(Function({x}, 
			innerBoxesToText(x, "PlainText"))).Row("\t").ToString)).Row("\n").ToString

innerBoxesToText(Section(BoxData(~x),~~~), ~format)::= innerBoxesToText(x, format)
innerBoxesToText(Section(~x,~~~), ~format)::= innerBoxesToText(x, format)

innerBoxesToText(SectionGroup(~s:List,~~~), ~format)::= s.Map(innerBoxesToText(#, format)&).Row("\n\n").ToString

innerBoxesToText(~x, ~format)::= x.RawBoxes.ToString /*"[$Failed : " ++ x.ToString ++ "]"*/


innerBoxesToText(~b:ButtonBox, ~format)::= buttonBoxToText(b, format)
buttonBoxToText(ButtonBox(~x,~~~), "PlainText")::= innerBoxesToText(x, "PlainText")
buttonBoxToText(ButtonBox(~x,~~~, ~(ButtonFunction,~f), ~~~), "InputText")::= "Button(" ++ innerBoxesToText(x, "PlainText") ++ ", " ++ HoldForm(InputForm(f)).ToString ++ ")"
buttonBoxToText(ButtonBox(~x,~~~), ~format)::= "Button(" ++ innerBoxesToText(x, "PlainText") ++ ")"
buttonBoxToText(~,~)::= "Button(...)"


End()

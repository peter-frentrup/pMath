
BeginPackage("FE`")

$FrontEndDirectory;
$MathShapers;
$FallbackFonts;
SymbolInfo;
BoxesToText;
SectionsToBoxes;

Begin("FE`Private`")

oldNamespacePath:= $NamespacePath;
$NamespacePath:= Prepend($NamespacePath, "FE`")


$FrontEndDirectory:= DirectoryName($Input)
Protect($FrontEndDirectory)


$MathShapers:= {"Cambria Math", "Asana Math", "Neo Euler", "XITS Math"}
Protect($MathShapers)


/* should not contain more than 6 fonts: */
$FallbackFonts:= {"pMathFallback", "Asana Math", "Arial Unicode MS", "Unifont"}
Protect($FallbackFonts)


$Path:= Prepend($Path, $FrontEndDirectory)

SymbolInfo(~name:String)::= Try(
	With(
		{sym:= name.MakeExpression(ParseSymbols -> False)},
		If(sym.Match(HoldComplete(Symbol(~))),
			Return(False));
		
		If(!sym.Match(HoldComplete(~s /? IsSymbol(Unevaluated(s)))),
			Return(True));
		
		If(Union($NamespacePath, {$Namespace}).Map(MakeExpression(# ++ name, ParseSymbols -> False)&).Cases(HoldComplete(Except(Symbol(~)))).Length() > 1,
			Return($Failed));
		
		Return(Namespace @@ sym =!= "Global`"
			|| Attributes @@ sym =!= {} 
			|| DownRules @@ sym =!= {} 
			|| UpRules @@ sym =!= {} 
			|| SubRules @@ sym =!= {} 
			|| OwnRules @@ sym =!= {});
		),
	Syntax)

SectionsToBoxes(~b)::= ReplaceRepeated(b, {Section(BoxData(~x), ~~~) :> {x, "\n"}, Section(~x, ~~~) :> {x, "\n"}, SectionGroup(~x, ~) :> x})

$NamespacePath:= oldNamespacePath

If(Length($CommandLine) > 1 && StringMatch($CommandLine[2], ~ ++ ".png"),
	FE`$WindowFrameImage:= $CommandLine[2];
	)

End()

EndPackage()

AutoLoad(Hold(Button, ButtonBox, Dynamic, DynamicBox, DynamicSetting, ProgressIndicator, ProgressIndicatorBox, Setter, SetterBar, SetterBox, Setting, Slider, SliderBox), 
	ToFileName({$FrontEndDirectory, "auto", "frontend"}, "guiboxes.pmath"));
Get(ToFileName({$FrontEndDirectory, "auto", "frontend"}, "boxestotext.pmath"))
